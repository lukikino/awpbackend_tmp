-- --------------------------------------------------------
-- 主機:                           127.0.0.1
-- 伺服器版本:                        5.7.21-log - MySQL Community Server (GPL)
-- 伺服器操作系統:                      Win64
-- HeidiSQL 版本:                  9.5.0.5196
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;


-- 傾印 pcb 的資料庫結構
DROP DATABASE IF EXISTS `pcb`;
CREATE DATABASE IF NOT EXISTS `pcb` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `pcb`;

-- 傾印  表格 pcb.behaviors 結構
DROP TABLE IF EXISTS `behaviors`;
CREATE TABLE IF NOT EXISTS `behaviors` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `pcb_id` int(10) unsigned NOT NULL,
  `round_id` int(10) unsigned NOT NULL,
  `enter_or_exit_free` bit(1) DEFAULT NULL,
  `scatter_select` int(11) DEFAULT NULL,
  `enter_or_exit_fever` bit(1) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `pcb_id` (`pcb_id`),
  CONSTRAINT `FK_behaviors_machines` FOREIGN KEY (`pcb_id`) REFERENCES `machines` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='使用者行為，一般不會紀錄的東西';

-- 正在傾印表格  pcb.behaviors 的資料：~0 rows (大約)
DELETE FROM `behaviors`;
/*!40000 ALTER TABLE `behaviors` DISABLE KEYS */;
/*!40000 ALTER TABLE `behaviors` ENABLE KEYS */;

-- 傾印  表格 pcb.currencies 結構
DROP TABLE IF EXISTS `currencies`;
CREATE TABLE IF NOT EXISTS `currencies` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT='幣別對應表';

-- 正在傾印表格  pcb.currencies 的資料：~1 rows (大約)
DELETE FROM `currencies`;
/*!40000 ALTER TABLE `currencies` DISABLE KEYS */;
INSERT INTO `currencies` (`id`, `name`) VALUES
	(1, 'twd');
/*!40000 ALTER TABLE `currencies` ENABLE KEYS */;

-- 傾印  程序 pcb.HeidiSQL_temproutine_1 結構
DROP PROCEDURE IF EXISTS `HeidiSQL_temproutine_1`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `HeidiSQL_temproutine_1`(
	IN `p_id` INT
,
	IN `p_pwd` VARCHAR(128)


)
CREATE TEMPORARY TABLE IF NOT EXISTS _tmp AS (
		SELECT id, account, created_time FROM users WHERE id = p_id AND encrypted_password = p_pwd
	);//
DELIMITER ;

-- 傾印  程序 pcb.HeidiSQL_temproutine_2 結構
DROP PROCEDURE IF EXISTS `HeidiSQL_temproutine_2`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `HeidiSQL_temproutine_2`(
	IN `p_id` INT
,
	IN `p_pwd` VARCHAR(128)


)
CREATE TEMPORARY TABLE IF NOT EXISTS _tmp AS (
		SELECT id, account, created_time FROM users WHERE id = p_id AND encrypted_password = p_pwd
	);//
DELIMITER ;

-- 傾印  表格 pcb.log_machine_change 結構
DROP TABLE IF EXISTS `log_machine_change`;
CREATE TABLE IF NOT EXISTS `log_machine_change` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `machine_id` int(10) unsigned NOT NULL,
  `action` int(10) unsigned NOT NULL,
  `memo` varchar(200) DEFAULT '',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `FK_log_machine_change_machines` (`machine_id`),
  CONSTRAINT `FK_log_machine_change_machines` FOREIGN KEY (`machine_id`) REFERENCES `machines` (`id`) ON DELETE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='機器更改紀錄';

-- 正在傾印表格  pcb.log_machine_change 的資料：~0 rows (大約)
DELETE FROM `log_machine_change`;
/*!40000 ALTER TABLE `log_machine_change` DISABLE KEYS */;
/*!40000 ALTER TABLE `log_machine_change` ENABLE KEYS */;

-- 傾印  表格 pcb.log_user_change 結構
DROP TABLE IF EXISTS `log_user_change`;
CREATE TABLE IF NOT EXISTS `log_user_change` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(10) unsigned DEFAULT NULL,
  `action` int(10) unsigned NOT NULL,
  `memo` varchar(200) DEFAULT '',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `FK_log_user_change_users` (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=630 DEFAULT CHARSET=utf8 COMMENT='使用者變更記錄';

-- 正在傾印表格  pcb.log_user_change 的資料：~552 rows (大約)
DELETE FROM `log_user_change`;
/*!40000 ALTER TABLE `log_user_change` DISABLE KEYS */;
INSERT INTO `log_user_change` (`id`, `user_id`, `action`, `memo`, `created_time`, `update_time`) VALUES
	(44, 2, 2, 'Set deactive by user 1', '2018-05-14 15:43:46', '2018-05-14 15:43:46'),
	(48, 2, 2, 'Set active by user 1', '2018-05-14 15:43:48', '2018-05-14 15:43:48'),
	(51, 2, 2, 'Set deactive by user 1', '2018-05-14 15:43:50', '2018-05-14 15:43:50'),
	(54, 2, 2, 'Set active by user 1', '2018-05-14 15:43:51', '2018-05-14 15:43:51'),
	(58, 2, 2, 'Set deactive by user 1', '2018-05-14 15:45:18', '2018-05-14 15:45:18'),
	(62, 2, 2, 'Set active by user 1', '2018-05-14 15:45:21', '2018-05-14 15:45:21'),
	(63, 2, 2, 'Set deactive by user 1', '2018-05-14 15:45:22', '2018-05-14 15:45:22'),
	(67, 2, 2, 'Set active by user 1', '2018-05-14 15:45:24', '2018-05-14 15:45:24'),
	(70, 2, 2, 'Set deactive by user 1', '2018-05-14 15:45:27', '2018-05-14 15:45:27'),
	(76, 2, 1, 'Password changed by user 1', '2018-05-14 16:16:06', '2018-05-14 16:16:06'),
	(85, 2, 1, 'Password changed by user 1', '2018-05-14 17:08:34', '2018-05-14 17:08:34'),
	(86, 2, 1, 'Password changed by user 1', '2018-05-14 17:09:09', '2018-05-14 17:09:09'),
	(89, 2, 2, 'Set active by user 1', '2018-05-14 17:11:22', '2018-05-14 17:11:22'),
	(91, NULL, 1, 'Try login not exist account: a.IP: d', '2018-05-31 16:33:20', '2018-05-31 16:33:20'),
	(92, NULL, 1, 'Try login not exist account: h.IP: 127.0.0.1:54861', '2018-05-31 16:33:36', '2018-05-31 16:33:36'),
	(93, NULL, 1, 'Try login not exist account: h.IP: 127.0.0.1:54204', '2018-05-31 16:33:36', '2018-05-31 16:33:36'),
	(94, NULL, 1, 'Try login not exist account: h.IP: 127.0.0.1:54204', '2018-05-31 16:33:55', '2018-05-31 16:33:55'),
	(95, NULL, 1, 'Try login not exist account: h.IP: d', '2018-05-31 16:34:40', '2018-05-31 16:34:40'),
	(96, NULL, 1, 'Try login not exist account: h.IP: 127.0.0.1:54204', '2018-05-31 16:35:01', '2018-05-31 16:35:01'),
	(97, NULL, 1, 'Try login not exist account: h.IP: 127.0.0.1:54204', '2018-05-31 16:35:06', '2018-05-31 16:35:06'),
	(98, NULL, 1, 'Try login not exist account: h.IP: 127.0.0.1:55038', '2018-05-31 16:35:50', '2018-05-31 16:35:50'),
	(99, NULL, 1, 'Try login not exist account: h.IP: 127.0.0.1:55038', '2018-05-31 16:36:29', '2018-05-31 16:36:29'),
	(100, NULL, 1, 'Try login not exist account: h.IP: 127.0.0.1:55038', '2018-05-31 16:36:40', '2018-05-31 16:36:40'),
	(101, NULL, 1, 'Try login not exist account: h.IP: 127.0.0.1:55147', '2018-05-31 16:36:40', '2018-05-31 16:36:40'),
	(102, NULL, 1, 'Try login not exist account: h.IP: 127.0.0.1:55251', '2018-05-31 16:37:38', '2018-05-31 16:37:38'),
	(103, NULL, 1, 'Try login not exist account: fdsf.IP: 127.0.0.1:55255', '2018-05-31 16:39:24', '2018-05-31 16:39:24'),
	(104, NULL, 1, 'Try login not exist account: fdsf.IP: 127.0.0.1:55255', '2018-05-31 16:39:31', '2018-05-31 16:39:31'),
	(105, 2, 1, 'Login failed: testtest1.IP:127.0.0.1:55255', '2018-05-31 16:41:17', '2018-05-31 16:41:17'),
	(106, 2, 1, 'Login failed: testtest1.IP:127.0.0.1:55255', '2018-05-31 16:41:27', '2018-05-31 16:41:27'),
	(107, 2, 1, 'Login failed: testtest1.IP:127.0.0.1:55255', '2018-05-31 16:41:30', '2018-05-31 16:41:30'),
	(108, 2, 1, 'Login failed: testtest1.IP:127.0.0.1:55255', '2018-05-31 16:41:31', '2018-05-31 16:41:31'),
	(109, 2, 1, 'Login failed: testtest1.IP:127.0.0.1:55255', '2018-05-31 16:41:33', '2018-05-31 16:41:33'),
	(110, NULL, 1, 'Try login not locked account: testtest1.IP: 127.0.0.1:55255', '2018-05-31 16:42:55', '2018-05-31 16:42:55'),
	(111, NULL, 1, 'Try login not locked account: testtest1.IP: 127.0.0.1:55255', '2018-05-31 16:42:58', '2018-05-31 16:42:58'),
	(112, NULL, 1, 'Try login not locked account: testtest1.IP: 127.0.0.1:55255', '2018-05-31 16:42:59', '2018-05-31 16:42:59'),
	(113, NULL, 1, 'Try login not locked account: testtest1.IP: 127.0.0.1:55255', '2018-05-31 16:43:00', '2018-05-31 16:43:00'),
	(114, NULL, 1, 'Try login not locked account: testtest1.IP: 127.0.0.1:55255', '2018-05-31 16:43:10', '2018-05-31 16:43:10'),
	(115, NULL, 1, 'Try login not locked account: testtest1.IP: 127.0.0.1:55255', '2018-05-31 16:43:12', '2018-05-31 16:43:12'),
	(116, NULL, 1, 'Try login not locked account: testtest1.IP: 127.0.0.1:55255', '2018-05-31 16:43:16', '2018-05-31 16:43:16'),
	(117, 2, 1, 'Login failed: testtest1.IP:127.0.0.1:55255', '2018-05-31 16:43:30', '2018-05-31 16:43:30'),
	(118, 2, 3, 'Password changed by user 1', '2018-05-31 16:45:58', '2018-05-31 16:45:58'),
	(119, 2, 1, 'Login: testtest1.IP:127.0.0.1:56012', '2018-05-31 16:46:03', '2018-05-31 16:46:03'),
	(120, 2, 1, 'Login: testtest1.IP:127.0.0.1:56707', '2018-05-31 16:53:08', '2018-05-31 16:53:08'),
	(121, 2, 1, 'Login: testtest1.IP:127.0.0.1:56849', '2018-05-31 16:54:52', '2018-05-31 16:54:52'),
	(122, 2, 1, 'Login: testtest1.IP:127.0.0.1:56846', '2018-05-31 16:56:21', '2018-05-31 16:56:21'),
	(123, 2, 1, 'Login: testtest1.IP:127.0.0.1:56707', '2018-05-31 17:00:07', '2018-05-31 17:00:07'),
	(124, 2, 1, 'Login: testtest1.IP:127.0.0.1:56849', '2018-05-31 17:02:12', '2018-05-31 17:02:12'),
	(125, 2, 1, 'Login: testtest1.IP:127.0.0.1:56849', '2018-05-31 17:02:19', '2018-05-31 17:02:19'),
	(126, 2, 1, 'Login: testtest1.IP:127.0.0.1:56707', '2018-05-31 17:03:16', '2018-05-31 17:03:16'),
	(127, NULL, 1, 'Try login not exist account: g.IP: 127.0.0.1:58142', '2018-05-31 17:08:07', '2018-05-31 17:08:07'),
	(128, NULL, 1, 'Try login not exist account: t.IP: 127.0.0.1:58267', '2018-05-31 17:08:57', '2018-05-31 17:08:57'),
	(129, NULL, 1, 'Try login not exist account: t.IP: 127.0.0.1:58266', '2018-05-31 17:08:57', '2018-05-31 17:08:57'),
	(130, 2, 1, 'Login: testtest1.IP:127.0.0.1:58264', '2018-05-31 17:09:12', '2018-05-31 17:09:12'),
	(131, 2, 1, 'Login: testtest1.IP:127.0.0.1:58266', '2018-05-31 17:09:12', '2018-05-31 17:09:12'),
	(132, NULL, 1, 'Try login not exist account: tt.IP: 127.0.0.1:58554', '2018-05-31 17:12:05', '2018-05-31 17:12:05'),
	(133, NULL, 1, 'Try login not exist account: tt.IP: 127.0.0.1:58556', '2018-05-31 17:12:05', '2018-05-31 17:12:05'),
	(134, NULL, 1, 'Try login not exist account: .IP: 127.0.0.1:59118', '2018-05-31 17:18:24', '2018-05-31 17:18:24'),
	(135, NULL, 1, 'Try login not exist account: .IP: 127.0.0.1:59113', '2018-05-31 17:19:02', '2018-05-31 17:19:02'),
	(136, NULL, 1, 'Try login not exist account: .IP: 127.0.0.1:59350', '2018-05-31 17:20:56', '2018-05-31 17:20:56'),
	(137, NULL, 1, 'Try login not exist account: g.IP: 127.0.0.1:59355', '2018-05-31 17:21:00', '2018-05-31 17:21:00'),
	(138, NULL, 1, 'Try login not exist account: g.IP: 127.0.0.1:59445', '2018-05-31 17:21:49', '2018-05-31 17:21:49'),
	(139, NULL, 1, 'Try login not exist account: fdf.IP: 127.0.0.1:59448', '2018-05-31 17:21:53', '2018-05-31 17:21:53'),
	(140, NULL, 1, 'Try login not exist account: fdf.IP: 127.0.0.1:59679', '2018-05-31 17:24:09', '2018-05-31 17:24:09'),
	(141, NULL, 1, 'Try login not exist account: fdf.IP: 127.0.0.1:59685', '2018-05-31 17:27:21', '2018-05-31 17:27:21'),
	(142, NULL, 1, 'Try login not exist account: fdf.IP: 127.0.0.1:60065', '2018-05-31 17:28:03', '2018-05-31 17:28:03'),
	(143, NULL, 1, 'Try login not exist account: fdf.IP: 127.0.0.1:60065', '2018-05-31 17:28:20', '2018-05-31 17:28:20'),
	(144, NULL, 1, 'Try login not exist account: fds.IP: 127.0.0.1:60068', '2018-05-31 17:28:30', '2018-05-31 17:28:30'),
	(145, NULL, 1, 'Try login not exist account: f.IP: 127.0.0.1:60214', '2018-05-31 17:29:31', '2018-05-31 17:29:31'),
	(146, 2, 1, 'Login: testtest1.IP:127.0.0.1:60205', '2018-05-31 17:29:41', '2018-05-31 17:29:41'),
	(147, 2, 1, 'Login: testtest1.IP:127.0.0.1:60323', '2018-05-31 17:30:36', '2018-05-31 17:30:36'),
	(148, 2, 1, 'Login: testtest1.IP:127.0.0.1:60336', '2018-05-31 17:30:48', '2018-05-31 17:30:48'),
	(149, 2, 1, 'Login: testtest1.IP:127.0.0.1:60768', '2018-05-31 17:35:04', '2018-05-31 17:35:04'),
	(150, 2, 1, 'Login: testtest1.IP:127.0.0.1:60769', '2018-05-31 17:36:06', '2018-05-31 17:36:06'),
	(151, 2, 1, 'Login: testtest1.IP:127.0.0.1:60770', '2018-05-31 17:36:17', '2018-05-31 17:36:17'),
	(152, 2, 1, 'Login: testtest1.IP:127.0.0.1:61132', '2018-05-31 17:38:53', '2018-05-31 17:38:53'),
	(153, 2, 1, 'Login: testtest1.IP:127.0.0.1:62463', '2018-05-31 17:52:35', '2018-05-31 17:52:35'),
	(154, 2, 1, 'Login: testtest1.IP:127.0.0.1:62933', '2018-05-31 17:57:25', '2018-05-31 17:57:25'),
	(155, 2, 1, 'Login: testtest1.IP:127.0.0.1:63106', '2018-05-31 17:58:49', '2018-05-31 17:58:49'),
	(156, 2, 1, 'Login: testtest1.IP:127.0.0.1:63149', '2018-05-31 17:59:12', '2018-05-31 17:59:12'),
	(157, 2, 1, 'Login failed: testtest1.IP:127.0.0.1:63261', '2018-05-31 18:00:09', '2018-05-31 18:00:09'),
	(158, 2, 1, 'Login: testtest1.IP:127.0.0.1:63561', '2018-05-31 18:03:03', '2018-05-31 18:03:03'),
	(159, 2, 1, 'Login: testtest1.IP:127.0.0.1:63811', '2018-05-31 18:05:16', '2018-05-31 18:05:16'),
	(160, 2, 1, 'Login: testtest1.IP:127.0.0.1:64576', '2018-05-31 18:13:39', '2018-05-31 18:13:39'),
	(161, 2, 1, 'Login: testtest1.IP:127.0.0.1:49355', '2018-05-31 18:25:50', '2018-05-31 18:25:50'),
	(162, 2, 1, 'Login: testtest1.IP:127.0.0.1:49782', '2018-05-31 18:29:51', '2018-05-31 18:29:51'),
	(163, 2, 1, 'Login: testtest1.IP:127.0.0.1:50381', '2018-05-31 18:35:45', '2018-05-31 18:35:45'),
	(164, 2, 1, 'Login: testtest1.IP:127.0.0.1:50424', '2018-05-31 18:36:18', '2018-05-31 18:36:18'),
	(165, 2, 1, 'Login: testtest1.IP:127.0.0.1:50508', '2018-05-31 18:36:44', '2018-05-31 18:36:44'),
	(166, 2, 1, 'Login: testtest1.IP:127.0.0.1:50648', '2018-05-31 18:37:49', '2018-05-31 18:37:49'),
	(167, 2, 1, 'Login: testtest1.IP:127.0.0.1:50678', '2018-05-31 18:38:07', '2018-05-31 18:38:07'),
	(168, 2, 1, 'Login: testtest1.IP:127.0.0.1:63205', '2018-06-01 13:47:24', '2018-06-01 13:47:24'),
	(169, 2, 1, 'Login: testtest1.IP:127.0.0.1:65246', '2018-06-01 14:10:06', '2018-06-01 14:10:06'),
	(170, 2, 1, 'Login: testtest1.IP:127.0.0.1:50340', '2018-06-01 14:26:07', '2018-06-01 14:26:07'),
	(171, 2, 1, 'Login: testtest1.IP:127.0.0.1:50339', '2018-06-01 14:26:07', '2018-06-01 14:26:07'),
	(172, 2, 1, 'Login: testtest1.IP:127.0.0.1:50343', '2018-06-01 14:26:07', '2018-06-01 14:26:07'),
	(173, 2, 1, 'Login: testtest1.IP:127.0.0.1:50344', '2018-06-01 14:26:07', '2018-06-01 14:26:07'),
	(174, 2, 1, 'Login: testtest1.IP:127.0.0.1:50342', '2018-06-01 14:26:07', '2018-06-01 14:26:07'),
	(175, 2, 1, 'Login: testtest1.IP:127.0.0.1:50341', '2018-06-01 14:26:07', '2018-06-01 14:26:07'),
	(176, 2, 1, 'Login: testtest1.IP:127.0.0.1:50369', '2018-06-01 14:26:07', '2018-06-01 14:26:07'),
	(177, 2, 1, 'Login: testtest1.IP:127.0.0.1:50388', '2018-06-01 14:26:20', '2018-06-01 14:26:20'),
	(178, 2, 1, 'Login: testtest1.IP:127.0.0.1:50392', '2018-06-01 14:26:20', '2018-06-01 14:26:20'),
	(179, 2, 1, 'Login: testtest1.IP:127.0.0.1:50396', '2018-06-01 14:26:22', '2018-06-01 14:26:22'),
	(180, 2, 1, 'Login: testtest1.IP:127.0.0.1:50452', '2018-06-01 14:26:53', '2018-06-01 14:26:53'),
	(181, 2, 1, 'Login: testtest1.IP:127.0.0.1:50456', '2018-06-01 14:26:53', '2018-06-01 14:26:53'),
	(182, 2, 1, 'Login: testtest1.IP:127.0.0.1:50462', '2018-06-01 14:26:55', '2018-06-01 14:26:55'),
	(183, 2, 1, 'Login: testtest1.IP:127.0.0.1:50466', '2018-06-01 14:26:56', '2018-06-01 14:26:56'),
	(184, 2, 1, 'Login: testtest1.IP:127.0.0.1:50468', '2018-06-01 14:26:57', '2018-06-01 14:26:57'),
	(185, 2, 1, 'Login: testtest1.IP:127.0.0.1:50476', '2018-06-01 14:27:00', '2018-06-01 14:27:00'),
	(186, 2, 1, 'Login: testtest1.IP:127.0.0.1:50474', '2018-06-01 14:27:00', '2018-06-01 14:27:00'),
	(187, 2, 1, 'Login: testtest1.IP:127.0.0.1:50473', '2018-06-01 14:27:00', '2018-06-01 14:27:00'),
	(188, 2, 1, 'Login: testtest1.IP:127.0.0.1:50475', '2018-06-01 14:27:00', '2018-06-01 14:27:00'),
	(189, 2, 1, 'Login: testtest1.IP:127.0.0.1:50477', '2018-06-01 14:27:00', '2018-06-01 14:27:00'),
	(190, 2, 1, 'Login: testtest1.IP:127.0.0.1:50472', '2018-06-01 14:27:01', '2018-06-01 14:27:01'),
	(191, 2, 1, 'Login: testtest1.IP:127.0.0.1:50489', '2018-06-01 14:27:01', '2018-06-01 14:27:01'),
	(192, 2, 1, 'Login: testtest1.IP:127.0.0.1:50569', '2018-06-01 14:27:55', '2018-06-01 14:27:55'),
	(193, 2, 1, 'Login: testtest1.IP:127.0.0.1:50574', '2018-06-01 14:27:57', '2018-06-01 14:27:57'),
	(194, 2, 1, 'Login: testtest1.IP:127.0.0.1:50578', '2018-06-01 14:27:58', '2018-06-01 14:27:58'),
	(195, 2, 1, 'Login: testtest1.IP:127.0.0.1:50583', '2018-06-01 14:28:02', '2018-06-01 14:28:02'),
	(196, 2, 1, 'Login: testtest1.IP:127.0.0.1:50581', '2018-06-01 14:28:02', '2018-06-01 14:28:02'),
	(197, 2, 1, 'Login: testtest1.IP:127.0.0.1:50584', '2018-06-01 14:28:02', '2018-06-01 14:28:02'),
	(198, 2, 1, 'Login: testtest1.IP:127.0.0.1:50585', '2018-06-01 14:28:02', '2018-06-01 14:28:02'),
	(199, 2, 1, 'Login: testtest1.IP:127.0.0.1:50580', '2018-06-01 14:28:03', '2018-06-01 14:28:03'),
	(200, 2, 1, 'Login: testtest1.IP:127.0.0.1:50582', '2018-06-01 14:28:03', '2018-06-01 14:28:03'),
	(201, 2, 1, 'Login: testtest1.IP:127.0.0.1:50598', '2018-06-01 14:28:03', '2018-06-01 14:28:03'),
	(202, 2, 1, 'Login: testtest1.IP:127.0.0.1:50676', '2018-06-01 14:28:49', '2018-06-01 14:28:49'),
	(203, 2, 1, 'Login: testtest1.IP:127.0.0.1:50766', '2018-06-01 14:29:42', '2018-06-01 14:29:42'),
	(204, 2, 1, 'Login: testtest1.IP:127.0.0.1:51641', '2018-06-01 14:38:46', '2018-06-01 14:38:46'),
	(205, 2, 1, 'Login: testtest1.IP:127.0.0.1:51787', '2018-06-01 14:41:40', '2018-06-01 14:41:40'),
	(206, 2, 1, 'Login: testtest1.IP:127.0.0.1:51783', '2018-06-01 14:41:47', '2018-06-01 14:41:47'),
	(207, NULL, 1, 'Try login not exist account: testtest11.IP: 127.0.0.1:51783', '2018-06-01 14:41:56', '2018-06-01 14:41:56'),
	(208, NULL, 1, 'Try login not exist account: testtest1333.IP: 127.0.0.1:51785', '2018-06-01 14:42:02', '2018-06-01 14:42:02'),
	(209, NULL, 1, 'Try login not exist account: testtest1343.IP: 127.0.0.1:51787', '2018-06-01 14:42:24', '2018-06-01 14:42:24'),
	(210, NULL, 1, 'Try login not exist account: testtest1ff.IP: 127.0.0.1:51782', '2018-06-01 14:42:32', '2018-06-01 14:42:32'),
	(211, NULL, 1, 'Try login not exist account: testtest1ff.IP: 127.0.0.1:52145', '2018-06-01 14:43:52', '2018-06-01 14:43:52'),
	(212, NULL, 1, 'Try login not exist account: testtest1ff.IP: 127.0.0.1:52144', '2018-06-01 14:43:56', '2018-06-01 14:43:56'),
	(213, NULL, 1, 'Try login not exist account: testtest1ff.IP: 127.0.0.1:52162', '2018-06-01 14:43:56', '2018-06-01 14:43:56'),
	(214, 2, 1, 'Login: testtest1.IP:127.0.0.1:52247', '2018-06-01 14:44:43', '2018-06-01 14:44:43'),
	(215, 2, 1, 'Login failed: testtest1.IP:127.0.0.1:52246', '2018-06-01 14:44:48', '2018-06-01 14:44:48'),
	(216, 2, 1, 'Login failed: testtest1.IP:127.0.0.1:52243', '2018-06-01 14:44:52', '2018-06-01 14:44:52'),
	(217, NULL, 1, 'Try login not exist account: testtest122.IP: 127.0.0.1:52247', '2018-06-01 14:44:55', '2018-06-01 14:44:55'),
	(218, 2, 1, 'Login failed: testtest1.IP:127.0.0.1:52248', '2018-06-01 14:45:01', '2018-06-01 14:45:01'),
	(219, 2, 1, 'Login failed: testtest1.IP:127.0.0.1:52243', '2018-06-01 14:45:03', '2018-06-01 14:45:03'),
	(220, NULL, 1, 'Try login not locked account: testtest1.IP: 127.0.0.1:52247', '2018-06-01 14:45:07', '2018-06-01 14:45:07'),
	(221, NULL, 1, 'Try login not locked account: testtest1.IP: 127.0.0.1:52245', '2018-06-01 14:45:16', '2018-06-01 14:45:16'),
	(222, NULL, 1, 'Try login not locked account: testtest1.IP: 127.0.0.1:52246', '2018-06-01 14:45:28', '2018-06-01 14:45:28'),
	(223, 2, 1, 'Login: testtest1.IP:127.0.0.1:52244', '2018-06-01 14:45:40', '2018-06-01 14:45:40'),
	(224, NULL, 1, 'Try login not exist account: testtest17.IP: 127.0.0.1:52248', '2018-06-01 14:45:47', '2018-06-01 14:45:47'),
	(225, 2, 1, 'Login: testtest1.IP:127.0.0.1:52248', '2018-06-01 14:46:17', '2018-06-01 14:46:17'),
	(226, 2, 1, 'Login failed: testtest1.IP:127.0.0.1:52244', '2018-06-01 14:46:29', '2018-06-01 14:46:29'),
	(227, 2, 1, 'Login: testtest1.IP:127.0.0.1:52248', '2018-06-01 14:46:32', '2018-06-01 14:46:32'),
	(228, 2, 1, 'Login: testtest1.IP:127.0.0.1:52947', '2018-06-01 14:51:58', '2018-06-01 14:51:58'),
	(229, 2, 1, 'Login: testtest1.IP:127.0.0.1:53057', '2018-06-01 14:52:53', '2018-06-01 14:52:53'),
	(230, 2, 1, 'Login: testtest1.IP:127.0.0.1:53203', '2018-06-01 14:54:25', '2018-06-01 14:54:25'),
	(231, 2, 1, 'Login: testtest1.IP:127.0.0.1:53273', '2018-06-01 14:55:13', '2018-06-01 14:55:13'),
	(232, 2, 1, 'Login: testtest1.IP:127.0.0.1:53395', '2018-06-01 14:55:58', '2018-06-01 14:55:58'),
	(233, 2, 1, 'Login: testtest1.IP:127.0.0.1:53401', '2018-06-01 14:56:13', '2018-06-01 14:56:13'),
	(234, 2, 1, 'Login: testtest1.IP:127.0.0.1:53485', '2018-06-01 14:56:55', '2018-06-01 14:56:55'),
	(235, 2, 1, 'Login: testtest1.IP:127.0.0.1:53484', '2018-06-01 14:59:58', '2018-06-01 14:59:58'),
	(236, 2, 1, 'Login: testtest1.IP:127.0.0.1:57238', '2018-06-01 15:53:05', '2018-06-01 15:53:05'),
	(237, 2, 1, 'Login: testtest1.IP:127.0.0.1:57233', '2018-06-01 15:56:06', '2018-06-01 15:56:06'),
	(238, 2, 1, 'Login: testtest1.IP:127.0.0.1:57233', '2018-06-01 15:56:11', '2018-06-01 15:56:11'),
	(239, 2, 1, 'Login: testtest1.IP:127.0.0.1:57238', '2018-06-01 15:56:17', '2018-06-01 15:56:17'),
	(240, 2, 1, 'Login: testtest1.IP:127.0.0.1:59375', '2018-06-01 15:58:08', '2018-06-01 15:58:08'),
	(241, 2, 1, 'Login: testtest1.IP:127.0.0.1:59380', '2018-06-01 15:59:02', '2018-06-01 15:59:02'),
	(242, 2, 1, 'Login: testtest1.IP:127.0.0.1:59378', '2018-06-01 15:59:07', '2018-06-01 15:59:07'),
	(243, 2, 1, 'Login: testtest1.IP:127.0.0.1:59377', '2018-06-01 15:59:18', '2018-06-01 15:59:18'),
	(244, 2, 1, 'Login: testtest1.IP:127.0.0.1:59690', '2018-06-01 16:01:16', '2018-06-01 16:01:16'),
	(245, 2, 1, 'Login: testtest1.IP:127.0.0.1:59690', '2018-06-01 16:01:27', '2018-06-01 16:01:27'),
	(246, 2, 1, 'Login: testtest1.IP:127.0.0.1:60234', '2018-06-01 16:06:34', '2018-06-01 16:06:34'),
	(247, 2, 1, 'Login: testtest1.IP:127.0.0.1:60363', '2018-06-01 16:07:35', '2018-06-01 16:07:35'),
	(248, 2, 1, 'Login: testtest1.IP:127.0.0.1:60540', '2018-06-01 16:09:19', '2018-06-01 16:09:19'),
	(249, 2, 1, 'Login: testtest1.IP:127.0.0.1:60535', '2018-06-01 16:09:26', '2018-06-01 16:09:26'),
	(250, 2, 1, 'Login: testtest1.IP:127.0.0.1:60537', '2018-06-01 16:09:33', '2018-06-01 16:09:33'),
	(251, 2, 1, 'Login: testtest1.IP:127.0.0.1:60638', '2018-06-01 16:10:13', '2018-06-01 16:10:13'),
	(252, 2, 1, 'Login: testtest1.IP:127.0.0.1:60635', '2018-06-01 16:10:54', '2018-06-01 16:10:54'),
	(253, 2, 1, 'Login: testtest1.IP:127.0.0.1:61018', '2018-06-01 16:14:23', '2018-06-01 16:14:23'),
	(254, 2, 1, 'Login: testtest1.IP:127.0.0.1:61290', '2018-06-01 16:17:12', '2018-06-01 16:17:12'),
	(255, 2, 1, 'Login: testtest1.IP:127.0.0.1:61348', '2018-06-01 16:17:42', '2018-06-01 16:17:42'),
	(256, 2, 1, 'Login: testtest1.IP:127.0.0.1:61344', '2018-06-01 16:17:46', '2018-06-01 16:17:46'),
	(257, 2, 1, 'Login: testtest1.IP:127.0.0.1:61346', '2018-06-01 16:18:07', '2018-06-01 16:18:07'),
	(258, 2, 1, 'Login: testtest1.IP:127.0.0.1:61343', '2018-06-01 16:18:15', '2018-06-01 16:18:15'),
	(259, 2, 1, 'Login: testtest1.IP:127.0.0.1:61462', '2018-06-01 16:18:49', '2018-06-01 16:18:49'),
	(260, 2, 1, 'Login: testtest1.IP:127.0.0.1:61463', '2018-06-01 16:18:54', '2018-06-01 16:18:54'),
	(261, 2, 1, 'Login: testtest1.IP:127.0.0.1:61485', '2018-06-01 16:19:55', '2018-06-01 16:19:55'),
	(262, 2, 1, 'Login: testtest1.IP:127.0.0.1:61864', '2018-06-01 16:22:51', '2018-06-01 16:22:51'),
	(263, 2, 1, 'Login: testtest1.IP:127.0.0.1:62033', '2018-06-01 16:24:37', '2018-06-01 16:24:37'),
	(264, 2, 1, 'Login: testtest1.IP:127.0.0.1:62090', '2018-06-01 16:25:06', '2018-06-01 16:25:06'),
	(265, 2, 1, 'Login: testtest1.IP:127.0.0.1:62163', '2018-06-01 16:25:47', '2018-06-01 16:25:47'),
	(266, 2, 1, 'Login: testtest1.IP:127.0.0.1:62208', '2018-06-01 16:26:15', '2018-06-01 16:26:15'),
	(267, 2, 1, 'Login: testtest1.IP:127.0.0.1:62343', '2018-06-01 16:27:33', '2018-06-01 16:27:33'),
	(268, 2, 1, 'Login: testtest1.IP:127.0.0.1:62413', '2018-06-01 16:28:10', '2018-06-01 16:28:10'),
	(269, 2, 1, 'Login: testtest1.IP:127.0.0.1:62409', '2018-06-01 16:28:22', '2018-06-01 16:28:22'),
	(270, 2, 1, 'Login: testtest1.IP:127.0.0.1:62454', '2018-06-01 16:28:28', '2018-06-01 16:28:28'),
	(271, 2, 1, 'Login: testtest1.IP:127.0.0.1:62480', '2018-06-01 16:28:36', '2018-06-01 16:28:36'),
	(272, 2, 1, 'Login: testtest1.IP:127.0.0.1:62513', '2018-06-01 16:28:50', '2018-06-01 16:28:50'),
	(273, 2, 1, 'Login: testtest1.IP:127.0.0.1:55967', '2018-06-01 18:03:11', '2018-06-01 18:03:11'),
	(274, 2, 1, 'Login: testtest1.IP:127.0.0.1:64502', '2018-06-04 10:53:05', '2018-06-04 10:53:05'),
	(275, 2, 1, 'Login: testtest1.IP:127.0.0.1:51404', '2018-06-04 14:41:04', '2018-06-04 14:41:04'),
	(276, 2, 1, 'Login: testtest1.IP:127.0.0.1:60180', '2018-06-05 11:48:39', '2018-06-05 11:48:39'),
	(277, 2, 1, 'Login: testtest1.IP:127.0.0.1:60249', '2018-06-05 11:49:11', '2018-06-05 11:49:11'),
	(278, 2, 1, 'Login: testtest1.IP:127.0.0.1:60342', '2018-06-05 11:49:54', '2018-06-05 11:49:54'),
	(279, 2, 1, 'Login: testtest1.IP:127.0.0.1:60515', '2018-06-05 11:51:46', '2018-06-05 11:51:46'),
	(280, 2, 1, 'Login: testtest1.IP:127.0.0.1:60700', '2018-06-05 11:53:47', '2018-06-05 11:53:47'),
	(281, 2, 1, 'Login: testtest1.IP:127.0.0.1:60868', '2018-06-05 11:55:42', '2018-06-05 11:55:42'),
	(282, 2, 1, 'Login: testtest1.IP:127.0.0.1:60912', '2018-06-05 11:56:07', '2018-06-05 11:56:07'),
	(283, 2, 1, 'Login: testtest1.IP:127.0.0.1:61135', '2018-06-05 11:58:14', '2018-06-05 11:58:14'),
	(284, 2, 1, 'Login: testtest1.IP:127.0.0.1:61276', '2018-06-05 11:59:49', '2018-06-05 11:59:49'),
	(285, 2, 1, 'Login: testtest1.IP:127.0.0.1:59102', '2018-06-05 15:15:57', '2018-06-05 15:15:57'),
	(286, 2, 1, 'Login: testtest1.IP:127.0.0.1:59205', '2018-06-05 15:16:56', '2018-06-05 15:16:56'),
	(287, 2, 1, 'Login: testtest1.IP:127.0.0.1:59255', '2018-06-05 15:17:18', '2018-06-05 15:17:18'),
	(288, 2, 1, 'Login: testtest1.IP:127.0.0.1:59372', '2018-06-05 15:18:21', '2018-06-05 15:18:21'),
	(289, 2, 1, 'Login: testtest1.IP:127.0.0.1:59731', '2018-06-05 15:21:52', '2018-06-05 15:21:52'),
	(290, 2, 1, 'Login: testtest1.IP:127.0.0.1:59887', '2018-06-05 15:23:09', '2018-06-05 15:23:09'),
	(291, 2, 1, 'Login: testtest1.IP:127.0.0.1:59885', '2018-06-05 15:25:39', '2018-06-05 15:25:39'),
	(292, 2, 1, 'Login: testtest1.IP:127.0.0.1:60233', '2018-06-05 15:26:52', '2018-06-05 15:26:52'),
	(293, 2, 1, 'Login: testtest1.IP:127.0.0.1:60232', '2018-06-05 15:27:09', '2018-06-05 15:27:09'),
	(294, 2, 1, 'Login: testtest1.IP:127.0.0.1:60595', '2018-06-05 15:30:18', '2018-06-05 15:30:18'),
	(295, NULL, 1, 'Try login not exist account: testtest2.IP: 127.0.0.1:61037', '2018-06-05 15:34:55', '2018-06-05 15:34:55'),
	(296, 2, 1, 'Login: testtest1.IP:127.0.0.1:61034', '2018-06-05 15:35:02', '2018-06-05 15:35:02'),
	(297, 2, 1, 'Login: testtest1.IP:127.0.0.1:61125', '2018-06-05 15:35:47', '2018-06-05 15:35:47'),
	(298, 2, 1, 'Login: testtest1.IP:127.0.0.1:61266', '2018-06-05 15:37:11', '2018-06-05 15:37:11'),
	(299, 2, 1, 'Login: testtest1.IP:127.0.0.1:61521', '2018-06-05 15:39:57', '2018-06-05 15:39:57'),
	(300, 204, 1, 'Login: testtest2.IP:127.0.0.1:61584', '2018-06-05 15:40:36', '2018-06-05 15:40:36'),
	(301, 204, 1, 'Login: testtest2.IP:127.0.0.1:61586', '2018-06-05 15:41:44', '2018-06-05 15:41:44'),
	(302, NULL, 1, 'Try login not exist account: testtest12.IP: 127.0.0.1:61582', '2018-06-05 15:41:56', '2018-06-05 15:41:56'),
	(303, 2, 1, 'Login: testtest1.IP:127.0.0.1:61594', '2018-06-05 15:42:02', '2018-06-05 15:42:02'),
	(304, 204, 1, 'Login: testtest2.IP:127.0.0.1:61583', '2018-06-05 15:42:11', '2018-06-05 15:42:11'),
	(305, 2, 1, 'Login: testtest1.IP:127.0.0.1:62982', '2018-06-05 15:55:19', '2018-06-05 15:55:19'),
	(306, NULL, 1, 'Try login not exist account: testtest12.IP: 127.0.0.1:62986', '2018-06-05 15:55:27', '2018-06-05 15:55:27'),
	(307, 204, 1, 'Login: testtest2.IP:127.0.0.1:62988', '2018-06-05 15:55:33', '2018-06-05 15:55:33'),
	(308, 204, 1, 'Login: testtest2.IP:127.0.0.1:64449', '2018-06-05 16:11:08', '2018-06-05 16:11:08'),
	(309, 204, 1, 'Login: testtest2.IP:127.0.0.1:64952', '2018-06-05 16:16:52', '2018-06-05 16:16:52'),
	(310, 204, 1, 'Login: testtest2.IP:127.0.0.1:51978', '2018-06-05 16:56:19', '2018-06-05 16:56:19'),
	(311, 204, 1, 'Login: testtest2.IP:127.0.0.1:52260', '2018-06-05 16:59:05', '2018-06-05 16:59:05'),
	(312, 204, 1, 'Login: testtest2.IP:127.0.0.1:52457', '2018-06-05 17:01:08', '2018-06-05 17:01:08'),
	(313, 204, 1, 'Login: testtest2.IP:127.0.0.1:52948', '2018-06-05 17:06:33', '2018-06-05 17:06:33'),
	(314, 204, 1, 'Login: testtest2.IP:127.0.0.1:52944', '2018-06-05 17:06:43', '2018-06-05 17:06:43'),
	(315, 204, 1, 'Login: testtest2.IP:127.0.0.1:52944', '2018-06-05 17:08:01', '2018-06-05 17:08:01'),
	(316, 204, 1, 'Login: testtest2.IP:127.0.0.1:52947', '2018-06-05 17:09:06', '2018-06-05 17:09:06'),
	(317, 204, 1, 'Login: testtest2.IP:127.0.0.1:52948', '2018-06-05 17:09:16', '2018-06-05 17:09:16'),
	(318, 204, 1, 'Login: testtest2.IP:127.0.0.1:52947', '2018-06-05 17:09:44', '2018-06-05 17:09:44'),
	(319, 204, 1, 'Login: testtest2.IP:127.0.0.1:52949', '2018-06-05 17:10:01', '2018-06-05 17:10:01'),
	(320, 204, 1, 'Login: testtest2.IP:127.0.0.1:52948', '2018-06-05 17:15:54', '2018-06-05 17:15:54'),
	(321, 204, 1, 'Login: testtest2.IP:127.0.0.1:52944', '2018-06-05 17:16:03', '2018-06-05 17:16:03'),
	(322, 204, 1, 'Login: testtest2.IP:127.0.0.1:52944', '2018-06-05 17:16:22', '2018-06-05 17:16:22'),
	(323, 204, 1, 'Login: testtest2.IP:127.0.0.1:52945', '2018-06-05 17:16:31', '2018-06-05 17:16:31'),
	(324, 204, 1, 'Login: testtest2.IP:127.0.0.1:52946', '2018-06-05 17:16:38', '2018-06-05 17:16:38'),
	(325, 204, 1, 'Login: testtest2.IP:127.0.0.1:53904', '2018-06-05 17:26:26', '2018-06-05 17:26:26'),
	(326, 204, 1, 'Login: testtest2.IP:127.0.0.1:53903', '2018-06-05 17:26:58', '2018-06-05 17:26:58'),
	(327, 204, 1, 'Login: testtest2.IP:127.0.0.1:53904', '2018-06-05 17:27:37', '2018-06-05 17:27:37'),
	(328, 204, 1, 'Login: testtest2.IP:127.0.0.1:53904', '2018-06-05 17:27:50', '2018-06-05 17:27:50'),
	(329, 204, 1, 'Login: testtest2.IP:127.0.0.1:55391', '2018-06-05 17:32:34', '2018-06-05 17:32:34'),
	(330, 204, 1, 'Login: testtest2.IP:127.0.0.1:55397', '2018-06-05 17:32:57', '2018-06-05 17:32:57'),
	(331, 204, 1, 'Login: testtest2.IP:127.0.0.1:55391', '2018-06-05 17:33:04', '2018-06-05 17:33:04'),
	(332, 204, 1, 'Login failed: testtest2.IP:127.0.0.1:55396', '2018-06-05 17:33:13', '2018-06-05 17:33:13'),
	(333, 204, 1, 'Login: testtest2.IP:127.0.0.1:55395', '2018-06-05 17:33:26', '2018-06-05 17:33:26'),
	(334, 2, 1, 'Login: testtest1.IP:127.0.0.1:55283', '2018-06-05 17:33:33', '2018-06-05 17:33:33'),
	(335, 204, 1, 'Login: testtest2.IP:127.0.0.1:55516', '2018-06-05 17:33:54', '2018-06-05 17:33:54'),
	(336, 204, 1, 'Login: testtest2.IP:127.0.0.1:55518', '2018-06-05 17:34:11', '2018-06-05 17:34:11'),
	(337, 204, 1, 'Login: testtest2.IP:127.0.0.1:56165', '2018-06-05 17:43:14', '2018-06-05 17:43:14'),
	(338, 204, 1, 'Login: testtest2.IP:127.0.0.1:56458', '2018-06-05 17:43:57', '2018-06-05 17:43:57'),
	(339, 2, 1, 'Login: testtest1.IP:127.0.0.1:56512', '2018-06-05 17:44:20', '2018-06-05 17:44:20'),
	(340, 2, 1, 'Login: testtest1.IP:127.0.0.1:58435', '2018-06-05 18:04:54', '2018-06-05 18:04:54'),
	(341, 204, 1, 'Login failed: testtest2.IP:127.0.0.1:57987', '2018-06-05 18:05:01', '2018-06-05 18:05:01'),
	(342, 204, 1, 'Login: testtest2.IP:127.0.0.1:58433', '2018-06-05 18:05:08', '2018-06-05 18:05:08'),
	(343, 2, 1, 'Login: testtest1.IP:127.0.0.1:58690', '2018-06-05 18:07:41', '2018-06-05 18:07:41'),
	(344, 204, 1, 'Login: testtest2.IP:127.0.0.1:65253', '2018-06-06 17:33:04', '2018-06-06 17:33:04'),
	(345, 2, 1, 'Login: testtest1.IP:127.0.0.1:65255', '2018-06-06 17:33:13', '2018-06-06 17:33:13'),
	(346, 2, 1, 'Login: testtest1.IP:127.0.0.1:49208', '2018-06-06 17:36:31', '2018-06-06 17:36:31'),
	(347, 2, 1, 'Login: testtest1.IP:127.0.0.1:49347', '2018-06-06 17:38:02', '2018-06-06 17:38:02'),
	(348, 2, 1, 'Login: testtest1.IP:127.0.0.1:56644', '2018-06-07 14:26:36', '2018-06-07 14:26:36'),
	(349, 204, 1, 'Login: testtest2.IP:127.0.0.1:57986', '2018-06-07 14:41:28', '2018-06-07 14:41:28'),
	(350, 204, 1, 'Login: testtest2.IP:127.0.0.1:57985', '2018-06-07 14:41:52', '2018-06-07 14:41:52'),
	(351, 2, 1, 'Login: testtest1.IP:127.0.0.1:62347', '2018-06-07 15:32:12', '2018-06-07 15:32:12'),
	(352, 2, 1, 'Login: testtest1.IP:127.0.0.1:62822', '2018-06-07 15:37:14', '2018-06-07 15:37:14'),
	(353, 2, 1, 'Login: testtest1.IP:127.0.0.1:62926', '2018-06-07 15:38:03', '2018-06-07 15:38:03'),
	(354, 205, 1, 'Login: testtest23.IP:127.0.0.1:63078', '2018-06-07 15:39:39', '2018-06-07 15:39:39'),
	(355, 205, 3, 'Password changed by user 205', '2018-06-07 15:40:57', '2018-06-07 15:40:57'),
	(356, 205, 2, 'Set deactive by user 205', '2018-06-07 15:41:57', '2018-06-07 15:41:57'),
	(357, 205, 2, 'Set active by user 205', '2018-06-07 15:41:59', '2018-06-07 15:41:59'),
	(358, 205, 2, 'Set deactive by user 205', '2018-06-07 15:41:59', '2018-06-07 15:41:59'),
	(359, 205, 2, 'Set active by user 205', '2018-06-07 15:42:01', '2018-06-07 15:42:01'),
	(360, 195, 2, 'Set deactive by user 205', '2018-06-07 15:42:01', '2018-06-07 15:42:01'),
	(361, 195, 2, 'Set active by user 205', '2018-06-07 15:42:02', '2018-06-07 15:42:02'),
	(362, 205, 1, 'Login: testtest23.IP:127.0.0.1:51863', '2018-06-07 16:44:29', '2018-06-07 16:44:29'),
	(363, 205, 1, 'Login: testtest23.IP:127.0.0.1:53105', '2018-06-07 16:54:26', '2018-06-07 16:54:26'),
	(364, 204, 1, 'Login: testtest2.IP:127.0.0.1:53107', '2018-06-07 16:57:43', '2018-06-07 16:57:43'),
	(365, 205, 1, 'Login: testtest23.IP:127.0.0.1:53712', '2018-06-07 17:01:10', '2018-06-07 17:01:10'),
	(366, 205, 1, 'Login: testtest23.IP:127.0.0.1:55232', '2018-06-07 17:16:37', '2018-06-07 17:16:37'),
	(367, 205, 1, 'Login: testtest23.IP:127.0.0.1:55229', '2018-06-07 17:16:45', '2018-06-07 17:16:45'),
	(368, 205, 1, 'Login: testtest23.IP:127.0.0.1:55340', '2018-06-07 17:17:32', '2018-06-07 17:17:32'),
	(369, 205, 1, 'Login: testtest23.IP:127.0.0.1:55741', '2018-06-07 17:21:50', '2018-06-07 17:21:50'),
	(370, 205, 1, 'Login: testtest23.IP:127.0.0.1:55792', '2018-06-07 17:22:20', '2018-06-07 17:22:20'),
	(371, 205, 1, 'Login: testtest23.IP:127.0.0.1:63953', '2018-06-08 11:00:58', '2018-06-08 11:00:58'),
	(372, 205, 1, 'Login: testtest23.IP:127.0.0.1:62555', '2018-06-08 14:35:26', '2018-06-08 14:35:26'),
	(373, 205, 1, 'Login: testtest23.IP:127.0.0.1:58713', '2018-06-11 09:41:21', '2018-06-11 09:41:21'),
	(374, 205, 1, 'Login: testtest23.IP:127.0.0.1:59055', '2018-06-11 10:24:28', '2018-06-11 10:24:28'),
	(375, 205, 1, 'Login: testtest23.IP:127.0.0.1:59488', '2018-06-11 13:37:34', '2018-06-11 13:37:34'),
	(376, 205, 1, 'Login: testtest23.IP:127.0.0.1:61208', '2018-06-11 17:20:36', '2018-06-11 17:20:36'),
	(377, 205, 1, 'Login: testtest23.IP:127.0.0.1:61231', '2018-06-11 17:21:07', '2018-06-11 17:21:07'),
	(378, 205, 1, 'Login: testtest23.IP:127.0.0.1:61263', '2018-06-11 17:21:48', '2018-06-11 17:21:48'),
	(379, 205, 1, 'Login: testtest23.IP:127.0.0.1:61335', '2018-06-11 17:35:52', '2018-06-11 17:35:52'),
	(380, 205, 1, 'Login: testtest23.IP:127.0.0.1:61332', '2018-06-11 17:36:06', '2018-06-11 17:36:06'),
	(381, 205, 1, 'Login: testtest23.IP:127.0.0.1:61334', '2018-06-11 17:36:45', '2018-06-11 17:36:45'),
	(382, 205, 1, 'Login: testtest23.IP:127.0.0.1:64562', '2018-06-11 18:12:54', '2018-06-11 18:12:54'),
	(383, 205, 1, 'Login: testtest23.IP:127.0.0.1:64625', '2018-06-11 18:13:26', '2018-06-11 18:13:26'),
	(384, 205, 1, 'Login: testtest23.IP:127.0.0.1:64761', '2018-06-11 18:14:49', '2018-06-11 18:14:49'),
	(385, 205, 1, 'Login: testtest23.IP:127.0.0.1:64978', '2018-06-11 18:17:10', '2018-06-11 18:17:10'),
	(386, 205, 1, 'Login: testtest23.IP:127.0.0.1:49911', '2018-06-12 10:58:55', '2018-06-12 10:58:55'),
	(387, 205, 1, 'Login: testtest23.IP:127.0.0.1:50002', '2018-06-12 10:59:49', '2018-06-12 10:59:49'),
	(388, 205, 1, 'Login: testtest23.IP:127.0.0.1:58980', '2018-06-13 11:45:09', '2018-06-13 11:45:09'),
	(389, 205, 1, 'Login: testtest23.IP:127.0.0.1:59254', '2018-06-13 11:48:03', '2018-06-13 11:48:03'),
	(390, 205, 1, 'Login: testtest23.IP:127.0.0.1:59550', '2018-06-13 11:51:15', '2018-06-13 11:51:15'),
	(391, 205, 1, 'Login: testtest23.IP:127.0.0.1:59549', '2018-06-13 11:52:01', '2018-06-13 11:52:01'),
	(392, 205, 1, 'Login: testtest23.IP:127.0.0.1:59686', '2018-06-13 11:52:30', '2018-06-13 11:52:30'),
	(393, 205, 1, 'Login: testtest23.IP:127.0.0.1:59689', '2018-06-13 11:52:59', '2018-06-13 11:52:59'),
	(394, 205, 1, 'Login: testtest23.IP:127.0.0.1:59691', '2018-06-13 11:53:57', '2018-06-13 11:53:57'),
	(395, 205, 1, 'Login: testtest23.IP:127.0.0.1:59690', '2018-06-13 11:55:02', '2018-06-13 11:55:02'),
	(396, 205, 1, 'Login: testtest23.IP:127.0.0.1:59686', '2018-06-13 11:55:47', '2018-06-13 11:55:47'),
	(397, 205, 1, 'Login: testtest23.IP:127.0.0.1:60106', '2018-06-13 11:57:06', '2018-06-13 11:57:06'),
	(398, 205, 1, 'Login: testtest23.IP:127.0.0.1:60199', '2018-06-13 11:57:43', '2018-06-13 11:57:43'),
	(399, 205, 1, 'Login: testtest23.IP:127.0.0.1:57393', '2018-06-13 14:40:54', '2018-06-13 14:40:54'),
	(400, 205, 1, 'Login: testtest23.IP:127.0.0.1:57913', '2018-06-13 14:46:21', '2018-06-13 14:46:21'),
	(401, 205, 1, 'Login: testtest23.IP:127.0.0.1:58145', '2018-06-13 14:49:01', '2018-06-13 14:49:01'),
	(402, 205, 1, 'Login: testtest23.IP:127.0.0.1:58611', '2018-06-13 14:53:53', '2018-06-13 14:53:53'),
	(403, 205, 1, 'Login: testtest23.IP:127.0.0.1:58759', '2018-06-13 14:55:08', '2018-06-13 14:55:08'),
	(404, 205, 1, 'Login: testtest23.IP:127.0.0.1:59214', '2018-06-13 15:00:20', '2018-06-13 15:00:20'),
	(405, 205, 1, 'Login: testtest23.IP:127.0.0.1:59455', '2018-06-13 15:02:26', '2018-06-13 15:02:26'),
	(406, 205, 1, 'Login: testtest23.IP:127.0.0.1:60380', '2018-06-13 15:12:34', '2018-06-13 15:12:34'),
	(407, 205, 1, 'Login: testtest23.IP:127.0.0.1:60578', '2018-06-13 15:14:26', '2018-06-13 15:14:26'),
	(408, 205, 1, 'Login: testtest23.IP:127.0.0.1:61323', '2018-06-13 15:22:58', '2018-06-13 15:22:58'),
	(409, 205, 1, 'Login: testtest23.IP:127.0.0.1:61396', '2018-06-13 15:23:31', '2018-06-13 15:23:31'),
	(410, 205, 1, 'Login: testtest23.IP:127.0.0.1:61585', '2018-06-13 15:25:39', '2018-06-13 15:25:39'),
	(411, 205, 1, 'Login: testtest23.IP:127.0.0.1:62232', '2018-06-13 15:33:11', '2018-06-13 15:33:11'),
	(412, 205, 1, 'Login: testtest23.IP:127.0.0.1:62490', '2018-06-13 15:35:54', '2018-06-13 15:35:54'),
	(413, 205, 1, 'Login: testtest23.IP:127.0.0.1:62587', '2018-06-13 15:36:54', '2018-06-13 15:36:54'),
	(414, 205, 1, 'Login: testtest23.IP:127.0.0.1:63248', '2018-06-13 15:44:11', '2018-06-13 15:44:11'),
	(415, 205, 1, 'Login: testtest23.IP:127.0.0.1:64078', '2018-06-13 15:53:09', '2018-06-13 15:53:09'),
	(416, 205, 1, 'Login: testtest23.IP:127.0.0.1:64152', '2018-06-13 15:53:46', '2018-06-13 15:53:46'),
	(417, 205, 1, 'Login: testtest23.IP:127.0.0.1:64370', '2018-06-13 15:55:43', '2018-06-13 15:55:43'),
	(418, 205, 1, 'Login: testtest23.IP:127.0.0.1:64463', '2018-06-13 15:56:31', '2018-06-13 15:56:31'),
	(419, 205, 1, 'Login: testtest23.IP:127.0.0.1:50850', '2018-06-13 16:27:28', '2018-06-13 16:27:28'),
	(420, 205, 1, 'Login: testtest23.IP:127.0.0.1:50851', '2018-06-13 16:28:50', '2018-06-13 16:28:50'),
	(421, 205, 1, 'Login: testtest23.IP:127.0.0.1:51240', '2018-06-13 16:31:29', '2018-06-13 16:31:29'),
	(422, 205, 1, 'Login: testtest23.IP:127.0.0.1:56315', '2018-06-13 17:30:54', '2018-06-13 17:30:54'),
	(423, 205, 1, 'Login: testtest23.IP:127.0.0.1:56529', '2018-06-13 17:33:07', '2018-06-13 17:33:07'),
	(424, 205, 1, 'Login: testtest23.IP:127.0.0.1:56653', '2018-06-13 17:34:31', '2018-06-13 17:34:31'),
	(425, 205, 1, 'Login: testtest23.IP:127.0.0.1:57110', '2018-06-13 17:39:15', '2018-06-13 17:39:15'),
	(426, 205, 1, 'Login: testtest23.IP:127.0.0.1:57157', '2018-06-13 17:39:38', '2018-06-13 17:39:38'),
	(427, 205, 1, 'Login: testtest23.IP:127.0.0.1:57208', '2018-06-13 17:39:59', '2018-06-13 17:39:59'),
	(428, 205, 1, 'Login: testtest23.IP:127.0.0.1:57423', '2018-06-13 17:42:21', '2018-06-13 17:42:21'),
	(429, 205, 1, 'Login: testtest23.IP:127.0.0.1:57549', '2018-06-13 17:43:37', '2018-06-13 17:43:37'),
	(430, 205, 1, 'Login: testtest23.IP:127.0.0.1:57608', '2018-06-13 17:44:08', '2018-06-13 17:44:08'),
	(431, 205, 1, 'Login: testtest23.IP:127.0.0.1:57689', '2018-06-13 17:45:02', '2018-06-13 17:45:02'),
	(432, 205, 1, 'Login: testtest23.IP:127.0.0.1:58417', '2018-06-13 17:52:35', '2018-06-13 17:52:35'),
	(433, 205, 1, 'Login: testtest23.IP:127.0.0.1:59461', '2018-06-13 18:03:09', '2018-06-13 18:03:09'),
	(434, 205, 1, 'Login: testtest23.IP:127.0.0.1:64616', '2018-06-14 14:34:39', '2018-06-14 14:34:39'),
	(435, 205, 1, 'Login: testtest23.IP:127.0.0.1:52212', '2018-06-14 15:20:12', '2018-06-14 15:20:12'),
	(436, 205, 1, 'Login: testtest23.IP:127.0.0.1:52208', '2018-06-14 15:23:55', '2018-06-14 15:23:55'),
	(437, 205, 1, 'Login: testtest23.IP:127.0.0.1:52669', '2018-06-14 15:24:59', '2018-06-14 15:24:59'),
	(438, 205, 1, 'Login: testtest23.IP:127.0.0.1:56252', '2018-06-14 16:04:35', '2018-06-14 16:04:35'),
	(439, 205, 1, 'Login: testtest23.IP:127.0.0.1:56254', '2018-06-14 16:05:03', '2018-06-14 16:05:03'),
	(440, 205, 1, 'Login: testtest23.IP:127.0.0.1:56254', '2018-06-14 16:05:45', '2018-06-14 16:05:45'),
	(441, 205, 1, 'Login: testtest23.IP:127.0.0.1:56254', '2018-06-14 16:06:16', '2018-06-14 16:06:16'),
	(442, 205, 1, 'Login: testtest23.IP:127.0.0.1:56249', '2018-06-14 16:07:48', '2018-06-14 16:07:48'),
	(443, 205, 1, 'Login: testtest23.IP:127.0.0.1:56700', '2018-06-14 16:11:51', '2018-06-14 16:11:51'),
	(444, 205, 1, 'Login: testtest23.IP:127.0.0.1:56701', '2018-06-14 16:14:18', '2018-06-14 16:14:18'),
	(445, 205, 1, 'Login: testtest23.IP:127.0.0.1:59315', '2018-06-14 16:37:15', '2018-06-14 16:37:15'),
	(446, 205, 1, 'Login: testtest23.IP:127.0.0.1:59317', '2018-06-14 16:37:18', '2018-06-14 16:37:18'),
	(447, 205, 1, 'Login: testtest23.IP:127.0.0.1:59313', '2018-06-14 16:37:22', '2018-06-14 16:37:22'),
	(448, 205, 1, 'Login: testtest23.IP:127.0.0.1:59316', '2018-06-14 16:37:48', '2018-06-14 16:37:48'),
	(449, 205, 1, 'Login: testtest23.IP:127.0.0.1:59856', '2018-06-14 16:43:18', '2018-06-14 16:43:18'),
	(450, 205, 1, 'Login: testtest23.IP:127.0.0.1:59957', '2018-06-14 16:44:08', '2018-06-14 16:44:08'),
	(451, 205, 1, 'Login: testtest23.IP:127.0.0.1:60123', '2018-06-14 16:45:50', '2018-06-14 16:45:50'),
	(452, 205, 1, 'Login: testtest23.IP:127.0.0.1:60629', '2018-06-14 16:50:40', '2018-06-14 16:50:40'),
	(453, 205, 1, 'Login: testtest23.IP:127.0.0.1:60758', '2018-06-14 16:51:55', '2018-06-14 16:51:55'),
	(454, 205, 1, 'Login: testtest23.IP:127.0.0.1:63355', '2018-06-14 17:21:05', '2018-06-14 17:21:05'),
	(455, 205, 1, 'Login: testtest23.IP:127.0.0.1:53667', '2018-06-15 13:52:52', '2018-06-15 13:52:52'),
	(456, 205, 1, 'Login: testtest23.IP:127.0.0.1:53384', '2018-06-20 09:53:34', '2018-06-20 09:53:34'),
	(457, 205, 1, 'Login: testtest23.IP:127.0.0.1:56092', '2018-06-20 13:41:20', '2018-06-20 13:41:20'),
	(458, 205, 1, 'Login: testtest23.IP:127.0.0.1:54756', '2018-06-20 16:33:07', '2018-06-20 16:33:07'),
	(459, 205, 1, 'Login: testtest23.IP:127.0.0.1:55666', '2018-06-20 16:42:39', '2018-06-20 16:42:39'),
	(460, 205, 1, 'Login: testtest23.IP:127.0.0.1:55778', '2018-06-20 16:43:38', '2018-06-20 16:43:38'),
	(461, 205, 1, 'Login: testtest23.IP:127.0.0.1:56270', '2018-06-20 16:48:26', '2018-06-20 16:48:26'),
	(462, 205, 1, 'Login: testtest23.IP:127.0.0.1:61486', '2018-06-20 17:48:55', '2018-06-20 17:48:55'),
	(463, 205, 1, 'Login: testtest23.IP:127.0.0.1:61925', '2018-06-20 17:53:42', '2018-06-20 17:53:42'),
	(464, 205, 1, 'Login: testtest23.IP:127.0.0.1:65230', '2018-06-20 18:27:38', '2018-06-20 18:27:38'),
	(465, 205, 1, 'Login: testtest23.IP:127.0.0.1:57803', '2018-06-21 09:28:35', '2018-06-21 09:28:35'),
	(466, 205, 1, 'Login: testtest23.IP:127.0.0.1:62201', '2018-06-21 10:20:27', '2018-06-21 10:20:27'),
	(467, 205, 1, 'Login: testtest23.IP:127.0.0.1:62500', '2018-06-21 10:23:51', '2018-06-21 10:23:51'),
	(468, 205, 1, 'Login: testtest23.IP:127.0.0.1:62504', '2018-06-21 10:26:43', '2018-06-21 10:26:43'),
	(469, 205, 1, 'Login: testtest23.IP:127.0.0.1:62504', '2018-06-21 10:28:52', '2018-06-21 10:28:52'),
	(470, 205, 1, 'Login: testtest23.IP:127.0.0.1:62503', '2018-06-21 10:30:46', '2018-06-21 10:30:46'),
	(471, 205, 1, 'Login: testtest23.IP:127.0.0.1:62505', '2018-06-21 10:31:35', '2018-06-21 10:31:35'),
	(472, 205, 1, 'Login: testtest23.IP:127.0.0.1:63268', '2018-06-21 10:32:27', '2018-06-21 10:32:27'),
	(473, 205, 1, 'Login: testtest23.IP:127.0.0.1:63360', '2018-06-21 10:33:25', '2018-06-21 10:33:25'),
	(474, 205, 1, 'Login: testtest23.IP:127.0.0.1:63460', '2018-06-21 10:34:23', '2018-06-21 10:34:23'),
	(475, 205, 1, 'Login: testtest23.IP:127.0.0.1:64081', '2018-06-21 10:41:18', '2018-06-21 10:41:18'),
	(476, 205, 1, 'Login: testtest23.IP:127.0.0.1:64232', '2018-06-21 10:42:43', '2018-06-21 10:42:43'),
	(477, 205, 1, 'Login: testtest23.IP:127.0.0.1:64341', '2018-06-21 10:43:39', '2018-06-21 10:43:39'),
	(478, 205, 1, 'Login: testtest23.IP:127.0.0.1:64510', '2018-06-21 10:45:25', '2018-06-21 10:45:25'),
	(479, 205, 1, 'Login: testtest23.IP:127.0.0.1:64664', '2018-06-21 10:46:58', '2018-06-21 10:46:58'),
	(480, 205, 1, 'Login: testtest23.IP:127.0.0.1:50806', '2018-06-21 17:25:23', '2018-06-21 17:25:23'),
	(481, 205, 1, 'Login: testtest23.IP:127.0.0.1:51058', '2018-06-21 17:27:24', '2018-06-21 17:27:24'),
	(482, 205, 1, 'Login: testtest23.IP:127.0.0.1:51623', '2018-06-21 17:33:29', '2018-06-21 17:33:29'),
	(483, 205, 1, 'Login: testtest23.IP:127.0.0.1:51996', '2018-06-21 17:36:58', '2018-06-21 17:36:58'),
	(484, 205, 1, 'Login: testtest23.IP:127.0.0.1:55537', '2018-06-21 17:39:58', '2018-06-21 17:39:58'),
	(485, 205, 1, 'Login: testtest23.IP:127.0.0.1:59713', '2018-06-21 17:41:33', '2018-06-21 17:41:33'),
	(486, 205, 1, 'Login: testtest23.IP:127.0.0.1:60072', '2018-06-21 17:45:08', '2018-06-21 17:45:08'),
	(487, 205, 1, 'Login: testtest23.IP:127.0.0.1:51042', '2018-06-21 17:53:56', '2018-06-21 17:53:56'),
	(488, 205, 1, 'Login: testtest23.IP:127.0.0.1:51942', '2018-06-21 18:04:05', '2018-06-21 18:04:05'),
	(489, 205, 1, 'Login: testtest23.IP:127.0.0.1:52281', '2018-06-21 18:06:52', '2018-06-21 18:06:52'),
	(490, NULL, 1, 'Try login not exist account: testtest23.IP: 127.0.0.1:53259', '2018-06-21 18:17:06', '2018-06-21 18:17:06'),
	(491, NULL, 1, 'Try login not exist account: testtest23.IP: 127.0.0.1:53262', '2018-06-21 18:17:30', '2018-06-21 18:17:30'),
	(492, 2, 1, 'Login: testtest1.IP:127.0.0.1:53366', '2018-06-21 18:17:43', '2018-06-21 18:17:43'),
	(493, 2, 1, 'Login failed: testtest1.IP:127.0.0.1:53833', '2018-06-21 18:22:21', '2018-06-21 18:22:21'),
	(494, 2, 1, 'Login: testtest1.IP:127.0.0.1:53836', '2018-06-21 18:22:26', '2018-06-21 18:22:26'),
	(495, 2, 1, 'Login: testtest1.IP:127.0.0.1:54110', '2018-06-21 18:24:38', '2018-06-21 18:24:38'),
	(496, 2, 1, 'Login: testtest1.IP:127.0.0.1:54116', '2018-06-21 18:25:32', '2018-06-21 18:25:32'),
	(497, NULL, 1, 'Try login not exist account: testtest23.IP: 127.0.0.1:60408', '2018-06-21 18:31:12', '2018-06-21 18:31:12'),
	(498, NULL, 1, 'Try login not exist account: testtest23.IP: 127.0.0.1:60433', '2018-06-21 18:31:21', '2018-06-21 18:31:21'),
	(499, 2, 1, 'Login: testtest1.IP:127.0.0.1:60445', '2018-06-21 18:31:24', '2018-06-21 18:31:24'),
	(500, 2, 1, 'Login: testtest1.IP:127.0.0.1:63031', '2018-06-21 18:32:38', '2018-06-21 18:32:38'),
	(501, 2, 1, 'Login: testtest1.IP:127.0.0.1:51947', '2018-06-21 18:34:35', '2018-06-21 18:34:35'),
	(502, 2, 1, 'Login: testtest1.IP:127.0.0.1:54654', '2018-06-21 18:38:05', '2018-06-21 18:38:05'),
	(503, 2, 1, 'Login: testtest1.IP:127.0.0.1:55276', '2018-06-21 18:44:43', '2018-06-21 18:44:43'),
	(504, 2, 1, 'Login: testtest1.IP:127.0.0.1:55565', '2018-06-21 18:47:35', '2018-06-21 18:47:35'),
	(505, 2, 1, 'Login: testtest1.IP:127.0.0.1:55779', '2018-06-21 18:49:46', '2018-06-21 18:49:46'),
	(506, 2, 1, 'Login: testtest1.IP:127.0.0.1:56247', '2018-06-21 18:55:12', '2018-06-21 18:55:12'),
	(507, 2, 1, 'Login: testtest1.IP:127.0.0.1:56818', '2018-06-21 19:01:57', '2018-06-21 19:01:57'),
	(508, 2, 1, 'Login: testtest1.IP:127.0.0.1:56994', '2018-06-21 19:03:50', '2018-06-21 19:03:50'),
	(509, 2, 1, 'Login: testtest1.IP:127.0.0.1:57352', '2018-06-21 19:07:25', '2018-06-21 19:07:25'),
	(510, 2, 1, 'Login: testtest1.IP:127.0.0.1:57499', '2018-06-21 19:08:53', '2018-06-21 19:08:53'),
	(511, 2, 1, 'Login: testtest1.IP:127.0.0.1:57660', '2018-06-21 19:10:20', '2018-06-21 19:10:20'),
	(512, 2, 1, 'Login: testtest1.IP:127.0.0.1:64158', '2018-06-22 09:16:31', '2018-06-22 09:16:31'),
	(513, 2, 1, 'Login: testtest1.IP:127.0.0.1:64228', '2018-06-22 09:31:07', '2018-06-22 09:31:07'),
	(514, 2, 1, 'Login: testtest1.IP:127.0.0.1:64268', '2018-06-22 09:45:01', '2018-06-22 09:45:01'),
	(515, 2, 1, 'Login: testtest1.IP:127.0.0.1:64319', '2018-06-22 09:52:58', '2018-06-22 09:52:58'),
	(516, 2, 1, 'Login: testtest1.IP:127.0.0.1:64678', '2018-06-22 11:41:48', '2018-06-22 11:41:48'),
	(517, 2, 1, 'Login: testtest1.IP:127.0.0.1:64712', '2018-06-22 11:44:41', '2018-06-22 11:44:41'),
	(518, 2, 1, 'Login: testtest1.IP:127.0.0.1:64753', '2018-06-22 11:52:03', '2018-06-22 11:52:03'),
	(519, 2, 1, 'Login: testtest1.IP:127.0.0.1:63280', '2018-06-26 09:47:11', '2018-06-26 09:47:11'),
	(520, 2, 1, 'Login: testtest1.IP:127.0.0.1:63284', '2018-06-26 09:47:44', '2018-06-26 09:47:44'),
	(521, 2, 1, 'Login: testtest1.IP:127.0.0.1:63280', '2018-06-26 09:51:47', '2018-06-26 09:51:47'),
	(522, 2, 1, 'Login: testtest1.IP:127.0.0.1:55450', '2018-06-27 10:21:44', '2018-06-27 10:21:44'),
	(523, 2, 1, 'Login: testtest1.IP:127.0.0.1:55447', '2018-06-27 10:23:00', '2018-06-27 10:23:00'),
	(524, 2, 1, 'Login: testtest1.IP:127.0.0.1:61046', '2018-06-27 11:25:49', '2018-06-27 11:25:49'),
	(525, 2, 1, 'Login: testtest1.IP:127.0.0.1:61046', '2018-06-27 11:25:54', '2018-06-27 11:25:54'),
	(526, 2, 1, 'Login: testtest1.IP:127.0.0.1:61063', '2018-06-27 11:26:26', '2018-06-27 11:26:26'),
	(527, 2, 1, 'Login: testtest1.IP:127.0.0.1:61319', '2018-06-27 11:28:24', '2018-06-27 11:28:24'),
	(528, 2, 1, 'Login: testtest1.IP:127.0.0.1:61376', '2018-06-27 11:28:41', '2018-06-27 11:28:41'),
	(529, 2, 1, 'Login: testtest1.IP:127.0.0.1:61557', '2018-06-27 11:30:31', '2018-06-27 11:30:31'),
	(530, 2, 1, 'Login: testtest1.IP:127.0.0.1:61744', '2018-06-27 11:32:23', '2018-06-27 11:32:23'),
	(531, 2, 1, 'Login: testtest1.IP:127.0.0.1:62152', '2018-06-27 11:36:49', '2018-06-27 11:36:49'),
	(532, 2, 1, 'Login: testtest1.IP:127.0.0.1:62397', '2018-06-27 11:39:21', '2018-06-27 11:39:21'),
	(533, 2, 1, 'Login: testtest1.IP:127.0.0.1:57613', '2018-06-27 14:00:07', '2018-06-27 14:00:07'),
	(534, 2, 1, 'Login: testtest1.IP:127.0.0.1:58231', '2018-06-27 14:06:15', '2018-06-27 14:06:15'),
	(535, 2, 1, 'Login: testtest1.IP:127.0.0.1:54666', '2018-06-27 16:37:50', '2018-06-27 16:37:50'),
	(536, 2, 1, 'Login: testtest1.IP:127.0.0.1:59394', '2018-06-27 17:34:54', '2018-06-27 17:34:54'),
	(537, 2, 1, 'Login: testtest1.IP:127.0.0.1:59861', '2018-06-27 17:38:41', '2018-06-27 17:38:41'),
	(538, 2, 1, 'Login: testtest1.IP:127.0.0.1:60132', '2018-06-27 17:41:20', '2018-06-27 17:41:20'),
	(539, 2, 1, 'Login: testtest1.IP:127.0.0.1:60994', '2018-06-27 17:50:10', '2018-06-27 17:50:10'),
	(540, 2, 1, 'Login: testtest1.IP:127.0.0.1:61060', '2018-06-27 17:50:51', '2018-06-27 17:50:51'),
	(541, 2, 1, 'Login: testtest1.IP:127.0.0.1:61335', '2018-06-27 17:53:36', '2018-06-27 17:53:36'),
	(542, 2, 1, 'Login: testtest1.IP:127.0.0.1:61489', '2018-06-27 17:55:06', '2018-06-27 17:55:06'),
	(543, 2, 1, 'Login: testtest1.IP:127.0.0.1:63126', '2018-06-27 18:13:39', '2018-06-27 18:13:39'),
	(544, 2, 1, 'Login: testtest1.IP:127.0.0.1:63672', '2018-06-27 18:19:18', '2018-06-27 18:19:18'),
	(545, 2, 1, 'Login: testtest1.IP:127.0.0.1:63724', '2018-06-27 18:19:48', '2018-06-27 18:19:48'),
	(546, 2, 1, 'Login: testtest1.IP:127.0.0.1:64828', '2018-06-27 18:31:06', '2018-06-27 18:31:06'),
	(547, 2, 1, 'Login: testtest1.IP:127.0.0.1:54563', '2018-06-28 11:40:31', '2018-06-28 11:40:31'),
	(548, 2, 1, 'Login: testtest1.IP:127.0.0.1:49531', '2018-06-28 13:57:14', '2018-06-28 13:57:14'),
	(549, 2, 1, 'Login: testtest1.IP:127.0.0.1:52144', '2018-06-29 14:40:50', '2018-06-29 14:40:50'),
	(550, 2, 1, 'Login: testtest1.IP:127.0.0.1:52364', '2018-06-29 15:25:12', '2018-06-29 15:25:12'),
	(551, 2, 1, 'Login: testtest1.IP:127.0.0.1:52545', '2018-06-29 16:38:47', '2018-06-29 16:38:47'),
	(552, 2, 1, 'Login: testtest1.IP:127.0.0.1:52575', '2018-06-29 16:45:25', '2018-06-29 16:45:25'),
	(553, 2, 1, 'Login: testtest1.IP:127.0.0.1:52943', '2018-06-29 17:18:34', '2018-06-29 17:18:34'),
	(554, 2, 1, 'Login: testtest1.IP:127.0.0.1:49889', '2018-06-29 17:51:59', '2018-06-29 17:51:59'),
	(555, 2, 1, 'Login: testtest1.IP:127.0.0.1:49918', '2018-06-29 17:53:51', '2018-06-29 17:53:51'),
	(556, 2, 1, 'Login: testtest1.IP:127.0.0.1:51848', '2018-06-30 13:25:00', '2018-06-30 13:25:00'),
	(557, 2, 1, 'Login: testtest1.IP:127.0.0.1:55886', '2018-07-02 15:12:40', '2018-07-02 15:12:40'),
	(558, 2, 1, 'Login: testtest1.IP:127.0.0.1:60595', '2018-07-02 16:14:26', '2018-07-02 16:14:26'),
	(559, 2, 1, 'Login: testtest1.IP:127.0.0.1:60787', '2018-07-02 16:16:30', '2018-07-02 16:16:30'),
	(560, 2, 1, 'Login: testtest1.IP:127.0.0.1:60787', '2018-07-02 16:16:32', '2018-07-02 16:16:32'),
	(561, 2, 1, 'Login: testtest1.IP:127.0.0.1:60786', '2018-07-02 16:17:06', '2018-07-02 16:17:06'),
	(562, 2, 1, 'Login: testtest1.IP:127.0.0.1:64957', '2018-07-02 17:06:53', '2018-07-02 17:06:53'),
	(563, 2, 1, 'Login: testtest1.IP:127.0.0.1:65307', '2018-07-02 17:10:40', '2018-07-02 17:10:40'),
	(564, 2, 1, 'Login: testtest1.IP:127.0.0.1:65308', '2018-07-02 17:11:00', '2018-07-02 17:11:00'),
	(565, 2, 1, 'Login: testtest1.IP:127.0.0.1:65307', '2018-07-02 17:11:51', '2018-07-02 17:11:51'),
	(566, 2, 1, 'Login: testtest1.IP:127.0.0.1:65503', '2018-07-02 17:12:56', '2018-07-02 17:12:56'),
	(567, 2, 1, 'Login: testtest1.IP:127.0.0.1:65503', '2018-07-02 17:14:04', '2018-07-02 17:14:04'),
	(568, 2, 1, 'Login: testtest1.IP:127.0.0.1:49251', '2018-07-02 17:14:21', '2018-07-02 17:14:21'),
	(569, 2, 1, 'Login: testtest1.IP:127.0.0.1:49380', '2018-07-02 17:15:41', '2018-07-02 17:15:41'),
	(570, 2, 1, 'Login: testtest1.IP:127.0.0.1:49432', '2018-07-02 17:16:10', '2018-07-02 17:16:10'),
	(571, 2, 1, 'Login: testtest1.IP:127.0.0.1:49685', '2018-07-02 17:18:58', '2018-07-02 17:18:58'),
	(572, 2, 1, 'Login: testtest1.IP:127.0.0.1:50143', '2018-07-02 17:24:11', '2018-07-02 17:24:11'),
	(573, 2, 1, 'Login: testtest1.IP:127.0.0.1:50569', '2018-07-02 17:28:54', '2018-07-02 17:28:54'),
	(574, 2, 1, 'Login: testtest1.IP:127.0.0.1:50858', '2018-07-02 17:31:57', '2018-07-02 17:31:57'),
	(575, 2, 1, 'Login: testtest1.IP:127.0.0.1:54108', '2018-07-02 18:10:42', '2018-07-02 18:10:42'),
	(576, 2, 1, 'Login: testtest1.IP:127.0.0.1:54266', '2018-07-02 18:12:26', '2018-07-02 18:12:26'),
	(577, 2, 1, 'Login: testtest1.IP:127.0.0.1:54338', '2018-07-02 18:13:09', '2018-07-02 18:13:09'),
	(578, 2, 1, 'Login: testtest1.IP:127.0.0.1:55040', '2018-07-02 18:21:19', '2018-07-02 18:21:19'),
	(579, 2, 1, 'Login: testtest1.IP:127.0.0.1:55111', '2018-07-02 18:21:59', '2018-07-02 18:21:59'),
	(580, 2, 1, 'Login: testtest1.IP:127.0.0.1:56920', '2018-07-02 18:42:29', '2018-07-02 18:42:29'),
	(581, 2, 1, 'Login: testtest1.IP:127.0.0.1:52893', '2018-07-03 10:27:38', '2018-07-03 10:27:38'),
	(582, 2, 1, 'Login: testtest1.IP:127.0.0.1:55498', '2018-07-03 10:58:07', '2018-07-03 10:58:07'),
	(583, 2, 1, 'Login: testtest1.IP:127.0.0.1:55939', '2018-07-03 11:03:15', '2018-07-03 11:03:15'),
	(584, 2, 1, 'Login: testtest1.IP:127.0.0.1:56724', '2018-07-03 11:12:41', '2018-07-03 11:12:41'),
	(585, 2, 1, 'Login: testtest1.IP:127.0.0.1:56882', '2018-07-03 11:14:27', '2018-07-03 11:14:27'),
	(586, 2, 1, 'Login: testtest1.IP:127.0.0.1:57035', '2018-07-03 11:16:00', '2018-07-03 11:16:00'),
	(587, 2, 1, 'Login: testtest1.IP:127.0.0.1:57196', '2018-07-03 11:17:41', '2018-07-03 11:17:41'),
	(588, 2, 1, 'Login: testtest1.IP:127.0.0.1:57932', '2018-07-03 11:26:26', '2018-07-03 11:26:26'),
	(589, 2, 1, 'Login: testtest1.IP:127.0.0.1:58167', '2018-07-03 11:29:08', '2018-07-03 11:29:08'),
	(590, 2, 1, 'Login: testtest1.IP:127.0.0.1:58757', '2018-07-03 11:36:09', '2018-07-03 11:36:09'),
	(591, 2, 1, 'Login: testtest1.IP:127.0.0.1:59873', '2018-07-03 11:49:29', '2018-07-03 11:49:29'),
	(592, 2, 1, 'Login: testtest1.IP:127.0.0.1:59990', '2018-07-03 11:50:45', '2018-07-03 11:50:45'),
	(593, 2, 1, 'Login: testtest1.IP:127.0.0.1:60094', '2018-07-03 11:51:51', '2018-07-03 11:51:51'),
	(594, 2, 1, 'Login: testtest1.IP:127.0.0.1:60451', '2018-07-03 11:56:02', '2018-07-03 11:56:02'),
	(595, 2, 1, 'Login: testtest1.IP:127.0.0.1:57581', '2018-07-03 14:40:36', '2018-07-03 14:40:36'),
	(596, 2, 1, 'Login: testtest1.IP:127.0.0.1:60786', '2018-07-03 15:23:40', '2018-07-03 15:23:40'),
	(597, 2, 1, 'Login: testtest1.IP:127.0.0.1:60786', '2018-07-03 15:24:22', '2018-07-03 15:24:22'),
	(598, 2, 1, 'Login: testtest1.IP:127.0.0.1:61411', '2018-07-03 15:24:49', '2018-07-03 15:24:49'),
	(599, 2, 1, 'Login: testtest1.IP:127.0.0.1:62735', '2018-07-03 15:39:32', '2018-07-03 15:39:32'),
	(600, 2, 1, 'Login: testtest1.IP:127.0.0.1:62785', '2018-07-03 15:39:59', '2018-07-03 15:39:59'),
	(601, 2, 1, 'Login: testtest1.IP:127.0.0.1:49719', '2018-07-03 16:17:38', '2018-07-03 16:17:38'),
	(602, 2, 1, 'Login: testtest1.IP:127.0.0.1:49919', '2018-07-03 16:19:38', '2018-07-03 16:19:38'),
	(603, 2, 1, 'Login: testtest1.IP:127.0.0.1:50858', '2018-07-03 16:30:30', '2018-07-03 16:30:30'),
	(604, 2, 1, 'Login: testtest1.IP:127.0.0.1:52083', '2018-07-03 16:44:19', '2018-07-03 16:44:19'),
	(605, 2, 1, 'Login: testtest1.IP:127.0.0.1:52169', '2018-07-03 16:45:12', '2018-07-03 16:45:12'),
	(606, 2, 1, 'Login: testtest1.IP:127.0.0.1:52172', '2018-07-03 16:50:31', '2018-07-03 16:50:31'),
	(607, 2, 1, 'Login: testtest1.IP:127.0.0.1:52171', '2018-07-03 16:50:39', '2018-07-03 16:50:39'),
	(608, 2, 1, 'Login: testtest1.IP:127.0.0.1:54530', '2018-07-03 17:11:22', '2018-07-03 17:11:22'),
	(609, 2, 1, 'Login: testtest1.IP:127.0.0.1:54602', '2018-07-03 17:12:03', '2018-07-03 17:12:03'),
	(610, 2, 1, 'Login: testtest1.IP:127.0.0.1:55006', '2018-07-03 17:16:28', '2018-07-03 17:16:28'),
	(611, 635, 2, 'Set deactive by user 2', '2018-07-03 17:30:39', '2018-07-03 17:30:39'),
	(612, 635, 2, 'Set active by user 2', '2018-07-03 17:30:40', '2018-07-03 17:30:40'),
	(613, 2, 1, 'Login: testtest1.IP:127.0.0.1:56796', '2018-07-03 17:36:50', '2018-07-03 17:36:50'),
	(614, 2, 1, 'Login: testtest1.IP:127.0.0.1:56806', '2018-07-03 17:38:02', '2018-07-03 17:38:02'),
	(615, 2, 1, 'Login: testtest1.IP:127.0.0.1:57022', '2018-07-03 17:39:02', '2018-07-03 17:39:02'),
	(616, 2, 1, 'Login: testtest1.IP:127.0.0.1:57226', '2018-07-03 17:41:03', '2018-07-03 17:41:03'),
	(617, 2, 1, 'Login: testtest1.IP:127.0.0.1:58036', '2018-07-03 17:49:29', '2018-07-03 17:49:29'),
	(618, 2, 1, 'Login: testtest1.IP:127.0.0.1:58495', '2018-07-03 17:54:23', '2018-07-03 17:54:23'),
	(619, 2, 1, 'Login: testtest1.IP:127.0.0.1:58616', '2018-07-03 17:55:24', '2018-07-03 17:55:24'),
	(620, 2, 1, 'Login: testtest1.IP:127.0.0.1:58616', '2018-07-03 17:55:56', '2018-07-03 17:55:56'),
	(621, 2, 1, 'Login: testtest1.IP:127.0.0.1:58617', '2018-07-03 17:56:24', '2018-07-03 17:56:24'),
	(622, 2, 1, 'Login: testtest1.IP:127.0.0.1:58614', '2018-07-03 17:57:04', '2018-07-03 17:57:04'),
	(623, 2, 1, 'Login: testtest1.IP:127.0.0.1:58906', '2018-07-03 17:58:48', '2018-07-03 17:58:48'),
	(624, 2, 1, 'Login: testtest1.IP:127.0.0.1:58914', '2018-07-03 17:59:54', '2018-07-03 17:59:54'),
	(625, 2, 1, 'Login: testtest1.IP:127.0.0.1:59054', '2018-07-03 18:00:08', '2018-07-03 18:00:08'),
	(626, 2, 1, 'Login: testtest1.IP:127.0.0.1:59055', '2018-07-03 18:00:28', '2018-07-03 18:00:28'),
	(627, 2, 1, 'Login: testtest1.IP:127.0.0.1:59047', '2018-07-03 18:03:13', '2018-07-03 18:03:13'),
	(628, 2, 1, 'Login: testtest1.IP:127.0.0.1:59501', '2018-07-03 18:04:55', '2018-07-03 18:04:55'),
	(629, 2, 1, 'Login: testtest1.IP:127.0.0.1:59501', '2018-07-03 18:08:24', '2018-07-03 18:08:24');
/*!40000 ALTER TABLE `log_user_change` ENABLE KEYS */;

-- 傾印  表格 pcb.machines 結構
DROP TABLE IF EXISTS `machines`;
CREATE TABLE IF NOT EXISTS `machines` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `store_name` varchar(120) DEFAULT '',
  `machine_name` varchar(120) DEFAULT '',
  `pcb_id` int(10) unsigned NOT NULL,
  `user_id` int(10) unsigned NOT NULL,
  `delete_flag` bit(1) NOT NULL DEFAULT b'0',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `pcb_id` (`pcb_id`),
  KEY `FK_machines_users` (`user_id`),
  KEY `store_name` (`store_name`),
  CONSTRAINT `FK_machines_users` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1642 DEFAULT CHARSET=utf8 COMMENT='機器實體';

-- 正在傾印表格  pcb.machines 的資料：~150 rows (大約)
DELETE FROM `machines`;
/*!40000 ALTER TABLE `machines` DISABLE KEYS */;
INSERT INTO `machines` (`id`, `store_name`, `machine_name`, `pcb_id`, `user_id`, `delete_flag`, `created_time`, `update_time`) VALUES
	(1492, 'crest', '', 176316066, 615, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1493, 'crest', '', 105878820, 614, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1494, 'gambler', '', 682512223, 614, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1495, 'stork', '', 721151941, 607, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1496, 'keeper', '', 420289975, 614, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1497, 'snap', '', 347588699, 607, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1498, 'finger', '', 683151270, 618, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1499, 'flier', '', 857123793, 618, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1500, 'hand', '', 153474256, 618, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1501, 'princess', '', 973381554, 608, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1502, 'bone', '', 658070695, 608, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1503, 'snapper', '', 228935238, 607, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1504, 'bolt', '', 360669037, 607, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1505, 'lasher', '', 575146250, 615, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1506, 'lord', '', 313420796, 614, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1507, 'princess', '', 702198553, 608, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1508, 'shrieker', '', 520250931, 611, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1509, 'bug', '', 782167512, 608, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1510, 'palm', '', 988576561, 607, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1511, 'ferret', '', 579042071, 615, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1512, 'ridge', '', 324615033, 611, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1513, 'lion', '', 537182522, 614, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1514, 'pig', '', 277294752, 607, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1515, 'beak', '', 235193615, 607, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1516, 'flasher', '', 134777353, 608, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1517, 'jester', '', 535534079, 614, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1518, 'snout', '', 806752778, 614, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1519, 'dive', '', 576124597, 614, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1520, 'swisher', '', 922507224, 615, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1521, 'cockatoo', '', 356516905, 608, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1522, 'venom', '', 154664576, 607, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1523, 'rover', '', 563850024, 611, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1524, 'song', '', 721194136, 618, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1525, 'mark', '', 636880692, 614, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1526, 'mustang', '', 334364256, 611, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1527, 'legend', '', 437351849, 618, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1528, 'frill', '', 923963795, 614, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1529, 'muse', '', 443838162, 607, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1530, 'duck', '', 817497224, 607, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1531, 'chill', '', 598334099, 607, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1532, 'collar', '', 235189137, 607, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1533, 'knight', '', 378421517, 608, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1534, 'hiss', '', 314862014, 607, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1535, 'thief', '', 123039721, 607, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1536, 'scorpion', '', 470735554, 608, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1537, 'howler', '', 505380312, 607, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1538, 'forger', '', 475727170, 618, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1539, 'vulture', '', 858150439, 608, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1540, 'paladin', '', 375929867, 607, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1541, 'seeker', '', 842819844, 608, b'0', '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(1542, 'weasel', '', 355680945, 628, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1543, 'falcon', '', 729022516, 628, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1544, 'brow', '', 219302755, 628, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1545, 'spider', '', 622534118, 628, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1546, 'elf', '', 288056489, 632, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1547, 'sprite', '', 962914358, 628, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1548, 'koala', '', 901037953, 621, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1549, 'raven', '', 252137644, 622, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1550, 'mistress', '', 648226500, 628, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1551, 'mind', '', 951200149, 632, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1552, 'binder', '', 746713621, 621, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1553, 'ocelot', '', 611486450, 629, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1554, 'seer', '', 316287232, 629, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1555, 'mask', '', 840039022, 628, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1556, 'grasp', '', 249791862, 621, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1557, 'tongue', '', 917227746, 625, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1558, 'thunder', '', 268945972, 621, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1559, 'rabbit', '', 974966725, 629, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1560, 'pixie', '', 548612124, 629, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1561, 'myth', '', 445473024, 625, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1562, 'nape', '', 593899875, 629, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1563, 'cub', '', 520626308, 621, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1564, 'chin', '', 942756331, 628, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1565, 'cloak', '', 429838978, 625, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1566, 'lightning', '', 182279505, 632, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1567, 'voice', '', 219872925, 632, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1568, 'flame', '', 514713842, 629, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1569, 'chest', '', 819532233, 625, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1570, 'cloak', '', 357429056, 629, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1571, 'lady', '', 633035654, 621, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1572, 'ape', '', 757807067, 621, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1573, 'crest', '', 329585560, 629, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1574, 'lightning', '', 183004898, 625, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1575, 'skinner', '', 632482551, 628, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1576, 'hound', '', 654378190, 629, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1577, 'gem', '', 514198322, 621, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1578, 'leg', '', 197480995, 621, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1579, 'zebra', '', 581163654, 622, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1580, 'chatter', '', 281567404, 629, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1581, 'knight', '', 846404352, 629, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1582, 'gem', '', 151928433, 628, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1583, 'rover', '', 769102765, 622, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1584, 'panther', '', 255167586, 628, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1585, 'dive', '', 754998588, 629, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1586, 'touch', '', 510617178, 632, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1587, 'head', '', 999492027, 625, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1588, 'bunny', '', 164611760, 628, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1589, 'crown', '', 150911712, 625, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1590, 'spur', '', 268838894, 629, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1591, 'lantern', '', 283684344, 628, b'0', '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(1592, 'robin', '', 808847668, 639, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1593, 'boot', '', 861432918, 636, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1594, 'keeper', '', 201686635, 642, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1595, 'kicker', '', 537471962, 642, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1596, 'fox', '', 783814390, 643, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1597, 'snarl', '', 475511846, 646, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1598, 'brow', '', 323648739, 636, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1599, 'keeper', '', 140436711, 646, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1600, 'twister', '', 503355579, 642, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1601, 'beetle', '', 448171994, 635, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1602, 'tooth', '', 260321983, 643, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1603, 'ape', '', 714936691, 642, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1604, 'stone', '', 529579816, 636, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1605, 'spider', '', 153960837, 643, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1606, 'razor', '', 819667541, 642, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1607, 'talon', '', 692399220, 635, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1608, 'ferret', '', 972806283, 635, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1609, 'princess', '', 427256970, 646, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1610, 'runner', '', 968092335, 636, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1611, 'gem', '', 359987619, 642, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1612, 'gecko', '', 920959813, 642, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1613, 'hisser', '', 334926019, 642, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1614, 'swisher', '', 284382709, 639, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1615, 'viper', '', 830542412, 636, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1616, 'hornet', '', 678756522, 643, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1617, 'donkey', '', 112861276, 642, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1618, 'mind', '', 472962103, 635, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1619, 'whimsey', '', 323850706, 646, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1620, 'heron', '', 177696172, 646, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1621, 'goat', '', 605569013, 635, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1622, 'crystal', '', 497816232, 646, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1623, 'giver', '', 613556361, 646, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1624, 'guardian', '', 578344895, 639, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1625, 'panther', '', 925248150, 642, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1626, 'ogre', '', 592036285, 646, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1627, 'flier', '', 997415334, 635, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1628, 'raver', '', 214980811, 639, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1629, 'python', '', 989974853, 642, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1630, 'whale', '', 298893262, 642, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1631, 'jaw', '', 730963446, 636, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1632, 'bow', '', 626750753, 642, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1633, 'snagglefoot', '', 321205333, 635, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1634, 'skull', '', 498003336, 642, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1635, 'sentry', '', 313880094, 636, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1636, 'giver', '', 571434098, 639, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1637, 'curtain', '', 561688858, 642, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1638, 'mask', '', 966417485, 635, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1639, 'finger', '', 733814516, 642, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1640, 'condor', '', 354889898, 636, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(1641, 'witch', '', 255664459, 635, b'0', '2018-06-29 17:52:16', '2018-06-29 17:52:16');
/*!40000 ALTER TABLE `machines` ENABLE KEYS */;

-- 傾印  表格 pcb.machine_version 結構
DROP TABLE IF EXISTS `machine_version`;
CREATE TABLE IF NOT EXISTS `machine_version` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `machine_id` int(10) unsigned NOT NULL,
  `current_version` varchar(24) NOT NULL,
  `target_version` varchar(24) NOT NULL,
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `last_connect_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK_machine_version_machines` (`machine_id`),
  CONSTRAINT `FK_machine_version_machines` FOREIGN KEY (`machine_id`) REFERENCES `machines` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='機器版本';

-- 正在傾印表格  pcb.machine_version 的資料：~0 rows (大約)
DELETE FROM `machine_version`;
/*!40000 ALTER TABLE `machine_version` DISABLE KEYS */;
/*!40000 ALTER TABLE `machine_version` ENABLE KEYS */;

-- 傾印  表格 pcb.maps 結構
DROP TABLE IF EXISTS `maps`;
CREATE TABLE IF NOT EXISTS `maps` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `map_name` varchar(32) NOT NULL,
  `key` varchar(32) NOT NULL,
  `value` varchar(32) NOT NULL,
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='其他對應表';

-- 正在傾印表格  pcb.maps 的資料：~0 rows (大約)
DELETE FROM `maps`;
/*!40000 ALTER TABLE `maps` DISABLE KEYS */;
/*!40000 ALTER TABLE `maps` ENABLE KEYS */;

-- 傾印  表格 pcb.permissions 結構
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE IF NOT EXISTS `permissions` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(150) NOT NULL,
  `sort` int(11) NOT NULL DEFAULT '0',
  `description` varchar(200) NOT NULL DEFAULT '',
  `admin_only` bit(1) NOT NULL DEFAULT b'0',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8 COMMENT='權限表';

-- 正在傾印表格  pcb.permissions 的資料：~23 rows (大約)
DELETE FROM `permissions`;
/*!40000 ALTER TABLE `permissions` DISABLE KEYS */;
INSERT INTO `permissions` (`id`, `name`, `sort`, `description`, `admin_only`, `update_time`, `created_time`) VALUES
	(1, 'accounting_view', 1, '', b'0', '2018-05-16 18:16:08', '2018-05-15 16:18:04'),
	(2, 'operations_view', 2, '', b'0', '2018-05-16 18:16:10', '2018-05-15 16:18:20'),
	(3, 'transactions_view', 3, '', b'0', '2018-05-16 18:16:13', '2018-05-15 16:18:30'),
	(4, 'machinelist_view', 4, '', b'0', '2018-05-16 18:16:16', '2018-05-15 16:18:38'),
	(5, 'machinelist_create', 4, '', b'1', '2018-05-16 18:16:21', '2018-05-15 16:18:49'),
	(6, 'machinelist_edit', 4, '', b'0', '2018-05-16 18:16:24', '2018-05-15 16:18:57'),
	(7, 'machinelist_delete', 4, '', b'1', '2018-05-16 18:16:42', '2018-05-15 16:19:02'),
	(8, 'machinetransfer_view', 5, '', b'0', '2018-05-16 18:16:44', '2018-05-15 16:19:11'),
	(9, 'machinetransfer_edit', 5, '', b'0', '2018-05-16 18:16:45', '2018-05-15 16:19:26'),
	(10, 'coreuser_view', 6, '', b'1', '2018-05-16 18:16:47', '2018-05-15 16:19:33'),
	(11, 'coreuser_create', 6, '', b'1', '2018-05-16 18:16:49', '2018-05-15 16:19:40'),
	(12, 'coreuser_edit', 6, '', b'1', '2018-05-16 18:16:51', '2018-05-15 16:19:45'),
	(13, 'coreuser_delete', 6, '', b'1', '2018-05-16 18:16:55', '2018-05-15 16:19:50'),
	(14, 'agency_view', 7, '', b'0', '2018-05-16 18:16:57', '2018-05-15 16:19:58'),
	(15, 'agency_create', 7, '', b'0', '2018-05-16 18:17:00', '2018-05-15 16:20:04'),
	(16, 'agency_edit', 7, '', b'0', '2018-05-16 18:17:01', '2018-05-15 16:20:11'),
	(17, 'agency_delete', 7, '', b'0', '2018-05-16 18:17:03', '2018-05-15 16:20:17'),
	(18, 'versionsetting_view', 8, '', b'1', '2018-07-03 15:17:41', '2018-05-15 16:20:25'),
	(19, 'versionsetting_edit', 8, '', b'1', '2018-05-16 18:17:06', '2018-05-15 16:20:32'),
	(20, 'jpstatus_view', 9, '', b'1', '2018-07-03 15:17:39', '2018-05-15 16:20:40'),
	(21, 'reportjackpot_view', 10, '', b'0', '2018-07-02 17:10:34', '2018-07-02 16:16:25'),
	(25, 'reportmachine_view', 10, '', b'0', '2018-07-02 17:10:34', '2018-07-02 16:16:25'),
	(26, 'reportrevenue_view', 10, '', b'0', '2018-07-03 15:12:45', '2018-07-02 16:16:25');
/*!40000 ALTER TABLE `permissions` ENABLE KEYS */;

-- 傾印  表格 pcb.roles 結構
DROP TABLE IF EXISTS `roles`;
CREATE TABLE IF NOT EXISTS `roles` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(150) NOT NULL,
  `description` varchar(200) NOT NULL DEFAULT '',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COMMENT='角色表';

-- 正在傾印表格  pcb.roles 的資料：~2 rows (大約)
DELETE FROM `roles`;
/*!40000 ALTER TABLE `roles` DISABLE KEYS */;
INSERT INTO `roles` (`id`, `name`, `description`, `update_time`, `created_time`) VALUES
	(1, 'coreuser', 'default admin', '2018-05-15 16:32:53', '2018-05-15 16:16:54'),
	(2, 'agency', 'default agency', '2018-05-15 16:17:29', '2018-05-15 16:17:05');
/*!40000 ALTER TABLE `roles` ENABLE KEYS */;

-- 傾印  表格 pcb.role_permission 結構
DROP TABLE IF EXISTS `role_permission`;
CREATE TABLE IF NOT EXISTS `role_permission` (
  `role_id` int(10) unsigned NOT NULL,
  `permission_id` int(10) unsigned NOT NULL,
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`role_id`,`permission_id`),
  KEY `FK_role_permission_permissions` (`permission_id`),
  CONSTRAINT `FK_role_permission_permissions` FOREIGN KEY (`permission_id`) REFERENCES `permissions` (`id`),
  CONSTRAINT `FK_role_permission_roles` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='角色權限對應表';

-- 正在傾印表格  pcb.role_permission 的資料：~37 rows (大約)
DELETE FROM `role_permission`;
/*!40000 ALTER TABLE `role_permission` DISABLE KEYS */;
INSERT INTO `role_permission` (`role_id`, `permission_id`, `created_time`, `update_time`) VALUES
	(1, 1, '2018-05-15 16:21:11', '2018-05-15 16:21:11'),
	(1, 2, '2018-05-15 16:21:11', '2018-05-15 16:21:11'),
	(1, 3, '2018-05-15 16:24:47', '2018-05-15 16:24:47'),
	(1, 4, '2018-05-15 16:25:09', '2018-05-15 16:25:09'),
	(1, 5, '2018-05-15 16:28:06', '2018-05-15 16:28:06'),
	(1, 6, '2018-05-15 16:28:06', '2018-05-15 16:28:06'),
	(1, 7, '2018-05-15 16:28:06', '2018-05-15 16:28:06'),
	(1, 8, '2018-05-15 16:28:06', '2018-05-15 16:28:06'),
	(1, 9, '2018-05-15 16:28:06', '2018-05-15 16:28:06'),
	(1, 10, '2018-05-15 16:28:06', '2018-05-15 16:28:06'),
	(1, 11, '2018-05-15 16:28:06', '2018-05-15 16:28:06'),
	(1, 12, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(1, 13, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(1, 14, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(1, 15, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(1, 16, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(1, 17, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(1, 18, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(1, 19, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(1, 20, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(1, 21, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(1, 25, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(1, 26, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(2, 1, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(2, 2, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(2, 3, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(2, 4, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(2, 6, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(2, 8, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(2, 9, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(2, 14, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(2, 15, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(2, 16, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(2, 17, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(2, 21, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(2, 25, '2018-05-15 16:28:07', '2018-05-15 16:28:07'),
	(2, 26, '2018-05-15 16:28:07', '2018-05-15 16:28:07');
/*!40000 ALTER TABLE `role_permission` ENABLE KEYS */;

-- 傾印  程序 pcb.sp_addMachine 結構
DROP PROCEDURE IF EXISTS `sp_addMachine`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_addMachine`(
	IN `p_exeid` INT,
	IN `p_pcbID` VARCHAR(50),
	IN `p_storeName` VARCHAR(50),
	IN `p_userID` INT





)
IF NOT EXISTS (SELECT 1 FROM machines WHERE pcb_id = p_pcbID) THEN
BEGIN
	INSERT INTO machines(pcb_id, store_name, user_id) VALUES(p_pcbID, p_storeName, p_userID);
	SELECT LAST_INSERT_ID() AS machine_id;
END;
ELSE
BEGIN
	SIGNAL SQLSTATE '45000'
 	SET MESSAGE_TEXT = 'MachineID duplicated.'; 	
END;
END IF//
DELIMITER ;

-- 傾印  程序 pcb.sp_addTransaction 結構
DROP PROCEDURE IF EXISTS `sp_addTransaction`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_addTransaction`(
	IN `p_pcb_id` VARCHAR(50),
	IN `p_round_id` VARCHAR(50),
	IN `p_money_to_credit_radio` DOUBLE,
	IN `p_transaction_type` INT,
	IN `p_start_credit` INT,
	IN `p_result_credit` INT,
	IN `p_credit_in` INT,
	IN `p_credit_out` INT,
	IN `p_credit_type` INT,
	IN `p_original_bet` INT,
	IN `p_bet` INT,
	IN `p_win` INT,
	IN `p_jp1_win` INT,
	IN `p_jp2_win` INT,
	IN `p_jp3_win` INT,
	IN `p_jp4_win` INT,
	IN `p_game_type` INT,
	IN `p_game_id` INT,
	IN `p_memo` JSON,
	IN `p_created_time` DATETIME





)
BEGIN
	INSERT INTO TRANSACTIONS(pcb_id,round_id,currency_id,money_to_credit_radio,transaction_type,start_credit,result_credit,credit_in,credit_out,credit_type,original_bet,bet,win,jp1_win,jp2_win,jp3_win,jp4_win,game_type,game_id,memo,created_time)
	VALUES(p_pcb_id,p_round_id,1,p_money_to_credit_radio,p_transaction_type,p_start_credit,p_result_credit,p_credit_in,p_credit_out,p_credit_type,p_original_bet,p_bet,p_win,p_jp1_win,p_jp2_win,p_jp3_win,p_jp4_win,p_game_type,p_game_id,p_memo,p_created_time);
	SELECT LAST_INSERT_ID() AS transaction_id;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_addUser 結構
DROP PROCEDURE IF EXISTS `sp_addUser`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_addUser`(
	IN `p_ip` VARCHAR(50),
	IN `p_exeid` INT,
	IN `p_account` VARCHAR(50),
	IN `p_pwd` VARCHAR(500),
	IN `p_admin` BIT







)
proc_label:BEGIN
	DECLARE EXIT HANDLER for sqlexception
	BEGIN
	GET DIAGNOSTICS CONDITION 1
	@p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;
	SELECT 0;
	ROLLBACK;
	RESIGNAL;
	END;
	/*
	DECLARE EXIT HANDLER for sqlwarning
	BEGIN
	GET DIAGNOSTICS CONDITION 1
	@p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;
	SELECT 0;
	ROLLBACK;
	RESIGNAL;
	END;
	*/
	START TRANSACTION;
	IF NOT EXISTS (SELECT 1 FROM users WHERE account = p_account) THEN
	BEGIN
		SET @exeIsAdmin = EXISTS(SELECT 1 FROM users WHERE id = p_exeid AND admin = 1);
		IF !@exeIsAdmin AND p_admin THEN
		BEGIN
			SIGNAL SQLSTATE '45000'
		 	SET MESSAGE_TEXT = 'Permission denied.';
		 	LEAVE proc_label;
		END;
		ELSE
		BEGIN
			INSERT INTO users(account, encrypted_password, admin) VALUES(p_account, p_pwd, p_admin);
			SET @userID = LAST_INSERT_ID();
			IF p_admin AND @exeIsAdmin THEN
			BEGIN
				SELECT id INTO @defaultAdminRoleID FROM roles WHERE name = "coreuser" LIMIT 1;
				#exe account is default role, add default role to new account
				IF EXISTS (SELECT 1 FROM user_role WHERE user_id = p_exeid AND role_id = @defaultAdminRoleID) THEN
				BEGIN
					INSERT INTO user_role(user_id, role_id) VALUES(@userID, @defaultAdminRoleID);
				END;
				#exe account is specific permissions, add inherit permissions to new account.
				ELSE
				BEGIN
					INSERT INTO roles(name, description) VALUES(p_account, "specific permissions");
					SET @roleID = LAST_INSERT_ID();
					INSERT INTO user_role(user_id, role_id) VALUES(@userID, @roleID);
					INSERT INTO role_permission(role_id, permission_id) 
						SELECT @roleID AS role_id, permission_id FROM role_permission WHERE role_id = (SELECT role_id FROM user_role WHERE user_id = p_exeid);
				END;
				END IF;
			END;
			ELSE
			BEGIN
				SELECT id INTO @defaultAgencyRoleID FROM roles WHERE name = "agency";
				#exe account is admin, add default agency role to new account.
				#exe account is agency and default role, add default agency role to new account.
				IF @exeIsAdmin OR EXISTS(SELECT 1 FROM user_role WHERE user_id = p_exeid AND role_id = @defaultAgencyRoleID) THEN
				BEGIN
					INSERT INTO user_role(user_id, role_id) VALUES(@userID, @defaultAgencyRoleID);
				END;
				#exe account is agency and specific permissions, add inherit permissions to new account.
				ELSE
				BEGIN
					INSERT INTO roles(name, description) VALUES(p_account, "specific permissions");
					SET @roleID = LAST_INSERT_ID();
					INSERT INTO user_role(user_id, role_id) VALUES(@userID, @roleID);
					INSERT INTO role_permission(role_id, permission_id) 
						SELECT @roleID AS role_id, permission_id FROM role_permission WHERE role_id = (SELECT role_id FROM user_role WHERE user_id = p_exeid);
				END;
				END IF;
			END;
			END IF;
			#add user_node start
--    		SET @rowCount = ROW_COUNT();
			SELECT lft INTO @myLeft FROM user_node WHERE user_id = p_exeid;
			SELECT COUNT(rgt) INTO @nouse FROM user_node WHERE rgt > (SELECT rgt FROM user_node
			WHERE user_id = p_exeid) OR lft > (SELECT rgt FROM user_node
			WHERE user_id = p_exeid) OR user_id = p_exeid FOR UPDATE;
			
			UPDATE user_node SET rgt = rgt + 2 WHERE rgt > @myLeft;
			UPDATE user_node SET lft = lft + 2 WHERE lft > @myLeft;
			
			INSERT INTO user_node(user_id, parent_id, lft, rgt) VALUES(@userID, p_exeid, @myLeft + 1, @myLeft + 2);
			
			#add user_node end
		END;
		END IF;
	END;
	ELSE
	BEGIN
		SIGNAL SQLSTATE '45000'
	 	SET MESSAGE_TEXT = 'Account Name duplicated.';
	END;
	END IF;
	COMMIT;
	SELECT @userID AS user_id;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_deleteMachine 結構
DROP PROCEDURE IF EXISTS `sp_deleteMachine`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteMachine`(
	IN `p_exeid` INT,
	IN `p_id` INT








)
BEGIN
	DECLARE d_isAdmin BOOL;
	DECLARE d_lft INT;
	DECLARE d_rgt INT;
	DECLARE d_total INT;
	IF NOT EXISTS (SELECT 1 FROM transactions where pcb_id = (SELECT pcb_id FROM machines WHERE id = p_id) LIMIT 1) THEN
	BEGIN
		SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
		SELECT lft, rgt INTO d_lft, d_rgt FROM user_node WHERE user_id = p_exeid;
		CREATE TEMPORARY TABLE IF NOT EXISTS _tmp AS ( 
			SELECT 1
			FROM machines m RIGHT JOIN user_node un ON m.user_id = un.user_id AND !ISNULL(m.id) AND (un.lft BETWEEN d_lft AND d_rgt OR d_isAdmin)
			WHERE delete_flag <> 1 AND m.id = p_id
			LIMIT 1
		);
		IF EXISTS (SELECT 1 FROM _tmp) THEN
		BEGIN
			DELETE FROM machines WHERE id = p_id;
		END;
		ELSE
		BEGIN
			SIGNAL SQLSTATE '45000'
		 	SET MESSAGE_TEXT = 'Permission denied.';
		END;
		END IF;
	END;
	ELSE
	BEGIN
		SIGNAL SQLSTATE '45000'
	 	SET MESSAGE_TEXT = 'Exist transaction records, can''t delete.';
	END;
	END IF;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_editMachine 結構
DROP PROCEDURE IF EXISTS `sp_editMachine`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_editMachine`(
	IN `p_exeid` INT,
	IN `p_id` INT,
	IN `p_storeName` VARCHAR(50),
	IN `p_userID` INT











)
BEGIN
	DECLARE d_isAdmin BOOL;
	DECLARE d_lft INT;
	DECLARE d_rgt INT;
	DECLARE d_total INT;
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_lft, d_rgt FROM user_node WHERE user_id = p_exeid;
	CREATE TEMPORARY TABLE IF NOT EXISTS _tmp AS ( 
		SELECT SQL_CALC_FOUND_ROWS id, store_name, machine_name, pcb_id, m.user_id, m.created_time, m.update_time 
		FROM machines m RIGHT JOIN user_node un ON m.user_id = un.user_id AND !ISNULL(m.id) AND (un.lft BETWEEN d_lft AND d_rgt OR d_isAdmin)
		WHERE delete_flag <> 1 AND m.id = p_id
		LIMIT 1
	);
	IF EXISTS(SELECT 1 FROM _tmp) THEN
	BEGIN
		UPDATE machines SET store_name = p_storeName, user_id = p_userID
		WHERE id = p_id;
	END;
	ELSE
	BEGIN
		SIGNAL SQLSTATE '45000'
	 	SET MESSAGE_TEXT = 'Permission denied.';
	END;
	END IF;
	DROP TEMPORARY TABLE IF EXISTS `_tmp`;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_editUserActive 結構
DROP PROCEDURE IF EXISTS `sp_editUserActive`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_editUserActive`(
	IN `p_exeid` INT,
	IN `p_userid` INT





)
BEGIN
	DECLARE d_isAdmin BOOL;
	DECLARE d_lft INT;
	DECLARE d_rgt INT;
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_lft, d_rgt FROM user_node WHERE user_id = p_exeid;
	IF EXISTS(SELECT 1 FROM users WHERE id = p_userid) AND (d_isAdmin OR EXISTS(SELECT 1 FROM user_node WHERE user_id = p_userid AND lft BETWEEN d_lft AND d_rgt)) THEN
		BEGIN
			SET @currentState = null;
			SELECT state FROM users WHERE id = p_userid LIMIT 1 INTO @currentState;
			IF @currentState = 1 THEN
				BEGIN
					UPDATE users SET state = 2
					WHERE id = p_userid;
					INSERT INTO log_user_change(user_id, `action`, memo) VALUES(p_userid, 2, CONCAT('Set deactive by user ', p_exeid));
					SELECT 2 AS `state`;
				END;
			ELSE IF @currentState = 2 THEN
				BEGIN
					UPDATE users SET state = 1
					WHERE id = p_userid;
					INSERT INTO log_user_change(user_id, `action`, memo) VALUES(p_userid, 2, CONCAT('Set active by user ', p_exeid));
					SELECT 1 AS `state`;
				END;
				END IF;
			END IF;
		END;
	ELSE
		BEGIN
			SIGNAL SQLSTATE '45000'
		 	SET MESSAGE_TEXT = 'Account not found.';
		END;
	END IF;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_editUserPassword 結構
DROP PROCEDURE IF EXISTS `sp_editUserPassword`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_editUserPassword`(
	IN `p_exeid` INT,
	IN `p_userid` INT,
	IN `p_pwd` VARCHAR(500)












)
BEGIN
	DECLARE d_isAdmin BOOL;
	DECLARE d_lft INT;
	DECLARE d_rgt INT;
	DECLARE exit handler for sqlexception
	BEGIN
	ROLLBACK;
	GET DIAGNOSTICS CONDITION 1
	@p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;
	SELECT 0;
	RESIGNAL;
	END;
	
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_lft, d_rgt FROM user_node WHERE user_id = p_exeid;
	IF EXISTS(SELECT 1 FROM users WHERE id = p_userid) AND p_pwd > '' AND (d_isAdmin OR EXISTS(SELECT 1 FROM user_node WHERE user_id = p_userid AND lft BETWEEN d_lft AND d_rgt)) THEN
		BEGIN
			UPDATE users SET encrypted_password = p_pwd
			WHERE id = p_userid;
			INSERT INTO log_user_change(user_id, `action`, memo) VALUES(p_userid, 3, CONCAT('Password changed by user ', p_exeid));
		END;
	ELSE
		BEGIN
			SIGNAL SQLSTATE '45000'
		 	SET MESSAGE_TEXT = 'Account not found or password is blank.'; 	
		END;
	END IF;
	SELECT 1;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_editUserPermissions 結構
DROP PROCEDURE IF EXISTS `sp_editUserPermissions`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_editUserPermissions`(
	IN `p_exeid` INT,
	IN `p_userid` INT,
	IN `p_permissions` VARCHAR(500)





























)
proc_label:BEGIN
	DECLARE d_isExeAdmin BOOL;
	DECLARE d_isAdmin BOOL;
	DECLARE d_account VARCHAR(128);
	DECLARE d_lft INT;
	DECLARE d_rgt INT;
	DECLARE d_roleID INT;
	DECLARE d_permissionList TEXT;
	DECLARE d_permissionStub TEXT;
	DECLARE d_permissionCount TEXT;
	DECLARE d_permissionID INT;
	DECLARE d_permission VARCHAR(128);
	DECLARE exit handler for sqlexception
	BEGIN
	ROLLBACK;
	GET DIAGNOSTICS CONDITION 1
	@p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;
	SELECT 0;
	RESIGNAL;
	END;
	
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_lft, d_rgt FROM user_node WHERE user_id = p_exeid;
	
	START TRANSACTION;
	SET d_roleID = 0;
	SET d_permissionList = CONCAT('''',REPLACE(REPLACE(p_permissions ,' ',''),',',QUOTE(',')),'''');
	SET d_permissionStub = REPLACE(d_permissionList,',','');
	SET d_permissionCount = CASE WHEN(ISNULL(p_permissions) OR p_permissions = '') THEN 0 ELSE (LENGTH(d_permissionList) - LENGTH(d_permissionStub) + 1) END;
	SELECT account,admin INTO d_account, d_isAdmin FROM users WHERE id = p_userid;
	
	IF p_userid = p_exeid OR (!d_isExeAdmin AND !EXISTS(SELECT 1 FROM user_node WHERE user_id = p_userid AND lft BETWEEN d_lft AND d_rgt)) THEN
	BEGIN
		SIGNAL SQLSTATE '45000'
	 	SET MESSAGE_TEXT = d_isAdmin;
	 	LEAVE proc_label;
	END;
	END IF;
	
	IF d_account = '' OR ISNULL(d_account) THEN
	BEGIN
		SIGNAL SQLSTATE '45000'
	 	SET MESSAGE_TEXT = 'Account not found.';
	 	LEAVE proc_label;
	END;
	END IF;
	
	#IF role is default, create new role map to user
	IF EXISTS(SELECT 1 FROM roles r INNER JOIN user_role ur ON ur.user_id = p_userid AND ur.role_id = r.id WHERE (r.name = "coreuser" OR r.name = "agency")) THEN
	BEGIN
		INSERT INTO roles(name, description) VALUES(d_account, "specific permissions");
		SET d_roleID = LAST_INSERT_ID();
		UPDATE user_role SET role_id = d_roleID WHERE user_id = p_userid;
	END;
	ELSE
	BEGIN
		SELECT id INTO d_roleID FROM roles r INNER JOIN user_role ur ON ur.user_id = p_userid AND ur.role_id = r.id;
	END;
	END IF;
	
	DELETE FROM role_permission WHERE role_id = d_roleID;
	
	SET @x = 0;
	WHILE @x < d_permissionCount DO
		SET @x = @x + 1;
		SET d_permission = SUBSTRING_INDEX(SUBSTRING_INDEX(p_permissions, ',', @x), ',', -1);
		SELECT id INTO d_permissionID FROM permissions WHERE name = d_permission;
		
		IF ISNULL(d_permissionID) THEN
		BEGIN
			SIGNAL SQLSTATE '45000'
			SET MESSAGE_TEXT = 'Input permission string error, can not found.';
			LEAVE proc_label;
		END;
		END IF;
		
		IF NOT EXISTS(SELECT 1 FROM role_permission rp INNER JOIN user_role ur ON ur.user_id = p_exeid AND rp.role_id = ur.role_id WHERE rp.permission_id = d_permissionID)  OR
			EXISTS(SELECT 1 FROM role_permission rp INNER JOIN permissions p ON rp.permission_id = d_permissionID AND rp.permission_id = p.id WHERE admin_only = 1 AND !d_isAdmin)
		THEN
		BEGIN
			SIGNAL SQLSTATE '45000'
			SET MESSAGE_TEXT = 'Permission denied.';
			LEAVE proc_label;
		END;
		ELSE
		BEGIN
			INSERT INTO role_permission(role_id, permission_id) VALUES(d_roleID, d_permissionID);
		END;
		END IF;
	END WHILE;
   SET @rowCount = 1;
	COMMIT;
	SELECT @rowCount;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_getAccountings 結構
DROP PROCEDURE IF EXISTS `sp_getAccountings`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAccountings`(
	IN `p_exeid` INT,
	IN `p_users` TEXT,
	IN `p_stores` TEXT,
	IN `p_machines` TEXT,
	IN `p_startTime` DATETIME,
	IN `p_endTime` DATETIME,
	IN `p_groupBy` VARCHAR(50),
	IN `p_timeRange` INT






















)
    DETERMINISTIC
BEGIN
	DECLARE d_isAdmin BOOL;
	DECLARE d_lft INT;
	DECLARE d_rgt INT;
	DECLARE d_total INT;
	DECLARE d_now DATE;
	DECLARE d_pcb_ids VARCHAR(20000);
	DECLARE d_columns_sql_string VARCHAR(500);
	DECLARE d_group_by_sql_string VARCHAR(200);
	DECLARE d_group_interval_sql_string VARCHAR(200);
	DECLARE d_no_search BOOL;
	SET d_now = DATE(DATE_ADD(NOW(), INTERVAL -6 HOUR));
	SET d_no_search = (ISNULL(p_users) AND ISNULL(p_stores) AND ISNULL(p_machines));
	
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_lft, d_rgt FROM user_node WHERE user_id = p_exeid;
	SELECT group_concat(pcb_id  separator ',') INTO d_pcb_ids FROM machines WHERE
		(ISNULL(p_users) OR FIND_IN_SET(user_id, p_users)) AND
		(ISNULL(p_stores) OR FIND_IN_SET(store_name, p_stores)) AND
		(ISNULL(p_machines) OR FIND_IN_SET(pcb_id, p_machines));
	SELECT CASE WHEN ISNULL(d_pcb_ids) THEN '' ELSE d_pcb_ids END INTO d_pcb_ids;
	
	IF p_groupBy = 'machine' THEN
	BEGIN
		SET d_columns_sql_string = '
			store_name,
			machine_name,
			t.pcb_id,
			account';
		SET d_group_by_sql_string = 't.pcb_id';
	END;
	ELSEIF p_groupBy = 'user' THEN
	BEGIN
		SET d_columns_sql_string = '
			account';
		SET d_group_by_sql_string = 'u.id';
	END;
	ELSEIF p_groupBy = 'storename' THEN
	BEGIN
		SET d_columns_sql_string = '
			store_name';
		SET d_group_by_sql_string = 'store_name';
	END;
	ELSE
	BEGIN
		SIGNAL SQLSTATE '45000'
	 	SET MESSAGE_TEXT = 'Paramater "group" invaild.';
	END;
	END IF;

	SET @d_sqlString1 = CONCAT('
		CREATE TEMPORARY TABLE IF NOT EXISTS _tmp1 AS(
			SELECT 
				pcb_id,
				DATE_ADD(created_time, INTERVAL -(MINUTE(created_time)*60+SECOND(created_time)) + MINUTE(created_time) div ',p_timeRange,' * ',p_timeRange,' * 60 SECOND) AS range_start_time,
				SUM(credit_in) AS total_in,
				SUM(credit_out) AS total_out,
				SUM(bet) AS total_bet,
				SUM(win) AS total_win,
				SUM(jp1_win) AS total_jp1_win,
				SUM(jp2_win) AS total_jp2_win,
				SUM(jp3_win) AS total_jp3_win,
				SUM(jp4_win) AS total_jp4_win,
				SUM(CASE WHEN credit_type = 3 THEN credit_in ELSE 0 END) AS total_coin_in,
				SUM(CASE WHEN credit_type = 5 THEN credit_in ELSE 0 END) AS total_bill_in,
				SUM(CASE WHEN credit_type = 1 THEN credit_in ELSE 0 END) AS total_key_in,
				SUM(CASE WHEN credit_type = 4 THEN credit_out ELSE 0 END) AS total_coin_out,
				SUM(CASE WHEN credit_type = 6 THEN credit_out ELSE 0 END) AS total_bill_out,
				SUM(CASE WHEN credit_type = 2 THEN credit_out ELSE 0 END) AS total_key_out,
				SUM(CASE WHEN bet > 0 THEN 1 ELSE 0 END) AS total_play_times,
				SUM(CASE WHEN bet > 0 AND (win > 0 OR jp4_win > 0 OR jp3_win > 0 OR jp2_win > 0 OR jp1_win> 0) THEN 1 ELSE 0 END) AS total_win_times
			FROM transactions t 
			WHERE created_time BETWEEN ''',p_startTime,''' AND ''',p_endTime,''' AND ((',d_no_search,') OR FIND_IN_SET(pcb_id, ''',d_pcb_ids,'''))
			GROUP BY 
				range_start_time, pcb_id
			ORDER BY NULL);
		');
	SET @d_sqlString2 = CONCAT('
		CREATE TEMPORARY TABLE IF NOT EXISTS _tmp2 AS(
		SELECT SQL_CALC_FOUND_ROWS *,
				total_win_times/total_play_times*100 AS hit_rate,
				total_out/total_in*100 AS out_rate,
				total_win/total_bet*100 AS win_rate
			FROM (SELECT  
			range_start_time,
			DATE_ADD(DATE_ADD(range_start_time, INTERVAL ',p_timeRange,' MINUTE), INTERVAL -1 SECOND) AS range_end_time,
			SUM(total_jp1_win + total_jp2_win + total_jp3_win + total_jp4_win) AS total_jp_win,
			SUM(total_in) AS total_in,
			SUM(total_out) AS total_out,
			SUM(total_bet) AS total_bet,
			SUM(total_win) AS total_win,
			SUM(total_jp1_win) AS total_jp1_win,
			SUM(total_jp2_win) AS total_jp2_win,
			SUM(total_jp3_win) AS total_jp3_win,
			SUM(total_jp4_win) AS total_jp4_win,
			SUM(total_coin_in) AS total_coin_in,
			SUM(total_bill_in) AS total_bill_in,
			SUM(total_key_in) AS total_key_in,
			SUM(total_coin_out) AS total_coin_out,
			SUM(total_bill_out) AS total_bill_out,
			SUM(total_key_out) AS total_key_out,
			SUM(total_play_times) AS total_play_times,
			SUM(total_win_times) AS total_win_times,
			', d_columns_sql_string , ' 
			FROM _tmp1 t
			INNER JOIN machines m ON t.pcb_id = m.pcb_id
			INNER JOIN user_node un ON (m.user_id = un.user_id) AND (',d_isAdmin,' OR un.lft BETWEEN ',d_lft,' AND ',d_rgt,')
			INNER JOIN users u ON (un.user_id = u.id) -- AND (u.id = m.user_id)
			WHERE m.delete_flag <> 1 -- AND t.calculated_created_date < ''',d_now,'''
			GROUP BY range_start_time, ' , d_group_by_sql_string , '
			ORDER BY t.range_start_time) v);
		');
	
	PREPARE stmt FROM 'SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM @d_sqlString1;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM @d_sqlString2;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM 'SELECT *, FOUND_ROWS() AS total FROM _tmp2;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM 'DROP TEMPORARY TABLE IF EXISTS `_tmp1`;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM 'DROP TEMPORARY TABLE IF EXISTS `_tmp2`;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
		
	PREPARE stmt FROM 'COMMIT;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	 SELECT @d_sqlString;
	
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_getDashboard 結構
DROP PROCEDURE IF EXISTS `sp_getDashboard`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getDashboard`(
	IN `p_start_time` DATETIME,
	IN `p_end_time` DATETIME






)
    COMMENT 'index'
(SELECT *,
IFNULL((total_out/total_in), 0.0) AS out_rate,
IFNULL((total_win/total_bet), 0.0) AS win_rate,
IFNULL((total_win_times/total_play_times), 0.0) AS hit_rate 
FROM 
(SELECT
IFNULL(SUM(credit_in), 0) AS total_in,
IFNULL(SUM(credit_out), 0) AS total_out,
IFNULL(SUM(bet), 0) AS total_bet,
IFNULL(SUM(win), 0) AS total_win,
IFNULL(SUM(bet > 0), 0) AS total_play_times,
IFNULL(SUM(bet > 0 && win > 0), 0) AS total_win_times
FROM transactions
WHERE created_time BETWEEN p_start_time AND p_end_time) T)
UNION ALL
(SELECT *,
IFNULL((total_out/total_in), 0.0) AS out_rate,
IFNULL((total_win/total_bet), 0.0) AS win_rate,
IFNULL((total_win_times/total_play_times), 0.0) AS hit_rate 
FROM 
(SELECT
IFNULL(SUM(credit_in), 0) AS total_in,
IFNULL(SUM(credit_out), 0) AS total_out,
IFNULL(SUM(bet), 0) AS total_bet,
IFNULL(SUM(win), 0) AS total_win,
IFNULL(SUM(bet > 0), 0) AS total_play_times,
IFNULL(SUM(bet > 0 && win > 0), 0) AS total_win_times
FROM transactions
WHERE created_time BETWEEN DATE_SUB(p_start_time, INTERVAL 1 DAY) AND p_end_time) T)
UNION ALL
(SELECT *,
IFNULL((total_out/total_in), 0.0) AS out_rate,
IFNULL((total_win/total_bet), 0.0) AS win_rate,
IFNULL((total_win_times/total_play_times), 0.0) AS hit_rate 
FROM 
(SELECT
IFNULL(SUM(credit_in), 0) AS total_in,
IFNULL(SUM(credit_out), 0) AS total_out,
IFNULL(SUM(bet), 0) AS total_bet,
IFNULL(SUM(win), 0) AS total_win,
IFNULL(SUM(bet > 0), 0) AS total_play_times,
IFNULL(SUM(bet > 0 && win > 0), 0) AS total_win_times
FROM transactions
WHERE created_time BETWEEN DATE_SUB(p_start_time, INTERVAL 1 WEEK) AND p_end_time) T)
UNION ALL
(SELECT *,
IFNULL((total_out/total_in), 0.0) AS out_rate,
IFNULL((total_win/total_bet), 0.0) AS win_rate,
IFNULL((total_win_times/total_play_times), 0.0) AS hit_rate 
FROM 
(SELECT
IFNULL(SUM(credit_in), 0) AS total_in,
IFNULL(SUM(credit_out), 0) AS total_out,
IFNULL(SUM(bet), 0) AS total_bet,
IFNULL(SUM(win), 0) AS total_win,
IFNULL(SUM(bet > 0), 0) AS total_play_times,
IFNULL(SUM(bet > 0 && win > 0), 0) AS total_win_times
FROM transactions
WHERE created_time BETWEEN DATE_SUB(p_start_time, INTERVAL 1 MONTH) AND p_end_time) T)//
DELIMITER ;

-- 傾印  程序 pcb.sp_getListMachines 結構
DROP PROCEDURE IF EXISTS `sp_getListMachines`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getListMachines`(
	IN `p_exeid` INT


)
BEGIN
	DECLARE d_isAdmin BOOL;
	DECLARE d_lft INT;
	DECLARE d_rgt INT;
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_lft, d_rgt FROM user_node WHERE user_id = p_exeid;
	SELECT m.id, m.store_name, m.machine_name, m.pcb_id
	FROM machines m JOIN user_node un ON (m.user_id = un.user_id)
	WHERE delete_flag <> 1 AND (un.lft BETWEEN d_lft AND d_rgt OR d_isAdmin)
	ORDER BY m.pcb_id;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_getListUsers 結構
DROP PROCEDURE IF EXISTS `sp_getListUsers`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getListUsers`(
	IN `p_exeid` INT

)
BEGIN
	DECLARE d_isAdmin BOOL;
	DECLARE d_lft INT;
	DECLARE d_rgt INT;
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_lft, d_rgt FROM user_node WHERE user_id = p_exeid;
	CREATE TEMPORARY TABLE IF NOT EXISTS _tmp AS (
		SELECT u.id, u.account
		FROM users u LEFT JOIN user_node un ON u.id = un.user_id AND (un.lft BETWEEN d_lft AND d_rgt OR d_isAdmin)
		ORDER BY u.account DESC
	);
	SELECT t.* FROM _tmp t;
	DROP TEMPORARY TABLE IF EXISTS `_tmp`;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_getMachine 結構
DROP PROCEDURE IF EXISTS `sp_getMachine`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getMachine`(
	IN `p_exeid` INT,
	IN `p_id` INT












)
BEGIN
	DECLARE d_isAdmin BOOL;
	DECLARE d_lft INT;
	DECLARE d_rgt INT;
	DECLARE d_total INT;
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_lft, d_rgt FROM user_node WHERE user_id = p_exeid;
	CREATE TEMPORARY TABLE IF NOT EXISTS _tmp AS ( 
		SELECT SQL_CALC_FOUND_ROWS id, store_name, machine_name, pcb_id, m.user_id, m.created_time, m.update_time 
		FROM machines m RIGHT JOIN user_node un ON m.user_id = un.user_id AND !ISNULL(m.id) AND (un.lft BETWEEN d_lft AND d_rgt OR d_isAdmin)
		WHERE delete_flag <> 1 AND m.id = p_id

		LIMIT 1
	);
	SELECT * FROM _tmp;
	DROP TEMPORARY TABLE IF EXISTS `_tmp`;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_getMachines 結構
DROP PROCEDURE IF EXISTS `sp_getMachines`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getMachines`(
	IN `p_exeid` INT










)
BEGIN
	DECLARE d_isAdmin BOOL;
	DECLARE d_lft INT;
	DECLARE d_rgt INT;
	DECLARE d_total INT;
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_lft, d_rgt FROM user_node WHERE user_id = p_exeid;
	CREATE TEMPORARY TABLE IF NOT EXISTS _tmp AS ( 
		SELECT SQL_CALC_FOUND_ROWS m.id, m.store_name, machine_name, pcb_id, m.user_id, m.created_time, m.update_time 
		FROM machines m JOIN user_node un ON (m.user_id = un.user_id)
		WHERE m.delete_flag <> 1 AND (un.lft BETWEEN d_lft AND d_rgt OR d_isAdmin)
		ORDER BY m.created_time DESC
	);
	SET d_total = FOUND_ROWS();
	SELECT d_total AS total,t.* FROM _tmp t;
	DROP TEMPORARY TABLE IF EXISTS `_tmp`;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_getMachinesWithUsers 結構
DROP PROCEDURE IF EXISTS `sp_getMachinesWithUsers`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getMachinesWithUsers`(
	IN `p_exeid` INT











)
BEGIN
	DECLARE d_isAdmin BOOL;
	DECLARE d_exeLft INT;
	DECLARE d_exeRgt INT;
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_exeLft, d_exeRgt FROM user_node WHERE user_id = p_exeid;
	SELECT IFNULL(m.id, 0) AS machine_id, IFNULL(m.store_name, '') AS store_name, IFNULL(m.machine_name, '') AS machine_name, IFNULL(m.pcb_id, '') AS pcb_id, t.user_id, u.account, parent_id FROM 
	machines AS m RIGHT JOIN
	users AS u ON m.user_id = u.id
	INNER JOIN(
		SELECT parent.user_id, parent.parent_id, COUNT(m.id) AS mcount
		FROM user_node AS node ,
	        user_node AS parent,
	        machines m
		WHERE node.lft BETWEEN parent.lft AND parent.rgt 
				AND (parent.lft BETWEEN d_exeLft AND d_exeRgt OR d_isAdmin)
		      AND node.user_id = m.user_id
		GROUP BY parent.user_id
		ORDER BY node.lft) t ON u.id = t.user_id
	ORDER BY parent_id;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_getOperations 結構
DROP PROCEDURE IF EXISTS `sp_getOperations`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getOperations`(
	IN `p_exeid` INT,
	IN `p_users` TEXT,
	IN `p_stores` TEXT,
	IN `p_machines` TEXT,
	IN `p_startTime` DATETIME,
	IN `p_endTime` DATETIME,
	IN `p_groupBy` VARCHAR(50)












,
	IN `p_groupInterval` VARCHAR(50)












)
BEGIN
	DECLARE d_isAdmin BOOL;
	DECLARE d_lft INT;
	DECLARE d_rgt INT;
	DECLARE d_total INT;
	DECLARE d_now DATE;
	DECLARE d_pcb_ids VARCHAR(20000);
	DECLARE d_columns_sql_string VARCHAR(500);
	DECLARE d_group_by_sql_string VARCHAR(200);
	DECLARE d_group_interval_sql_string VARCHAR(200);
	DECLARE d_no_search BOOL;
	SET d_now = DATE(DATE_ADD(NOW(), INTERVAL -6 HOUR));
	SET d_no_search = (ISNULL(p_users) AND ISNULL(p_stores) AND ISNULL(p_machines));
	
	DROP TEMPORARY TABLE IF EXISTS `_tmp`;
	DROP TEMPORARY TABLE IF EXISTS `_tmp2`;
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_lft, d_rgt FROM user_node WHERE user_id = p_exeid;
	SELECT group_concat(pcb_id  separator ',') INTO d_pcb_ids FROM machines WHERE
		(ISNULL(p_users) OR FIND_IN_SET(user_id, p_users)) AND
		(ISNULL(p_stores) OR FIND_IN_SET(store_name, p_stores)) AND
		(ISNULL(p_machines) OR FIND_IN_SET(pcb_id, p_machines));
	SELECT CASE WHEN ISNULL(d_pcb_ids) THEN '' ELSE d_pcb_ids END INTO d_pcb_ids;
	
	IF p_groupInterval = 'day' THEN
	BEGIN
		SET d_group_interval_sql_string = 'YEAR(calculated_created_date), MONTH(calculated_created_date), DAY(calculated_created_date)';
	END;
	ELSEIF p_groupInterval = 'week' THEN
	BEGIN
	--	SET d_group_interval_sql_string = 'YEAR(calculated_created_date), MONTH(calculated_created_date), DATE_ADD(calculated_created_date, interval (8 - dayofweek(calculated_created_date)) % 7 DAY)';
	SET d_group_interval_sql_string = 'YEAR(calculated_created_date), WEEKOFYEAR(calculated_created_date)';
	END;
	ELSEIF p_groupInterval = 'month' THEN
	BEGIN
		SET d_group_interval_sql_string = 'YEAR(calculated_created_date), MONTH(calculated_created_date)';
	END;
	ELSE
	BEGIN
		DROP TEMPORARY TABLE IF EXISTS `_tmp`;
		SIGNAL SQLSTATE '45000'
	 	SET MESSAGE_TEXT = 'Paramater "group" invaild.';
	END;
	END IF;
	
	IF p_groupBy = 'machine' THEN
	BEGIN
		SET d_columns_sql_string = '
			store_name,
			machine_name,
			t.pcb_id,
			account';
		SET d_group_by_sql_string = 'GROUP BY t.pcb_id';
	END;
	ELSEIF p_groupBy = 'user' THEN
	BEGIN
		SET d_columns_sql_string = '
			account';
		SET d_group_by_sql_string = 'GROUP BY u.id';
	END;
	ELSEIF p_groupBy = 'storename' THEN
	BEGIN
		SET d_columns_sql_string = '
			store_name';
		SET d_group_by_sql_string = 'GROUP BY store_name';
	END;
	ELSE
	BEGIN
		DROP TEMPORARY TABLE IF EXISTS `_tmp`;
		SIGNAL SQLSTATE '45000'
	 	SET MESSAGE_TEXT = 'Paramater "group" invaild.';
	END;
	END IF;
	
	SET @d_sqlString1 = CONCAT('
		CREATE TEMPORARY TABLE IF NOT EXISTS _tmp1 AS(
			SELECT  
				pcb_id,
				SUM(credit_in) AS total_in,
				SUM(credit_out) AS total_out,
				SUM(bet) AS total_bet,
				SUM(win) AS total_win,
				SUM(jp1_win) AS total_jp1_win,
				SUM(jp2_win) AS total_jp2_win,
				SUM(jp3_win) AS total_jp3_win,
				SUM(jp4_win) AS total_jp4_win,
				DATE_ADD(t.created_time, INTERVAL -6 HOUR) AS calculated_created_date,
				SUM(CASE WHEN credit_type = 3 THEN credit_in ELSE 0 END) AS total_coin_in,
				SUM(CASE WHEN credit_type = 5 THEN credit_in ELSE 0 END) AS total_bill_in,
				SUM(CASE WHEN credit_type = 1 THEN credit_in ELSE 0 END) AS total_key_in,
				SUM(CASE WHEN credit_type = 4 THEN credit_out ELSE 0 END) AS total_coin_out,
				SUM(CASE WHEN credit_type = 6 THEN credit_out ELSE 0 END) AS total_bill_out,
				SUM(CASE WHEN credit_type = 2 THEN credit_out ELSE 0 END) AS total_key_out,
				SUM(CASE WHEN bet > 0 THEN 1 ELSE 0 END) AS total_play_times,
				SUM(CASE WHEN bet > 0 AND (win > 0 OR jp4_win > 0 OR jp3_win > 0 OR jp2_win > 0 OR jp1_win> 0) THEN 1 ELSE 0 END) AS total_win_times
				FROM transactions t 
				WHERE  created_time BETWEEN ''',p_startTime,''' AND ''',p_endTime,''' AND ((',d_no_search,') OR FIND_IN_SET(pcb_id, ''',d_pcb_ids,'''))
				GROUP BY 
					' , d_group_interval_sql_string , ', pcb_id
				ORDER BY NULL
		);
	');
	
	SET @d_sqlString2 = CONCAT('
	CREATE TEMPORARY TABLE IF NOT EXISTS _tmp2 AS(
		SELECT SQL_CALC_FOUND_ROWS *,
				total_win_times/total_play_times*100 AS hit_rate,
				total_out/total_in*100 AS out_rate,
				total_win/total_bet*100 AS win_rate
			FROM (SELECT  
				DATE(calculated_created_date) AS date,
				SUM(total_jp1_win + total_jp2_win + total_jp3_win + total_jp4_win) AS total_jp_win,
				SUM(total_in) AS total_in,
				SUM(total_out) AS total_out,
				SUM(total_bet) AS total_bet,
				SUM(total_win) AS total_win,
				SUM(total_jp1_win) AS total_jp1_win,
				SUM(total_jp2_win) AS total_jp2_win,
				SUM(total_jp3_win) AS total_jp3_win,
				SUM(total_jp4_win) AS total_jp4_win,
				SUM(total_coin_in) AS total_coin_in,
				SUM(total_bill_in) AS total_bill_in,
				SUM(total_key_in) AS total_key_in,
				SUM(total_coin_out) AS total_coin_out,
				SUM(total_bill_out) AS total_bill_out,
				SUM(total_key_out) AS total_key_out,
				SUM(total_play_times) AS total_play_times,
				SUM(total_win_times) AS total_win_times,
				', d_columns_sql_string ,
			' FROM _tmp1 t
			INNER JOIN machines m ON t.pcb_id = m.pcb_id
			INNER JOIN user_node un ON (m.user_id = un.user_id) AND (',d_isAdmin,' OR un.lft BETWEEN ',d_lft,' AND ',d_rgt,')
			INNER JOIN users u ON (un.user_id = u.id) -- AND (u.id = m.user_id)
			WHERE m.delete_flag <> 1 -- AND t.calculated_created_date < ''',d_now,'''
			' , d_group_by_sql_string , '
			ORDER BY t.calculated_created_date) v);
		');
	
	PREPARE stmt FROM 'SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM @d_sqlString1;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM @d_sqlString2;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM 'SELECT *, FOUND_ROWS() AS total FROM _tmp2;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM 'DROP TEMPORARY TABLE IF EXISTS `_tmp1`;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM 'DROP TEMPORARY TABLE IF EXISTS `_tmp2`;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM 'COMMIT;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	-- SELECT @d_sqlString;
	
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_getReportJackpot 結構
DROP PROCEDURE IF EXISTS `sp_getReportJackpot`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getReportJackpot`(
	IN `p_exeid` INT
,
	IN `p_users` TEXT
,
	IN `p_stores` TEXT
,
	IN `p_machines` TEXT
,
	IN `p_startTime` DATETIME,
	IN `p_endTime` DATETIME
,
	IN `p_groupBy` VARCHAR(50)
















)
BEGIN
	DECLARE d_isAdmin BOOL;
	DECLARE d_lft INT;
	DECLARE d_rgt INT;
	DECLARE d_total INT;
	DECLARE d_now DATE;
	DECLARE d_pcb_ids VARCHAR(20000);
	DECLARE d_columns_sql_string VARCHAR(500);
	DECLARE d_group_by_sql_string VARCHAR(200);
	DECLARE d_no_search BOOL;
	SET d_now = DATE(DATE_ADD(NOW(), INTERVAL -6 HOUR));
	SET d_no_search = (ISNULL(p_users) AND ISNULL(p_stores) AND ISNULL(p_machines));
	
	DROP TEMPORARY TABLE IF EXISTS `_tmp`;
	DROP TEMPORARY TABLE IF EXISTS `_tmp2`;
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_lft, d_rgt FROM user_node WHERE user_id = p_exeid;
	SELECT group_concat(pcb_id  separator ',') INTO d_pcb_ids FROM machines WHERE
		(ISNULL(p_users) OR FIND_IN_SET(user_id, p_users)) AND
		(ISNULL(p_stores) OR FIND_IN_SET(store_name, p_stores)) AND
		(ISNULL(p_machines) OR FIND_IN_SET(pcb_id, p_machines));
	SELECT CASE WHEN ISNULL(d_pcb_ids) THEN '' ELSE d_pcb_ids END INTO d_pcb_ids;
	
	IF p_groupBy = 'machine' THEN
	BEGIN
		SET d_columns_sql_string = '
			store_name,
			machine_name,
			t.pcb_id';
		SET d_group_by_sql_string = 'GROUP BY t.pcb_id';
	END;
	ELSEIF p_groupBy = 'user' THEN
	BEGIN
		SET d_columns_sql_string = '
			account';
		SET d_group_by_sql_string = 'GROUP BY u.id';
	END;
	ELSEIF p_groupBy = 'storename' THEN
	BEGIN
		SET d_columns_sql_string = '
			store_name';
		SET d_group_by_sql_string = 'GROUP BY store_name';
	END;
	ELSE
	BEGIN
		SET d_columns_sql_string = '
			store_name,
			machine_name,
			t.pcb_id, 
			jp_server';
		SET d_group_by_sql_string = 'GROUP BY t.created_time';
	END;
	END IF;
	
	SET @d_sqlString1 = CONCAT('
		CREATE TEMPORARY TABLE IF NOT EXISTS _tmp1 AS(
			SELECT  
				jp_server, pcb_id, jp1_win, jp2_win, jp3_win, jp4_win, created_time
			FROM transactions t 
			WHERE (jp1_win > 0 OR jp2_win > 0 OR jp3_win > 0 OR jp4_win > 0) AND created_time BETWEEN ''',p_startTime,''' AND ''',p_endTime,''' AND ((',d_no_search,') OR FIND_IN_SET(pcb_id, ''',d_pcb_ids,'''))
			ORDER BY NULL
		);
	');
	
	SET @d_sqlString2 = CONCAT('
	CREATE TEMPORARY TABLE IF NOT EXISTS _tmp2 AS(
		SELECT SQL_CALC_FOUND_ROWS 
				SUM(jp1_win) AS total_jp1_win, SUM(jp2_win) AS total_jp2_win, SUM(jp3_win) AS total_jp3_win, SUM(jp4_win) AS total_jp4_win, t.created_time
				,', d_columns_sql_string ,
			' FROM _tmp1 t
			INNER JOIN machines m ON t.pcb_id = m.pcb_id
			INNER JOIN user_node un ON (m.user_id = un.user_id) AND (',d_isAdmin,' OR un.lft BETWEEN ',d_lft,' AND ',d_rgt,')
			INNER JOIN users u ON (un.user_id = u.id) -- AND (u.id = m.user_id)
			WHERE m.delete_flag <> 1
			' , d_group_by_sql_string , '
			ORDER BY t.created_time);
		');
	
	PREPARE stmt FROM 'SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM @d_sqlString1;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM @d_sqlString2;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM 'SELECT *, FOUND_ROWS() AS total FROM _tmp2;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM 'DROP TEMPORARY TABLE IF EXISTS `_tmp1`;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM 'DROP TEMPORARY TABLE IF EXISTS `_tmp2`;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM 'COMMIT;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	#SELECT @d_sqlString1;
	#SELECT @d_sqlString2;
	
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_getReportMachine 結構
DROP PROCEDURE IF EXISTS `sp_getReportMachine`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getReportMachine`(
	IN `p_exeid` INT
,
	IN `p_users` TEXT,
	IN `p_stores` TEXT,
	IN `p_machines` TEXT,
	IN `p_startTime` DATETIME,
	IN `p_endTime` DATETIME









)
    DETERMINISTIC
BEGIN
	DECLARE d_isAdmin BOOL;
	DECLARE d_lft INT;
	DECLARE d_rgt INT;
	DECLARE d_total INT;
	DECLARE d_now DATE;
	DECLARE d_pcb_ids VARCHAR(20000);
	DECLARE d_columns_sql_string VARCHAR(500);
	DECLARE d_group_by_sql_string VARCHAR(200);
	DECLARE d_group_interval_sql_string VARCHAR(200);
	DECLARE d_no_search BOOL;
	SET d_now = DATE(DATE_ADD(NOW(), INTERVAL -6 HOUR));
	SET d_no_search = (ISNULL(p_machines));
	
	DROP TEMPORARY TABLE IF EXISTS `_tmp`;
	DROP TEMPORARY TABLE IF EXISTS `_tmp2`;
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_lft, d_rgt FROM user_node WHERE user_id = p_exeid;
	SELECT group_concat(pcb_id  separator ',') INTO d_pcb_ids FROM machines WHERE
		(ISNULL(p_machines) OR FIND_IN_SET(pcb_id, p_machines));
	SELECT CASE WHEN ISNULL(d_pcb_ids) THEN '' ELSE d_pcb_ids END INTO d_pcb_ids;
	
	SET @d_sqlString1 = CONCAT('
		CREATE TEMPORARY TABLE IF NOT EXISTS _tmp1 AS(
			SELECT  
				pcb_id,
				SUM(credit_in) AS total_in,
				SUM(credit_out) AS total_out,
				SUM(bet) AS total_bet,
				SUM(win) AS total_win,
				SUM(jp1_win) AS total_jp1_win,
				SUM(jp2_win) AS total_jp2_win,
				SUM(jp3_win) AS total_jp3_win,
				SUM(jp4_win) AS total_jp4_win,
				DATE_ADD(t.created_time, INTERVAL -6 HOUR) AS calculated_created_date,
				SUM(CASE WHEN credit_type = 3 THEN credit_in ELSE 0 END) AS total_coin_in,
				SUM(CASE WHEN credit_type = 5 THEN credit_in ELSE 0 END) AS total_bill_in,
				SUM(CASE WHEN credit_type = 1 THEN credit_in ELSE 0 END) AS total_key_in,
				SUM(CASE WHEN credit_type = 4 THEN credit_out ELSE 0 END) AS total_coin_out,
				SUM(CASE WHEN credit_type = 6 THEN credit_out ELSE 0 END) AS total_bill_out,
				SUM(CASE WHEN credit_type = 2 THEN credit_out ELSE 0 END) AS total_key_out,
				SUM(play_times) AS total_play_times,
				SUM(win_times) AS total_win_times
				FROM transactions t 
				WHERE created_time BETWEEN ''',p_startTime,''' AND ''',p_endTime,''' AND ((',d_no_search,') OR FIND_IN_SET(pcb_id, ''',d_pcb_ids,'''))
				GROUP BY 
					pcb_id
				ORDER BY NULL
		);
	');
	
	SET @d_sqlString2 = CONCAT('
	CREATE TEMPORARY TABLE IF NOT EXISTS _tmp2 AS(
		SELECT SQL_CALC_FOUND_ROWS *,
			total_win_times/total_play_times*100 AS hit_rate,
			total_out/total_in*100 AS out_rate,
			total_win/total_bet*100 AS win_rate,
			total_win_with_jp/total_bet*100 AS win_rate_with_jp,
			total_bet/total_play_times AS avg_bet
				FROM (SELECT  
				DATE(calculated_created_date) AS date,
				t.pcb_id,
				store_name,
				machine_name,
				account,
				SUM(total_jp1_win + total_jp2_win + total_jp3_win + total_jp4_win) AS total_jp_win,
				SUM(total_in) AS total_in,
				SUM(total_out) AS total_out,
				SUM(total_bet) AS total_bet,
				SUM(total_win) AS total_win,
				SUM(total_win + total_jp1_win + total_jp2_win + total_jp3_win + total_jp4_win) AS total_win_with_jp,
				SUM(total_jp1_win) AS total_jp1_win,
				SUM(total_jp2_win) AS total_jp2_win,
				SUM(total_jp3_win) AS total_jp3_win,
				SUM(total_jp4_win) AS total_jp4_win,
				SUM(total_coin_in) AS total_coin_in,
				SUM(total_bill_in) AS total_bill_in,
				SUM(total_key_in) AS total_key_in,
				SUM(total_coin_out) AS total_coin_out,
				SUM(total_bill_out) AS total_bill_out,
				SUM(total_key_out) AS total_key_out,
				SUM(total_play_times) AS total_play_times,
				SUM(total_win_times) AS total_win_times
				FROM _tmp1 t
			INNER JOIN machines m ON t.pcb_id = m.pcb_id
			INNER JOIN user_node un ON (m.user_id = un.user_id) AND (',d_isAdmin,' OR un.lft BETWEEN ',d_lft,' AND ',d_rgt,')
			INNER JOIN users u ON (un.user_id = u.id) -- AND (u.id = m.user_id)
			WHERE m.delete_flag <> 1 -- AND t.calculated_created_date < ''',d_now,'''
			GROUP BY 
				pcb_id
			ORDER BY t.calculated_created_date) v);
	');
	
	PREPARE stmt FROM 'SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM @d_sqlString1;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM @d_sqlString2;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM 'SELECT *, FOUND_ROWS() AS total FROM _tmp2;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM 'DROP TEMPORARY TABLE IF EXISTS `_tmp1`;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM 'DROP TEMPORARY TABLE IF EXISTS `_tmp2`;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM 'COMMIT;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	-- SELECT @d_sqlString1;
	 SELECT @d_sqlString2;
	
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_getReportRevenue 結構
DROP PROCEDURE IF EXISTS `sp_getReportRevenue`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getReportRevenue`(
	IN `p_exeid` INT
,
	IN `p_users` TEXT,
	IN `p_stores` TEXT,
	IN `p_machines` TEXT,
	IN `p_startTime` DATETIME,
	IN `p_endTime` DATETIME




)
BEGIN
	DECLARE d_isAdmin BOOL;
	DECLARE d_lft INT;
	DECLARE d_rgt INT;
	DECLARE d_total INT;
	DECLARE d_now DATE;
	DECLARE d_pcb_ids VARCHAR(20000);
	DECLARE d_columns_sql_string VARCHAR(500);
	DECLARE d_no_search BOOL;
	SET d_now = DATE(DATE_ADD(NOW(), INTERVAL -6 HOUR));
	SET d_no_search = (ISNULL(p_users) AND ISNULL(p_stores) AND ISNULL(p_machines));
	
	DROP TEMPORARY TABLE IF EXISTS `_tmp`;
	DROP TEMPORARY TABLE IF EXISTS `_tmp2`;
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_lft, d_rgt FROM user_node WHERE user_id = p_exeid;
	SELECT group_concat(pcb_id  separator ',') INTO d_pcb_ids FROM machines WHERE
		(ISNULL(p_users) OR FIND_IN_SET(user_id, p_users)) AND
		(ISNULL(p_stores) OR FIND_IN_SET(store_name, p_stores)) AND
		(ISNULL(p_machines) OR FIND_IN_SET(pcb_id, p_machines));
	SELECT CASE WHEN ISNULL(d_pcb_ids) THEN '' ELSE d_pcb_ids END INTO d_pcb_ids;
	
	SET @d_sqlString1 = CONCAT('
		CREATE TEMPORARY TABLE IF NOT EXISTS _tmp1 AS(
			SELECT  
				pcb_id,
				SUM(credit_in) AS total_in,
				SUM(credit_out) AS total_out
				FROM transactions t 
				WHERE created_time BETWEEN ''',p_startTime,''' AND ''',p_endTime,''' AND ((',d_no_search,') OR FIND_IN_SET(pcb_id, ''',d_pcb_ids,'''))
				GROUP BY 
					pcb_id
				ORDER BY NULL
		);
	');
	
	SET @d_sqlString2 = CONCAT('
	CREATE TEMPORARY TABLE IF NOT EXISTS _tmp2 AS(
		SELECT SQL_CALC_FOUND_ROWS 
				t.pcb_id,
				store_name,
				machine_name,
				account,
				total_in,
				total_out,
				total_in-total_out AS gross_net,
				total_out/total_in*100 AS out_rate
			FROM _tmp1 t
			INNER JOIN machines m ON t.pcb_id = m.pcb_id
			INNER JOIN user_node un ON (m.user_id = un.user_id) AND (',d_isAdmin,' OR un.lft BETWEEN ',d_lft,' AND ',d_rgt,')
			INNER JOIN users u ON (un.user_id = u.id) -- AND (u.id = m.user_id)
			WHERE m.delete_flag <> 1
			ORDER BY t.pcb_id);
		');
	
	PREPARE stmt FROM 'SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM @d_sqlString1;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM @d_sqlString2;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM 'SELECT *, FOUND_ROWS() AS total FROM _tmp2;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM 'DROP TEMPORARY TABLE IF EXISTS `_tmp1`;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM 'DROP TEMPORARY TABLE IF EXISTS `_tmp2`;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	PREPARE stmt FROM 'COMMIT;';
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	#SELECT @d_sqlString1;
	#SELECT @d_sqlString2;
	
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_getTopHitRate 結構
DROP PROCEDURE IF EXISTS `sp_getTopHitRate`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getTopHitRate`()
    COMMENT 'index'
SELECT 
store_name, machine_name, (IFNULL(SUM(bet > 0 && win > 0), 0)/IFNULL(SUM(bet > 0), 0)) AS value
FROM transactions t
INNER JOIN machines m ON t.pcb_id = m.pcb_id
GROUP BY m.pcb_id
ORDER BY value DESC
LIMIT 5//
DELIMITER ;

-- 傾印  程序 pcb.sp_getTopOutRate 結構
DROP PROCEDURE IF EXISTS `sp_getTopOutRate`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getTopOutRate`()
    COMMENT 'index'
SELECT 
store_name, machine_name, (SUM(credit_out)/SUM(credit_in)) AS value
FROM transactions t
INNER JOIN machines m ON t.pcb_id = m.pcb_id
GROUP BY m.pcb_id
ORDER BY value DESC
LIMIT 5//
DELIMITER ;

-- 傾印  程序 pcb.sp_getTopWinRate 結構
DROP PROCEDURE IF EXISTS `sp_getTopWinRate`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getTopWinRate`()
    COMMENT 'index'
SELECT 
store_name, machine_name, (Sum(win)/SUM(bet)) AS value
FROM transactions t
INNER JOIN machines m ON t.pcb_id = m.pcb_id
GROUP BY m.pcb_id
ORDER BY value DESC
LIMIT 5//
DELIMITER ;

-- 傾印  程序 pcb.sp_getTransactions 結構
DROP PROCEDURE IF EXISTS `sp_getTransactions`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getTransactions`(
	IN `p_exeid` INT


,
	IN `p_users` VARCHAR(10000),
	IN `p_stores` VARCHAR(10000),
	IN `p_machines` VARCHAR(10000),
	IN `p_transactiontypes` VARCHAR(10000),
	IN `p_gametypes` VARCHAR(10000)




,
	IN `p_startTime` DATETIME,
	IN `p_endTime` DATETIME


)
    DETERMINISTIC
BEGIN

	DECLARE d_isAdmin BOOL;
	DECLARE d_lft INT;
	DECLARE d_rgt INT;
	DECLARE d_total INT;
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_lft, d_rgt FROM user_node WHERE user_id = p_exeid;
	
	CREATE TEMPORARY TABLE IF NOT EXISTS _tmp AS ( 
		SELECT m.store_name, m.pcb_id, m.machine_name, t.transaction_type, t.game_type, t.start_credit,
		 t.result_credit, t.credit_in, t.credit_out, t.bet, t.memo, t.created_time, t.credit_type, t.round_id,
	 	 t.jp1_win, t.jp2_win, t.jp3_win, t.jp4_win, t.win
		FROM
		user_node un INNER JOIN machines m ON un.user_id = m.user_id AND (d_isAdmin OR un.lft BETWEEN d_lft AND d_rgt)
		INNER JOIN transactions t ON m.pcb_id = t.pcb_id
		WHERE 
			(ISNULL(p_users) OR FIND_IN_SET(un.user_id, p_users)) AND
			(ISNULL(p_stores) OR FIND_IN_SET(m.store_name, p_stores)) AND
			(ISNULL(p_machines) OR FIND_IN_SET(m.id, p_machines)) AND
			(ISNULL(p_transactiontypes) OR FIND_IN_SET(t.transaction_type, p_transactiontypes)) AND
			(ISNULL(p_gametypes) OR FIND_IN_SET(t.game_type, p_gametypes)) AND
			t.created_time BETWEEN p_startTime AND p_endTime
		ORDER BY t.created_time ASC
	);
	SET d_total = FOUND_ROWS();
	SELECT d_total AS total,t.* FROM _tmp t;
	DROP TEMPORARY TABLE IF EXISTS `_tmp`;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_getUser 結構
DROP PROCEDURE IF EXISTS `sp_getUser`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getUser`(
	IN `p_exeid` INT,
	IN `p_userid` INT




)
BEGIN
	DECLARE d_isAdmin BOOL;
	DECLARE d_lft INT;
	DECLARE d_rgt INT;
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_lft, d_rgt FROM user_node WHERE user_id = p_exeid;
	IF d_isAdmin OR EXISTS(SELECT 1 FROM user_node WHERE user_id = p_userid AND lft BETWEEN d_lft AND d_rgt) THEN
	BEGIN
		SELECT id, account, created_time FROM users WHERE id = p_userid;
	END;
	ELSE
	BEGIN
		SIGNAL SQLSTATE '45000'
	 	SET MESSAGE_TEXT = 'Permission denied.';
	END;
	END IF;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_getUserByAccount_temp 結構
DROP PROCEDURE IF EXISTS `sp_getUserByAccount_temp`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getUserByAccount_temp`(
	IN `p_account` VARCHAR(50)



)
BEGIN
	DECLARE exit handler for sqlexception
	BEGIN
	ROLLBACK;
	GET DIAGNOSTICS CONDITION 1
	@p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;
	SELECT 0;
	RESIGNAL;
	END;
	CREATE TEMPORARY TABLE IF NOT EXISTS _tmp AS (
		SELECT id, account, created_time FROM users WHERE account = p_account limit 1
	);
	IF NOT EXISTS(SELECT 1 FROM _tmp) THEN
		BEGIN
			SIGNAL SQLSTATE '45000'
		 	SET MESSAGE_TEXT = 'Account locked. Please contact to your administrator.';
		END;
	ELSE
		SELECT id, account, created_time FROM _tmp;
	END IF;
	
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_getUserPermissions 結構
DROP PROCEDURE IF EXISTS `sp_getUserPermissions`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getUserPermissions`(
	IN `p_exeid` INT,
	IN `p_userid` INT




,
	IN `p_admin` BIT

)
BEGIN
	DECLARE d_isAdmin BOOL;
	DECLARE d_lft INT;
	DECLARE d_rgt INT;
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_lft, d_rgt FROM user_node WHERE user_id = p_exeid;
	IF d_isAdmin OR EXISTS(SELECT 1 FROM user_node WHERE user_id = p_userid AND lft BETWEEN d_lft AND d_rgt) THEN
	BEGIN
		SELECT u.id, u.name, CASE WHEN(ISNULL(e.id)) THEN FALSE ELSE TRUE END AS active FROM
		(SELECT p.id, p.name, p.description, p.sort FROM permissions p 
		INNER JOIN role_permission rp on p.id = rp.permission_id AND rp.role_id = (SELECT role_id FROM user_role WHERE user_id = p_exeid) WHERE admin_only=false || admin_only=p_admin) u
		LEFT JOIN
		(SELECT p.id, p.name, p.description, p.sort FROM permissions p 
		INNER JOIN role_permission rp on p.id = rp.permission_id AND rp.role_id = (SELECT role_id FROM user_role WHERE user_id = p_userid) WHERE admin_only=false || admin_only=p_admin) e
		ON u.id = e.id
		ORDER BY u.sort;
	END;
	ELSE
	BEGIN
		SIGNAL SQLSTATE '45000'
	 	SET MESSAGE_TEXT = 'Permission denied.';
	END;
	END IF;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_getUsers 結構
DROP PROCEDURE IF EXISTS `sp_getUsers`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getUsers`(
	IN `p_exeid` INT,
	IN `p_admin` BIT





)
BEGIN
	DECLARE d_isAdmin BOOL;
	DECLARE d_lft INT;
	DECLARE d_rgt INT;
	DECLARE d_total INT;
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_lft, d_rgt FROM user_node WHERE user_id = p_exeid;
	CREATE TEMPORARY TABLE IF NOT EXISTS _tmp AS (
		SELECT SQL_CALC_FOUND_ROWS u.id, u.account, u.state, u.created_time, u.update_time 
		FROM users u LEFT JOIN user_node un ON u.id = un.user_id AND (un.lft BETWEEN d_lft AND d_rgt OR d_isAdmin)
		WHERE u.admin = p_admin AND u.id <> p_exeid
		ORDER BY u.created_time DESC
	);
	SET d_total = FOUND_ROWS();
	SELECT d_total AS total,t.* FROM _tmp t;
	DROP TEMPORARY TABLE IF EXISTS `_tmp`;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_getUsersTree 結構
DROP PROCEDURE IF EXISTS `sp_getUsersTree`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getUsersTree`(
	IN `p_exeid` INT




)
BEGIN
	DECLARE d_exeLft INT;   
	DECLARE d_exeRgt INT;  
	DECLARE d_isAdmin BIT;
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_exeLft, d_exeRgt FROM user_node WHERE user_id = p_exeid;
	SELECT t.user_id, u.account, parent_id FROM 
	users AS u
	INNER JOIN(
	SELECT parent.user_id, parent.parent_id
	FROM user_node AS node ,
	     user_node AS parent
	WHERE node.lft BETWEEN parent.lft AND parent.rgt 
			AND (parent.lft BETWEEN d_exeLft AND d_exeRgt OR d_isAdmin)
	GROUP BY parent.user_id
	ORDER BY node.lft) t ON u.id = t.user_id
	ORDER BY parent_id;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_login 結構
DROP PROCEDURE IF EXISTS `sp_login`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_login`(
	IN `p_account` VARCHAR(50),
	IN `p_pwd` CHAR(128)





,
	IN `p_ip` VARCHAR(50)







)
BEGIN
	DECLARE userID int;
	DECLARE exit handler for sqlexception
	BEGIN
	ROLLBACK;
	GET DIAGNOSTICS CONDITION 1
	@p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;
	RESIGNAL;
	END;
	CREATE TEMPORARY TABLE IF NOT EXISTS _tmp AS (
		SELECT id, account, created_time, login_fail_count, encrypted_password, state FROM users WHERE account = p_account LIMIT 1
	);
	SELECT id INTO userID FROM _tmp;
	
	#account locked or no account
	IF NOT EXISTS(SELECT 1 FROM _tmp) THEN
		BEGIN
			INSERT INTO log_user_change(user_id, action, memo, created_time, update_time) VALUES(NULL, 1, CONCAT('Try login not exist account: ', p_account, '.IP: ', p_ip), NOW(), NOW());
			SIGNAL SQLSTATE '45000'
		 	SET MESSAGE_TEXT = 'Account locked. Please contact to your administrator.';
		END;
	ELSEIF EXISTS(SELECT 1 FROM _tmp WHERE state <> 1) THEN
		BEGIN
			INSERT INTO log_user_change(user_id, action, memo, created_time, update_time) VALUES(NULL, 1, CONCAT('Try login not locked account: ', p_account, '.IP: ', p_ip), NOW(), NOW());
			SIGNAL SQLSTATE '45000'
		 	SET MESSAGE_TEXT = 'Account locked. Please contact to your administrator.';
		END;
	ELSEIF NOT EXISTS(SELECT 1 FROM _tmp WHERE encrypted_password = p_pwd) THEN
		BEGIN
			UPDATE users SET login_fail_count = login_fail_count +1 WHERE id = userID;
			INSERT INTO log_user_change(user_id, action, memo, created_time, update_time) VALUES(userID, 1, CONCAT('Login failed: ', p_account, '.IP:', p_ip), NOW(), NOW());
			IF EXISTS(SELECT 1 FROM _tmp WHERE id = userID AND login_fail_count >= 3) THEN
				UPDATE users SET state = 2 WHERE id = userID;
			END IF;
			SIGNAL SQLSTATE '45000'
		 	SET MESSAGE_TEXT = 'Account or password incorrect.';
		END;
	ELSEIF EXISTS(SELECT 1 FROM _tmp WHERE encrypted_password = p_pwd AND state = 1) THEN
		BEGIN
			UPDATE users SET login_fail_count = 0 WHERE id = userID;
			INSERT INTO log_user_change(user_id, action, memo, created_time, update_time) VALUES(userID, 1, CONCAT('Login: ', p_account, '.IP:', p_ip), NOW(), NOW());
			SELECT id, account, created_time FROM _tmp;
		END;
	END IF;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_loginPermisisons 結構
DROP PROCEDURE IF EXISTS `sp_loginPermisisons`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_loginPermisisons`(
	IN `p_userid` INT


)
SELECT p.id, p.name, CASE WHEN(ISNULL(p.id)) THEN FALSE ELSE TRUE END AS active FROM
(SELECT p.id, p.name, p.description, p.sort FROM permissions p 
INNER JOIN role_permission rp on p.id = rp.permission_id AND rp.role_id = (SELECT role_id FROM user_role WHERE user_id = p_userid)) p
ORDER BY p.sort//
DELIMITER ;

-- 傾印  程序 pcb.sp_transferMachines 結構
DROP PROCEDURE IF EXISTS `sp_transferMachines`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_transferMachines`(
	IN `p_exeid` INT,
	IN `p_machinids` VARCHAR(16384),
	IN `p_targetid` INT









)
proc_label: BEGIN
	DECLARE d_exeLft INT;   
	DECLARE d_exeRgt INT;  
	DECLARE d_isAdmin BIT;
	DECLARE d_machineList TEXT;   
	DECLARE d_machineStub TEXT;  
	DECLARE d_machineCount INT;
	DECLARE d_machineid INT;
	DECLARE d_ownerid INT;
	DECLARE exit handler for sqlexception
	BEGIN
	ROLLBACK;
	GET DIAGNOSTICS CONDITION 1
	@p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;
	SELECT 0;
	RESIGNAL;
	END;
	
	#foreach machines
	SELECT admin INTO d_isAdmin FROM users WHERE id = p_exeid;
	SELECT lft, rgt INTO d_exeLft, d_exeRgt FROM user_node WHERE user_id = p_exeid;
	SET d_machineList = CONCAT('''',REPLACE(REPLACE(p_machinids ,' ',''),',',QUOTE(',')),'''');
	SET d_machineStub = REPLACE(d_machineList,',','');
	SET d_machineCount = CASE WHEN(ISNULL(p_machinids) OR p_machinids = '') THEN 0 ELSE (LENGTH(d_machineList) - LENGTH(d_machineStub) + 1) END;
	
	#check targetid is in exeid
	IF !d_isAdmin AND !EXISTS(SELECT 1 FROM user_node WHERE user_id = p_targetid AND lft >= d_exeLft AND rgt <= d_exeRgt) THEN
	BEGIN
		SIGNAL SQLSTATE '45000'
	 	SET MESSAGE_TEXT = 'Permission denied.';
	 	LEAVE proc_label;
	END;
	END IF;

	SET @x = 0;
	START TRANSACTION;
	WHILE @x < d_machineCount DO
		SET @x = @x + 1;
		SET d_machineid = SUBSTRING_INDEX(SUBSTRING_INDEX(p_machinids, ',', @x), ',', -1);
		#check the machines is in exeid OR exeid is admin
		SELECT user_id INTO d_ownerid FROM machines WHERE id = d_machineid;
		
		IF ISNULL(d_ownerid) THEN
		BEGIN
			SIGNAL SQLSTATE '45000'
		 	SET MESSAGE_TEXT = 'Machine not exist.';
		 	LEAVE proc_label;
		END;
		END IF;
		
		IF !d_isAdmin AND !EXISTS(SELECT 1 FROM user_node WHERE user_id = d_ownerid AND lft >= d_exeLft AND rgt <= d_exeRgt) THEN #include self
		BEGIN
			SIGNAL SQLSTATE '45000'
		 	SET MESSAGE_TEXT = 'Permission denied.';
		 	LEAVE proc_label;
		END;
		END IF;
		
		#update machine owenr to targetid
		UPDATE machines SET user_id = p_targetid WHERE id = d_machineid;
	END WHILE;
	COMMIT;
	SELECT 1;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_userNodeAdd_temp 結構
DROP PROCEDURE IF EXISTS `sp_userNodeAdd_temp`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_userNodeAdd_temp`(
	IN `p_parentid` INT,
	IN `p_userid` INT





,
	IN `p_result` INT


)
BEGIN
	DECLARE EXIT handler for sqlexception
	BEGIN
	SET p_result = false;
	ROLLBACK;
	GET DIAGNOSTICS CONDITION 1
	@p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;
	END;
	
	START TRANSACTION;
	
	SELECT 1 FROM user_node WHERE rgt > (SELECT rgt FROM user_node
	WHERE user_id = p_parentid) OR lft > (SELECT rgt FROM user_node
	WHERE user_id = p_parentid) OR user_id = p_parentid FOR UPDATE;
	SELECT rgt INTO @myRight FROM user_node WHERE user_id = p_parentid;
	
	UPDATE user_node SET rgt = rgt + 2 WHERE rgt > @myRight;
	UPDATE user_node SET lft = lft + 2 WHERE lft > @myRight;
	
	INSERT INTO user_node(user_id, parent_id, lft, rgt) VALUES(p_userid, p_parentid, @myRight + 1, @myRight + 2);
	
	COMMIT;
	SET p_result = true;
END//
DELIMITER ;

-- 傾印  程序 pcb.sp_userNodeMove 結構
DROP PROCEDURE IF EXISTS `sp_userNodeMove`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_userNodeMove`(
	IN `p_exeid` INT,
	IN `p_userid` INT,
	IN `p_targetid` INT








)
proc_label:BEGIN
	DECLARE exit handler for sqlexception
	BEGIN
	ROLLBACK;
	GET DIAGNOSTICS CONDITION 1
	@p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;
	SELECT 0;
	RESIGNAL;
	END;
		
	#Set IDs
	SET @dirId := p_userid; #folder (subtree) you wanna move
	SET @targetId := p_targetid; #target
	
	START TRANSACTION;
	SELECT Count(1) FROM user_node FOR UPDATE;
	
	#get datas
	SET @isRoot = false;
	SET @exeIsAdmin = false;
	SET @userIsAdmin = false;
	SET @targetIsAdmin = false;
	SELECT admin INTO @exeIsAdmin FROM users WHERE id = p_exeid;
	SELECT admin INTO @userIsAdmin FROM users WHERE id = p_userid;
	SELECT admin INTO @targetIsAdmin FROM users WHERE id = p_targetid;
	SELECT parent_id=0 INTO @isRoot FROM user_node WHERE user_id = p_userid;
	
	#root can not be change
	IF (SELECT COUNT(1) FROM user_node WHERE user_id = p_exeid OR user_id = p_userid OR user_id = p_targetid) <> 3 THEN
	BEGIN
		SIGNAL SQLSTATE '45000'
	 	SET MESSAGE_TEXT = 'Permission denied(user node not correct).';
	 	LEAVE proc_label;
	END;
	END IF;
	
	#parent can not move to it's child
	IF EXISTS(SELECT 1 FROM user_node WHERE user_id = p_userid AND rgt > (SELECT rgt FROM user_node WHERE user_id = p_targetid)) THEN
	BEGIN
		SIGNAL SQLSTATE '45000'
	 	SET MESSAGE_TEXT = 'Permission denied(parent can not move to child).';
	 	LEAVE proc_label;
	END;
	END IF;
	
	#root can not be change
	IF @isRoot THEN
	BEGIN
		SIGNAL SQLSTATE '45000'
	 	SET MESSAGE_TEXT = 'Permission denied(Root can not change).';
	 	LEAVE proc_label;
	END;
	END IF;
	
	#check admin can't below agency
	IF @userIsAdmin AND !@targetIsAdmin THEN
	BEGIN
		SIGNAL SQLSTATE '45000'
	 	SET MESSAGE_TEXT = 'Permission denied(Admin can not below Agency).';
	 	LEAVE proc_label;
	END;
	END IF;
	
	#check userid and targetid are below exeid.
	SELECT rgt, lft, rgt-lft+1 INTO @exe_rgt, @exe_lft, @dir_size FROM user_node WHERE user_id = p_exeid;
	IF NOT EXISTS(SELECT 1 FROM user_node WHERE @exeIsAdmin OR (rgt < @exe_rgt AND lft > @exe_lft AND user_id = p_targetid)) OR 
		NOT EXISTS(SELECT 1 FROM user_node WHERE @exeIsAdmin OR (rgt < @exe_rgt AND lft > @exe_lft AND user_id = p_userid)) THEN
	BEGIN
		SIGNAL SQLSTATE '45000'
	 	SET MESSAGE_TEXT = 'Permission denied.(user or target not be managed by current user.)';
	 	LEAVE proc_label;
	END;
	END IF;
	
	SELECT rgt, lft, rgt-lft+1 INTO @dir_rgt, @dir_lft, @dir_size FROM user_node WHERE user_id = @dirId;
	
	#put the moving tree aside (lft and rgt columns must allow negative int)
	UPDATE user_node SET lft = 0-lft, rgt = 0-rgt WHERE lft BETWEEN @dir_lft AND @dir_rgt;
	
	#fill the empty space        
	UPDATE user_node SET rgt = rgt-@dir_size WHERE rgt > @dir_rgt;
	UPDATE user_node SET lft = lft-@dir_size WHERE lft > @dir_rgt;
	
	#get datas of the target-folder      
	SELECT lft INTO @target_lft FROM user_node WHERE user_id = @targetId;
	
	#create space in the target-folder        
	UPDATE user_node SET rgt = rgt+@dir_size WHERE rgt >= @target_lft;
	UPDATE user_node SET lft = lft+@dir_size WHERE lft > @target_lft;
	
	#update parentid
	UPDATE user_node SET parent_id = p_targetid WHERE user_id = p_userid;
	
	#edit all nodes in the moving-tree
	UPDATE user_node SET
	   lft     = 0 - lft - (@dir_lft - @target_lft - 1), #this formula fits for all moving directions
	   rgt     = 0 - rgt - (@dir_lft - @target_lft - 1)
	WHERE 
	   lft < 0;
	   
   SELECT rgt, lft INTO @targetRgt, @targetLft FROM user_node WHERE user_id = p_targetid;
	SELECT * FROM role_permission rp2 WHERE 
		rp2.role_id	IN (SELECT role_id FROM user_role ur INNER JOIN user_node un ON un.user_id > @targetLft AND un.user_id < @targetRgt AND ur.user_id = un.user_id) AND 
		rp2.permission_id NOT IN (SELECT permission_id FROM role_permission rp INNER JOIN user_role ur ON ur.user_id = p_targetid AND rp.role_id = ur.role_id);
	
	#DELETE permission where parent node not own.
	CREATE TEMPORARY TABLE IF NOT EXISTS temp_table AS (SELECT permission_id FROM role_permission rp INNER JOIN user_role ur ON ur.user_id = p_targetid AND rp.role_id = ur.role_id);
   SELECT rgt, lft INTO @targetRgt, @targetLft FROM user_node WHERE user_id = p_targetid;
	DELETE FROM role_permission WHERE 
		role_id	IN (SELECT role_id FROM user_role ur INNER JOIN user_node un ON un.lft > @targetLft AND un.rgt < @targetRgt AND ur.user_id = un.user_id) AND 
		permission_id NOT IN (SELECT permission_id FROM temp_table);
	COMMIT;
END//
DELIMITER ;

-- 傾印  程序 pcb.tempExec 結構
DROP PROCEDURE IF EXISTS `tempExec`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `tempExec`(p_exeid int, p_account varchar(50), p_pwd varchar(50), p_admin bit, p_createdtime datetime)
BEGIN
	DECLARE `_rollback` BOOL DEFAULT 0;
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET `_rollback` = 1;
	DECLARE exit handler for sqlwarning
		BEGIN
		GET DIAGNOSTICS CONDITION 1
		@p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;
		SELECT @p1 as RETURNED_SQLSTATE  , @p2 as MESSAGE_TEXT;
		ROLLBACK;
	END;
	START TRANSACTION;
	IF NOT EXISTS (SELECT 1 FROM users WHERE account = p_account) THEN
	BEGIN	
			INSERT INTO users(account, encrypted_password, admin, created_time) VALUES(p_account, p_pwd, p_admin, p_createdtime);
			SET @userID = LAST_INSERT_ID();
			SET @exeIsAdmin = EXISTS(SELECT 1 FROM users WHERE id = p_exeid AND admin = 1);
			IF p_admin AND @exeIsAdmin THEN
			BEGIN
				SELECT @defaultAdminRoleID := id,id FROM roles WHERE name = "coreuser";
				#exe account is default role, add default role to new account
				SELECT @defaultAdminRoleID,p_exeid;
				IF EXISTS (SELECT 1 FROM user_role WHERE user_id = p_exeid AND role_id = @defaultAdminRoleID) THEN
				BEGIN
					INSERT INTO user_role(user_id, role_id) VALUES(@userID, @defaultAdminRoleID);
				END;
				#exe account is specific permissions, add inherit permissions to new account.
				ELSE
				BEGIN
					INSERT INTO roles(name, description) VALUES(p_account, "specific permissions");
					SET @roleID = LAST_INSERT_ID();
					INSERT INTO user_role(user_id, role_id) VALUES(@userID, @roleID);
					#INSERT INTO role_permission(role_id, permission_id) 
						SELECT @roleID AS role_id, permission_id FROM role_permission source WHERE source.id = (SELECT role_id FROM user_role WHERE user_id = p_exeid) ;
				END;
				END IF;
			END;
			ELSE
			BEGIN
				#exe account is admin, add default agency role to new account.
				#exe account is agency and default role, add default agency role to new account.
				#exe account is agency and specific permissions, add inherit permissions to new account.
			SELECT 1;
			END;
			END IF;
	END;
	ELSE
	BEGIN
		SIGNAL SQLSTATE '45000'
	 	SET MESSAGE_TEXT = 'Account Name duplicated.'; 	
	END;
	END IF;
	COMMIT;
END//
DELIMITER ;

-- 傾印  表格 pcb.todos 結構
DROP TABLE IF EXISTS `todos`;
CREATE TABLE IF NOT EXISTS `todos` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `body` varchar(255) DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- 正在傾印表格  pcb.todos 的資料：~0 rows (大約)
DELETE FROM `todos`;
/*!40000 ALTER TABLE `todos` DISABLE KEYS */;
/*!40000 ALTER TABLE `todos` ENABLE KEYS */;

-- 傾印  表格 pcb.transactions 結構
DROP TABLE IF EXISTS `transactions`;
CREATE TABLE IF NOT EXISTS `transactions` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `pcb_id` int(10) unsigned NOT NULL,
  `round_id` bigint(20) unsigned NOT NULL,
  `currency_id` int(10) unsigned NOT NULL,
  `money_to_credit_radio` int(10) unsigned NOT NULL COMMENT '這邊是1元換幾分',
  `transaction_type` int(10) unsigned NOT NULL,
  `start_credit` int(10) unsigned NOT NULL,
  `result_credit` int(10) unsigned NOT NULL,
  `credit_in` int(10) unsigned NOT NULL DEFAULT '0',
  `credit_out` int(10) unsigned NOT NULL DEFAULT '0',
  `credit_type` int(10) unsigned NOT NULL DEFAULT '0',
  `bet` int(10) unsigned NOT NULL DEFAULT '0',
  `original_bet` int(10) unsigned NOT NULL DEFAULT '0',
  `win` int(10) unsigned NOT NULL DEFAULT '0',
  `jp1_win` int(11) unsigned NOT NULL DEFAULT '0',
  `jp2_win` int(11) unsigned NOT NULL DEFAULT '0',
  `jp3_win` int(11) unsigned NOT NULL DEFAULT '0',
  `jp4_win` int(11) unsigned NOT NULL DEFAULT '0',
  `jp_server` int(11) unsigned NOT NULL DEFAULT '0',
  `game_type` int(10) unsigned NOT NULL DEFAULT '0',
  `game_id` int(11) unsigned NOT NULL DEFAULT '0',
  `memo` json DEFAULT NULL,
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `calculated_created_date` datetime GENERATED ALWAYS AS ((`created_time` + interval -(6) hour)) VIRTUAL,
  `play_times` tinyint(4) GENERATED ALWAYS AS ((case when (`bet` > 0) then 1 else 0 end)) VIRTUAL,
  `win_times` tinyint(4) GENERATED ALWAYS AS ((case when ((`bet` > 0) and ((`win` > 0) or (`jp4_win` > 0) or (`jp3_win` > 0) or (`jp2_win` > 0) or (`jp1_win` > 0))) then 1 else 0 end)) VIRTUAL,
  PRIMARY KEY (`id`),
  KEY `currency_id` (`currency_id`),
  KEY `transaction_type` (`transaction_type`),
  KEY `credit_type` (`credit_type`),
  KEY `game_type` (`game_type`),
  KEY `pcb_id` (`pcb_id`),
  KEY `created_time` (`created_time`),
  KEY `bet` (`bet`),
  KEY `original_bet` (`original_bet`),
  KEY `win` (`win`),
  KEY `round_id` (`round_id`),
  KEY `game_id` (`game_id`),
  KEY `jp1_win` (`jp1_win`),
  KEY `jp2_win` (`jp2_win`),
  KEY `jp3_win` (`jp3_win`),
  KEY `jp4_win` (`jp4_win`),
  KEY `calculated_created_date` (`calculated_created_date`),
  CONSTRAINT `FK_transactions_currencies` FOREIGN KEY (`currency_id`) REFERENCES `currencies` (`id`),
  CONSTRAINT `FK_transactions_machines` FOREIGN KEY (`pcb_id`) REFERENCES `machines` (`pcb_id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=2358263 DEFAULT CHARSET=utf8 COMMENT='交易資料表，包含SPIN、儲值、兌回、JP等';

-- 正在傾印表格  pcb.transactions 的資料：~0 rows (大約)
DELETE FROM `transactions`;
/*!40000 ALTER TABLE `transactions` DISABLE KEYS */;
/*!40000 ALTER TABLE `transactions` ENABLE KEYS */;

-- 傾印  表格 pcb.users 結構
DROP TABLE IF EXISTS `users`;
CREATE TABLE IF NOT EXISTS `users` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `account` varchar(36) NOT NULL,
  `encrypted_password` char(128) NOT NULL,
  `current_sign_in_ip` varchar(15) NOT NULL DEFAULT '',
  `last_sign_in_ip` varchar(15) NOT NULL DEFAULT '',
  `admin` bit(1) NOT NULL DEFAULT b'0',
  `state` int(10) unsigned NOT NULL DEFAULT '1',
  `login_fail_count` int(10) unsigned NOT NULL DEFAULT '0',
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `account` (`account`)
) ENGINE=InnoDB AUTO_INCREMENT=649 DEFAULT CHARSET=utf8 COMMENT='使用者主表';

-- 正在傾印表格  pcb.users 的資料：~43 rows (大約)
DELETE FROM `users`;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` (`id`, `account`, `encrypted_password`, `current_sign_in_ip`, `last_sign_in_ip`, `admin`, `state`, `login_fail_count`, `created_time`, `update_time`) VALUES
	(2, 'testtest1', '8d60e43446ad6f2a0f2fd1608817843ec086cff247016123c4398c11412bc91e68a84e3113ef25352c57b8a48ae20480274bd66632523d6f6ca2328e694c0cbd', '', '', b'1', 1, 0, '2018-05-11 14:15:26', '2018-06-21 18:22:26'),
	(607, 'Foil6214', 'd1332761bfbc58eb6a12d2022528fbf7ee645f951b581814d5e841f866fbcf53ac7ce657e69adb970c63144a12c4378706a1c6183c525bcc84de8ea914d9d220', '', '', b'1', 1, 0, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(608, 'Keen8084', '205e92324f545b969cf338db2d24316f2643ce716f99ea192a460e48bc58e58dcee1704f0737e5e1cb68241972ae4408ee8d5606c6188a5e4adcd8e3207ae9cc', '', '', b'0', 1, 0, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(609, 'Linen7154', '57765b72f11778476bac7377720b3c891986d63bf847c0912c4e6536e0dcc78568ecca39b8265db4fb2600cc6f2c6403512465202ed1ce964308b8562434941e', '', '', b'0', 1, 0, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(610, 'White8111', 'd43921354c8f0e08fb7f7bbfc27abfa57e9a95604c85893bb995e864d0a9c04a0af4f47fe40cdbb851286ae503d0dac3ae0aaec4e7b376e4b955c343993e85a3', '', '', b'0', 1, 0, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(611, 'Stump823', '14a92b588b43dc129b891669c65700a4fcd89a2ef89b1daaa9c055f07f33ccc10151d61bf950b873bd1f0ead147454cf20347364c993f6c83a5fd7396f9afe8b', '', '', b'0', 1, 0, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(612, 'Carnelian4212', '7280297c86ba5bba31a2443eb516f4a54bda225bb6514094c044f7b1f615798d90a8eee3368593ac655f75546488ad3d46d93a6346532cba2ab9713fa884f889', '', '', b'0', 1, 0, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(613, 'River3611', '3a0b1dbdbbe7794691a402c0839bae7b243ce353ea8536ac671bc0008c3fe4445122a6eb0c7730295655e54b1beab4f89cfa09d21294a914d9dc1403718f4ebe', '', '', b'0', 1, 0, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(614, 'Calico6759', '31eb042a5cc705b07ebe7967f467d552e4be9be62d0d97efed86d599f605b7407cb434c00e9d916cea6552c0dc4a7ff0ec07b30a288c25089fd65e2df654c75e', '', '', b'1', 1, 0, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(615, 'Alabaster8794', '130dc5f7c51941948ae53034963e7aa757eff9b53f4bab334b518f1f3edba8dc2149c13fdb884b6ef321a8fec1605bd8b712b88135631ff87f8903805e17d545', '', '', b'0', 1, 0, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(616, 'Quark9592', 'c728f5bbe403472d1c4a28c7ff634ad84255c95b3a0650f83ff9bddec83d9ec156bd9cad91f6869a13f90937aaf5c78daad1387485aa62127861f5749387126b', '', '', b'0', 1, 0, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(617, 'Dandelion7708', 'c0b73980f4da69061bddce7b4e1a902e2048e0b73e64ce07ef9a3713331221eae37b5084e4f3abc6846264fc4d5db303be4e107199712cd420c49b9600344562', '', '', b'0', 1, 0, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(618, 'Helix9788', 'd374b76f1b9b9fc766edd2c882127234fb702e5f415355cd53ff098253bb7086b30717a59711784b701474c06dbe9c2670eb0f747deddc7df25e0c3007d5243f', '', '', b'0', 1, 0, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(619, 'Carnelian8695', '518db6b0d5837f51c280d8027cd20898417f8780268716ae7e5d9f6dec5d639501dad30da43b5605d49af3924ab24057c12f59cbcd37ca753d69b50a0ae36356', '', '', b'0', 1, 0, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(620, 'Iridescent3646', '40c8f1af55f8a8ef311c6fdef626d97adc760a03f8f595989449c5fbfb14c3835269b09d1a0b6c9dc4ccaf7109e841ca99599ed7577f88c3708f79d4caa3452b', '', '', b'0', 1, 0, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(621, 'Motley4689', '2793f7cba884f7d6f666fcbc52b38bf6b74f19df4b17b56bd2f59a23befb2fea0600eb54591eca455ec1a58955bc2d6635187b47c7c321f23ba2df2fb566ae1d', '', '', b'1', 1, 0, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(622, 'Typhoon5670', '554fdab60c06adae6be5bea72976be2fd14c92e7f04dba56081abdbd561032c13e82751743841592ca7542db8f948eebe26b2f64ea5963868f7045541e3865e6', '', '', b'0', 1, 0, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(623, 'Leather8738', '9b83eb1165f60a64cc5f259ed75deef2e9e22c785da6a42e093228448c6a67496534dec5a09aa7e084ebb89e551e798f8817e042ad0097189a4c51fc8e95a9bf', '', '', b'0', 1, 0, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(624, 'Foul9344', 'bffc0411915384201278ad3812f2ec5f439e3180d5be25cdef5f683445beb144393a03bb69d36b243dac9165dc73f46bfab07320e12e06d39bf3fb61098a2cbb', '', '', b'0', 1, 0, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(625, 'Plain3002', '57919efbc88aa3c4f898e129c8f9deac527fb1ed931fb3becf1daa92d89a7db501e834522649dcabd63a4cad2fe0fab7e7990afc9d00b06b45ff9b2f08b2bc2b', '', '', b'0', 1, 0, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(626, 'Spring392', '2dbb64c9616aa38dbedaf91599e274e86e2c72508698f27b4feaca22ec5b2d2f5624b83d43ce9a98bf96afbe76381bfd6a4037e50afc158a49579934b9e1432f', '', '', b'0', 1, 0, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(627, 'Ribbon1215', 'b30379542551d2e249d051a7ac1112c7fa9e5a78567641cc99fbf91207b644efe772d89a6617e7ddff541d3b2da1d140c443a780da6179034ed1177bb6c82e42', '', '', b'0', 1, 0, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(628, 'Brown2642', 'c113fb4d7dc26c87ca14b54aaabe7be5dbc41d3740480f6a176c4c4de6d94aab488c2d9a08f0c463edcf7c57de766b1c8d791dcc12c1d1052c0e3bf4311652b2', '', '', b'1', 1, 0, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(629, 'Notch5724', '9930ef0688665b59a8c99521f3bfaa22a4f9a5ef3aace1a612341576354e89454cdb5b287ec4dbcb624bdcfdf9d3132149c3516c1941c442525e9852517a5e6f', '', '', b'0', 1, 0, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(630, 'Gossamer1206', '23be9beb40b0e89ba76da657f02d451fefe278af4dad2fff035932ceda325d745b3bd1a3df40f06255c03bb8c6aafca00f52677e2b1200eabdeca46abcdf3047', '', '', b'0', 1, 0, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(631, 'Bog7779', '482cd4707b6c77d5e7744854a9022162c0c9ca61400012c50ce9f90959e96adb8a1bdabd97241a474cfb943f88520bdcce8022746bf59279da041f58419df192', '', '', b'0', 1, 0, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(632, 'Prairie7025', '1264f7e4b8dcbc283362dba41226212ca8b21efb71bce0b409a389af34645b381372bfc9aa9772382084aa5cf155c84a9b6fe817cf363f98b6ecd85ff79694e4', '', '', b'0', 1, 0, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(633, 'Pale8276', '23142792bd451e7cc2bb7832b59af672108330dea2d73a7d5be0b61778e74607e7aa40818c282c4348b1ef62bdb030b97b92668b8956f76a264d27a1c595c420', '', '', b'0', 1, 0, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(634, 'Crack2835', '7dd561c2039923ac444d3e7608bf25a490d88e1ecc1642eccbecbb23f5648677da44cd63e930b4f80c44dbadff7ce49de097c1e527a4d59103e7f155938013ec', '', '', b'0', 1, 0, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(635, 'Sunrise344', 'd141e8b5b9038f2a9980df3d51b70ebebd5ef26dbf6e59dbb2cb9e8f5b670dff1cda57feb1d308e2a6050dcfab6e5b2de5200b289dd2ad7b5d228e573dfad715', '', '', b'1', 1, 0, '2018-06-29 17:52:16', '2018-07-03 17:30:40'),
	(636, 'Paper6466', '530d9064f67cd89a15c4bc016aa9ce22c4cf21888969c140ac1211db3b62d7dc0d5e1a48c25dcf8f8e71a906c3e564920a08a1d1cbb3034af6c5fea3be27e508', '', '', b'0', 1, 0, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(637, 'Shag3964', '0a072a8e20c4275cf5b04cb6a2b7cab315a7a3b09b2c29b9baf4c2896c5291d2d278f66d76f9cd74175b0365c0a1d52db834018d3f1e8c35fd6b78f9a281475d', '', '', b'0', 1, 0, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(638, 'Night8374', 'bbe7ac59be376a6eaa6b1e8948e07a1aead36ee13f1a99d861e9f24daa03561aa16bab3f30b447d7f48e4ed3d0888190cc8b2dd2a38cecbf3c60ce0a88cce6a2', '', '', b'0', 1, 0, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(639, 'Crystal880', '72e9538aab17065b294cea3d7c6d7df15a2385481322511f89475ddf04c955526a0930e1bd6f00592ae942f69a4967acf2dfb323a0b45e08b9b83e51bb550d1a', '', '', b'0', 1, 0, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(640, 'Fluff531', '9301b08fd56a0832e169967ed6bf17c1740b989fe55545311e7844becb4c4b93ddf5cc57cd37417260a41c7d5a44571262e9e7997ef89084fcaf2352f0609163', '', '', b'0', 1, 0, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(641, 'Plump8900', 'b1709697d048eedf93c1ba96475d25bfbf525412a3580521d93bbaebd4698a2ab67cf7fe3fe5aaf78791e23e0b7c9c6c1e909952425584c8f003ef39e205ded6', '', '', b'0', 1, 0, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(642, 'Destiny799', '39ba0e0ce36d0284ac5b576b8562b64252dc8fcfff47b35429434770618b72bf3c477fd79196852d6fb3d0181f349e39b50a6362d43bd1d3b56476adfed508c0', '', '', b'1', 1, 0, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(643, 'Plume8602', '4ede4fba0943ca7bd18214e1612385633498ebe8729acb2769f0d34b03aa378cb5d1684708c28beb9ef8a3a73512e8d16cd09d17efcb72251f22182825350471', '', '', b'0', 1, 0, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(644, 'Flax9201', '2d81d3870717b17016353b3e26e5423c84bfce393ccab3a96af92993750fa572aa117fa9e3acc8fb21abbaea60a123dcd76dd6341b0418bb091445303959eb38', '', '', b'0', 1, 0, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(645, 'Sand9710', '550b6fb2dba0dd36a645a048b086c908e1c7d8fbc9eea3028d486cb4d772225c926078c12bb81e4e64f25f0cc528e43465ac2639c80d06d4e64ad105ff2247ed', '', '', b'0', 1, 0, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(646, 'Pewter7880', '53b1256cfdb7bf7d2306dd2c95ea36530582e080ad489ad9f66fa1a890502e5387c5f444d482dded3adcad4cbb8f9b3aea9d368e6044dffa21faf051021790f4', '', '', b'0', 1, 0, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(647, 'Lava7967', '02d1bbc6bbc2c58a62b12868b751df291681339c0f39573251d46e5b39c2afa41d7f9383cefc29c1503ac2e9b20202fca5357a329c4a061e7ed8bf2b3e046ed6', '', '', b'0', 1, 0, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(648, 'Dour8070', '9303bd26f792119b04846a7b40e5a2c0efb3bb31de8d4f3a6e704ed34e87afc9c01d4e124013fca0f63c815e459c1a3f66177a4c1fc4330fe7eabe32c3246cac', '', '', b'0', 1, 0, '2018-06-29 17:52:16', '2018-06-29 17:52:16');
/*!40000 ALTER TABLE `users` ENABLE KEYS */;

-- 傾印  表格 pcb.user_node 結構
DROP TABLE IF EXISTS `user_node`;
CREATE TABLE IF NOT EXISTS `user_node` (
  `user_id` int(10) unsigned NOT NULL,
  `parent_id` int(10) unsigned NOT NULL,
  `lft` bigint(20) NOT NULL,
  `rgt` bigint(20) NOT NULL,
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`user_id`),
  KEY `parent_id_lft_rgt` (`parent_id`,`lft`,`rgt`),
  CONSTRAINT `FK_user_node_users` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='使用者節點描述表';

-- 正在傾印表格  pcb.user_node 的資料：~43 rows (大約)
DELETE FROM `user_node`;
/*!40000 ALTER TABLE `user_node` DISABLE KEYS */;
INSERT INTO `user_node` (`user_id`, `parent_id`, `lft`, `rgt`, `created_time`, `update_time`) VALUES
	(2, 0, 1, 86, '2018-05-17 17:38:46', '2018-06-29 17:52:16'),
	(607, 2, 64, 85, '2018-06-22 11:52:04', '2018-06-29 17:52:16'),
	(608, 607, 75, 84, '2018-06-22 11:52:04', '2018-06-29 17:52:16'),
	(609, 608, 82, 83, '2018-06-22 11:52:04', '2018-06-29 17:52:16'),
	(610, 608, 80, 81, '2018-06-22 11:52:04', '2018-06-29 17:52:16'),
	(611, 607, 65, 74, '2018-06-22 11:52:04', '2018-06-29 17:52:16'),
	(612, 611, 72, 73, '2018-06-22 11:52:04', '2018-06-29 17:52:16'),
	(613, 611, 70, 71, '2018-06-22 11:52:04', '2018-06-29 17:52:16'),
	(614, 2, 58, 63, '2018-06-22 11:52:04', '2018-06-29 17:52:16'),
	(615, 614, 61, 62, '2018-06-22 11:52:04', '2018-06-29 17:52:16'),
	(616, 608, 78, 79, '2018-06-22 11:52:04', '2018-06-29 17:52:16'),
	(617, 608, 76, 77, '2018-06-22 11:52:04', '2018-06-29 17:52:16'),
	(618, 614, 59, 60, '2018-06-22 11:52:04', '2018-06-29 17:52:16'),
	(619, 611, 68, 69, '2018-06-22 11:52:04', '2018-06-29 17:52:16'),
	(620, 611, 66, 67, '2018-06-22 11:52:04', '2018-06-29 17:52:16'),
	(621, 2, 36, 57, '2018-06-29 17:52:09', '2018-06-29 17:52:16'),
	(622, 621, 47, 56, '2018-06-29 17:52:09', '2018-06-29 17:52:16'),
	(623, 622, 54, 55, '2018-06-29 17:52:09', '2018-06-29 17:52:16'),
	(624, 622, 52, 53, '2018-06-29 17:52:09', '2018-06-29 17:52:16'),
	(625, 621, 37, 46, '2018-06-29 17:52:09', '2018-06-29 17:52:16'),
	(626, 625, 44, 45, '2018-06-29 17:52:09', '2018-06-29 17:52:16'),
	(627, 625, 42, 43, '2018-06-29 17:52:09', '2018-06-29 17:52:16'),
	(628, 2, 30, 35, '2018-06-29 17:52:09', '2018-06-29 17:52:16'),
	(629, 628, 33, 34, '2018-06-29 17:52:09', '2018-06-29 17:52:16'),
	(630, 622, 50, 51, '2018-06-29 17:52:09', '2018-06-29 17:52:16'),
	(631, 622, 48, 49, '2018-06-29 17:52:09', '2018-06-29 17:52:16'),
	(632, 628, 31, 32, '2018-06-29 17:52:09', '2018-06-29 17:52:16'),
	(633, 625, 40, 41, '2018-06-29 17:52:09', '2018-06-29 17:52:16'),
	(634, 625, 38, 39, '2018-06-29 17:52:09', '2018-06-29 17:52:16'),
	(635, 2, 8, 29, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(636, 635, 19, 28, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(637, 636, 26, 27, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(638, 636, 24, 25, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(639, 635, 9, 18, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(640, 639, 16, 17, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(641, 639, 14, 15, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(642, 2, 2, 7, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(643, 642, 5, 6, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(644, 636, 22, 23, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(645, 636, 20, 21, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(646, 642, 3, 4, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(647, 639, 12, 13, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(648, 639, 10, 11, '2018-06-29 17:52:16', '2018-06-29 17:52:16');
/*!40000 ALTER TABLE `user_node` ENABLE KEYS */;

-- 傾印  表格 pcb.user_role 結構
DROP TABLE IF EXISTS `user_role`;
CREATE TABLE IF NOT EXISTS `user_role` (
  `user_id` int(10) unsigned NOT NULL,
  `role_id` int(10) unsigned NOT NULL,
  `created_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`user_id`,`role_id`),
  KEY `FK_user_role_roles` (`role_id`),
  CONSTRAINT `FK_user_role_roles` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`),
  CONSTRAINT `FK_user_role_users` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='使用者角色對應表';

-- 正在傾印表格  pcb.user_role 的資料：~43 rows (大約)
DELETE FROM `user_role`;
/*!40000 ALTER TABLE `user_role` DISABLE KEYS */;
INSERT INTO `user_role` (`user_id`, `role_id`, `created_time`, `update_time`) VALUES
	(2, 1, '2018-05-15 16:50:10', '2018-06-22 09:30:33'),
	(607, 1, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(608, 2, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(609, 2, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(610, 2, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(611, 2, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(612, 2, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(613, 2, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(614, 1, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(615, 2, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(616, 2, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(617, 2, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(618, 2, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(619, 2, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(620, 2, '2018-06-22 11:52:04', '2018-06-22 11:52:04'),
	(621, 1, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(622, 2, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(623, 2, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(624, 2, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(625, 2, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(626, 2, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(627, 2, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(628, 1, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(629, 2, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(630, 2, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(631, 2, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(632, 2, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(633, 2, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(634, 2, '2018-06-29 17:52:09', '2018-06-29 17:52:09'),
	(635, 1, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(636, 2, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(637, 2, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(638, 2, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(639, 2, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(640, 2, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(641, 2, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(642, 1, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(643, 2, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(644, 2, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(645, 2, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(646, 2, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(647, 2, '2018-06-29 17:52:16', '2018-06-29 17:52:16'),
	(648, 2, '2018-06-29 17:52:16', '2018-06-29 17:52:16');
/*!40000 ALTER TABLE `user_role` ENABLE KEYS */;

-- 傾印  檢視 pcb.v_operations 結構
DROP VIEW IF EXISTS `v_operations`;
-- 創建臨時表格，以解決檢視依存性錯誤
CREATE TABLE `v_operations` (
	`id` BIGINT(20) UNSIGNED NOT NULL,
	`pcb_id` INT(10) UNSIGNED NOT NULL,
	`round_id` BIGINT(20) UNSIGNED NOT NULL,
	`currency_id` INT(10) UNSIGNED NOT NULL,
	`money_to_credit_radio` INT(10) UNSIGNED NOT NULL COMMENT '這邊是1元換幾分',
	`transaction_type` INT(10) UNSIGNED NOT NULL,
	`start_credit` INT(10) UNSIGNED NOT NULL,
	`result_credit` INT(10) UNSIGNED NOT NULL,
	`credit_in` INT(10) UNSIGNED NOT NULL,
	`credit_out` INT(10) UNSIGNED NOT NULL,
	`credit_type` INT(10) UNSIGNED NOT NULL,
	`original_bet` INT(10) UNSIGNED NOT NULL,
	`bet` INT(10) UNSIGNED NOT NULL,
	`win` INT(10) UNSIGNED NOT NULL,
	`jp1_win` INT(11) UNSIGNED NOT NULL,
	`jp2_win` INT(11) UNSIGNED NOT NULL,
	`jp3_win` INT(11) UNSIGNED NOT NULL,
	`jp4_win` INT(11) UNSIGNED NOT NULL,
	`game_type` INT(10) UNSIGNED NOT NULL,
	`memo` JSON NULL,
	`created_time` DATETIME NOT NULL,
	`update_time` DATETIME NOT NULL,
	`calculated_created_date` DATETIME NULL
) ENGINE=MyISAM;

-- 傾印  檢視 pcb.v_operations 結構
DROP VIEW IF EXISTS `v_operations`;
-- 移除臨時表格，並創建最終檢視結構
DROP TABLE IF EXISTS `v_operations`;
CREATE ALGORITHM=MERGE DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `v_operations` AS select `transactions`.`id` AS `id`,`transactions`.`pcb_id` AS `pcb_id`,`transactions`.`round_id` AS `round_id`,`transactions`.`currency_id` AS `currency_id`,`transactions`.`money_to_credit_radio` AS `money_to_credit_radio`,`transactions`.`transaction_type` AS `transaction_type`,`transactions`.`start_credit` AS `start_credit`,`transactions`.`result_credit` AS `result_credit`,`transactions`.`credit_in` AS `credit_in`,`transactions`.`credit_out` AS `credit_out`,`transactions`.`credit_type` AS `credit_type`,`transactions`.`original_bet` AS `original_bet`,`transactions`.`bet` AS `bet`,`transactions`.`win` AS `win`,`transactions`.`jp1_win` AS `jp1_win`,`transactions`.`jp2_win` AS `jp2_win`,`transactions`.`jp3_win` AS `jp3_win`,`transactions`.`jp4_win` AS `jp4_win`,`transactions`.`game_type` AS `game_type`,`transactions`.`memo` AS `memo`,`transactions`.`created_time` AS `created_time`,`transactions`.`update_time` AS `update_time`,(`transactions`.`created_time` + interval -(6) hour) AS `calculated_created_date` from `transactions`;

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
